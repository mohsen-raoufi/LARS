<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_text_element" kind="class" language="C++" prot="public">
    <compoundname>QCPTextElement</compoundname>
    <basecompoundref refid="class_q_c_p_layout_element" prot="public" virt="non-virtual">QCPLayoutElement</basecompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_text_element_1a2ef3d8f044b2a0520c90561b3b533028" prot="protected" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QCPTextElement::mText</definition>
        <argsstring></argsstring>
        <name>mText</name>
        <qualifiedname>QCPTextElement::mText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5284" column="11" bodyfile="qcustomplot.h" bodystart="5284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a221eb95ecda1056eb79d56f1230f45d5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QCPTextElement::mTextFlags</definition>
        <argsstring></argsstring>
        <name>mTextFlags</name>
        <qualifiedname>QCPTextElement::mTextFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5285" column="7" bodyfile="qcustomplot.h" bodystart="5285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a2fef52fa1ec006799102b2956133ba29" prot="protected" static="no" mutable="no">
        <type>QFont</type>
        <definition>QFont QCPTextElement::mFont</definition>
        <argsstring></argsstring>
        <name>mFont</name>
        <qualifiedname>QCPTextElement::mFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5286" column="9" bodyfile="qcustomplot.h" bodystart="5286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a3685263a99eacd98b180d29adc8e8830" prot="protected" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor QCPTextElement::mTextColor</definition>
        <argsstring></argsstring>
        <name>mTextColor</name>
        <qualifiedname>QCPTextElement::mTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5287" column="10" bodyfile="qcustomplot.h" bodystart="5287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a5d242628c9c4beb361b82676c4851c38" prot="protected" static="no" mutable="no">
        <type>QFont</type>
        <definition>QFont QCPTextElement::mSelectedFont</definition>
        <argsstring></argsstring>
        <name>mSelectedFont</name>
        <qualifiedname>QCPTextElement::mSelectedFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5288" column="9" bodyfile="qcustomplot.h" bodystart="5288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1ad523a852d47bc97b1af62a4d0dedf2ad" prot="protected" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor QCPTextElement::mSelectedTextColor</definition>
        <argsstring></argsstring>
        <name>mSelectedTextColor</name>
        <qualifiedname>QCPTextElement::mSelectedTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5289" column="10" bodyfile="qcustomplot.h" bodystart="5289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a226bb09aae41b1d106f6b00d52def0cb" prot="protected" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect QCPTextElement::mTextBoundingRect</definition>
        <argsstring></argsstring>
        <name>mTextBoundingRect</name>
        <qualifiedname>QCPTextElement::mTextBoundingRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5290" column="9" bodyfile="qcustomplot.h" bodystart="5290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a112e8f9898991fe54f94fcb7effddc2f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPTextElement::mSelectable</definition>
        <argsstring></argsstring>
        <name>mSelectable</name>
        <qualifiedname>QCPTextElement::mSelectable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5291" column="8" bodyfile="qcustomplot.h" bodystart="5291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_text_element_1a7a46eb67459a3c8c80d19aa28b8ae791" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPTextElement::mSelected</definition>
        <argsstring></argsstring>
        <name>mSelected</name>
        <qualifiedname>QCPTextElement::mSelected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5291" column="20" bodyfile="qcustomplot.h" bodystart="5291" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPTextElement::QCPTextElement</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>QCPTextElement</name>
        <qualifiedname>QCPTextElement::QCPTextElement</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Creates a new <ref refid="class_q_c_p_text_element" kindref="compound">QCPTextElement</ref> instance and sets default values. The initial text is empty (<ref refid="class_q_c_p_text_element_1ac44b81e69e719b879eb2feecb33557e2" kindref="member">setText</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5244" column="12" bodyfile="qcustomplot.cpp" bodystart="19660" bodyend="19677"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a00f08a8a3363ad8d7d12ca0db4922b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPTextElement::QCPTextElement</definition>
        <argsstring>(QCustomPlot *parentPlot, const QString &amp;text)</argsstring>
        <name>QCPTextElement</name>
        <qualifiedname>QCPTextElement::QCPTextElement</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Creates a new <ref refid="class_q_c_p_text_element" kindref="compound">QCPTextElement</ref> instance and sets default values.</para>
<para>The initial text is set to <emphasis>text</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5245" column="3" bodyfile="qcustomplot.cpp" bodystart="19685" bodyend="19702"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a2684e65def4a5daf80be9f5f149ca9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPTextElement::QCPTextElement</definition>
        <argsstring>(QCustomPlot *parentPlot, const QString &amp;text, double pointSize)</argsstring>
        <name>QCPTextElement</name>
        <qualifiedname>QCPTextElement::QCPTextElement</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pointSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Creates a new <ref refid="class_q_c_p_text_element" kindref="compound">QCPTextElement</ref> instance and sets default values.</para>
<para>The initial text is set to <emphasis>text</emphasis> with <emphasis>pointSize</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5246" column="3" bodyfile="qcustomplot.cpp" bodystart="19710" bodyend="19730"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1adb4bcd3743dbfabfedee4fe9c2ee93da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPTextElement::QCPTextElement</definition>
        <argsstring>(QCustomPlot *parentPlot, const QString &amp;text, const QString &amp;fontFamily, double pointSize)</argsstring>
        <name>QCPTextElement</name>
        <qualifiedname>QCPTextElement::QCPTextElement</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>fontFamily</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pointSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Creates a new <ref refid="class_q_c_p_text_element" kindref="compound">QCPTextElement</ref> instance and sets default values.</para>
<para>The initial text is set to <emphasis>text</emphasis> with <emphasis>pointSize</emphasis> and the specified <emphasis>fontFamily</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5247" column="3" bodyfile="qcustomplot.cpp" bodystart="19738" bodyend="19751"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a00b75787b77b39bbd083813c2a7b2520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPTextElement::QCPTextElement</definition>
        <argsstring>(QCustomPlot *parentPlot, const QString &amp;text, const QFont &amp;font)</argsstring>
        <name>QCPTextElement</name>
        <qualifiedname>QCPTextElement::QCPTextElement</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Creates a new <ref refid="class_q_c_p_text_element" kindref="compound">QCPTextElement</ref> instance and sets default values.</para>
<para>The initial text is set to <emphasis>text</emphasis> with the specified <emphasis>font</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5248" column="3" bodyfile="qcustomplot.cpp" bodystart="19759" bodyend="19771"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a453c24723b76fdcae405a8a7b0d02614" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QCPTextElement::text</definition>
        <argsstring>() const</argsstring>
        <name>text</name>
        <qualifiedname>QCPTextElement::text</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5251" column="11" bodyfile="qcustomplot.h" bodystart="5251" bodyend="5251"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a1937ed3b7454d7e815f6027895a7d480" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QCPTextElement::textFlags</definition>
        <argsstring>() const</argsstring>
        <name>textFlags</name>
        <qualifiedname>QCPTextElement::textFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5252" column="7" bodyfile="qcustomplot.h" bodystart="5252" bodyend="5252"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a9247189a1c2b2bf5604645a7396b2ddc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QCPTextElement::font</definition>
        <argsstring>() const</argsstring>
        <name>font</name>
        <qualifiedname>QCPTextElement::font</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5253" column="9" bodyfile="qcustomplot.h" bodystart="5253" bodyend="5253"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a4b906c81abb94517500dbdb2fe9c22b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QCPTextElement::textColor</definition>
        <argsstring>() const</argsstring>
        <name>textColor</name>
        <qualifiedname>QCPTextElement::textColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5254" column="10" bodyfile="qcustomplot.h" bodystart="5254" bodyend="5254"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a7119d960bdf57df74f9bcc748d2a0b43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QCPTextElement::selectedFont</definition>
        <argsstring>() const</argsstring>
        <name>selectedFont</name>
        <qualifiedname>QCPTextElement::selectedFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5255" column="9" bodyfile="qcustomplot.h" bodystart="5255" bodyend="5255"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a98616fa5c33f1eaee0428191ece39686" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QCPTextElement::selectedTextColor</definition>
        <argsstring>() const</argsstring>
        <name>selectedTextColor</name>
        <qualifiedname>QCPTextElement::selectedTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5256" column="10" bodyfile="qcustomplot.h" bodystart="5256" bodyend="5256"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a96e2a712fca40324a8489f75833b4096" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPTextElement::selectable</definition>
        <argsstring>() const</argsstring>
        <name>selectable</name>
        <qualifiedname>QCPTextElement::selectable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5257" column="8" bodyfile="qcustomplot.h" bodystart="5257" bodyend="5257"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a135d1ad0aa97a245b4247c3292ff551c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPTextElement::selected</definition>
        <argsstring>() const</argsstring>
        <name>selected</name>
        <qualifiedname>QCPTextElement::selected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5258" column="8" bodyfile="qcustomplot.h" bodystart="5258" bodyend="5258"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1ac44b81e69e719b879eb2feecb33557e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::setText</definition>
        <argsstring>(const QString &amp;text)</argsstring>
        <name>setText</name>
        <qualifiedname>QCPTextElement::setText</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the text that will be displayed to <emphasis>text</emphasis>. Multiple lines can be created by insertion of &quot;\n&quot;.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" kindref="member">setFont</ref>, <ref refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" kindref="member">setTextColor</ref>, <ref refid="class_q_c_p_text_element_1ab908f437f552020888a3ad8cf8242605" kindref="member">setTextFlags</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5261" column="8" bodyfile="qcustomplot.cpp" bodystart="19778" bodyend="19781"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1ab908f437f552020888a3ad8cf8242605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::setTextFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>setTextFlags</name>
        <qualifiedname>QCPTextElement::setTextFlags</qualifiedname>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets options for text alignment and wrapping behaviour. <emphasis>flags</emphasis> is a bitwise OR-combination of <computeroutput>Qt::AlignmentFlag</computeroutput> and <computeroutput>Qt::TextFlag</computeroutput> enums.</para>
<para>Possible enums are:<itemizedlist>
<listitem><para>Qt::AlignLeft</para>
</listitem><listitem><para>Qt::AlignRight</para>
</listitem><listitem><para>Qt::AlignHCenter</para>
</listitem><listitem><para>Qt::AlignJustify</para>
</listitem><listitem><para>Qt::AlignTop</para>
</listitem><listitem><para>Qt::AlignBottom</para>
</listitem><listitem><para>Qt::AlignVCenter</para>
</listitem><listitem><para>Qt::AlignCenter</para>
</listitem><listitem><para>Qt::TextDontClip</para>
</listitem><listitem><para>Qt::TextSingleLine</para>
</listitem><listitem><para>Qt::TextExpandTabs</para>
</listitem><listitem><para>Qt::TextShowMnemonic</para>
</listitem><listitem><para>Qt::TextWordWrap</para>
</listitem><listitem><para>Qt::TextIncludeTrailingSpaces </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5262" column="8" bodyfile="qcustomplot.cpp" bodystart="19803" bodyend="19806"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::setFont</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>setFont</name>
        <qualifiedname>QCPTextElement::setFont</qualifiedname>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>font</emphasis> of the text.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" kindref="member">setTextColor</ref>, <ref refid="class_q_c_p_text_element_1a0a2397a3c4ede519e16ab3e991904065" kindref="member">setSelectedFont</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5263" column="8" bodyfile="qcustomplot.cpp" bodystart="19813" bodyend="19816"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::setTextColor</definition>
        <argsstring>(const QColor &amp;color)</argsstring>
        <name>setTextColor</name>
        <qualifiedname>QCPTextElement::setTextColor</qualifiedname>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>color</emphasis> of the text.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" kindref="member">setFont</ref>, <ref refid="class_q_c_p_text_element_1abaec200cae70a0eade53583defc0476d" kindref="member">setSelectedTextColor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5264" column="8" bodyfile="qcustomplot.cpp" bodystart="19823" bodyend="19826"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a0a2397a3c4ede519e16ab3e991904065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::setSelectedFont</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>setSelectedFont</name>
        <qualifiedname>QCPTextElement::setSelectedFont</qualifiedname>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>font</emphasis> of the text that will be used if the text element is selected (<ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref>).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" kindref="member">setFont</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5265" column="8" bodyfile="qcustomplot.cpp" bodystart="19833" bodyend="19836"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1abaec200cae70a0eade53583defc0476d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::setSelectedTextColor</definition>
        <argsstring>(const QColor &amp;color)</argsstring>
        <name>setSelectedTextColor</name>
        <qualifiedname>QCPTextElement::setSelectedTextColor</qualifiedname>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>color</emphasis> of the text that will be used if the text element is selected (<ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref>).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" kindref="member">setTextColor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5266" column="8" bodyfile="qcustomplot.cpp" bodystart="19843" bodyend="19846"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SLOT void</type>
        <definition>void QCPTextElement::setSelectable</definition>
        <argsstring>(bool selectable)</argsstring>
        <name>setSelectable</name>
        <qualifiedname>QCPTextElement::setSelectable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selectable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether the user may select this text element.</para>
<para>Note that even when <emphasis>selectable</emphasis> is set to <computeroutput>false</computeroutput>, the selection state may be changed programmatically via <ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5267" column="15" bodyfile="qcustomplot.cpp" bodystart="19854" bodyend="19861"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SLOT void</type>
        <definition>void QCPTextElement::setSelected</definition>
        <argsstring>(bool selected)</argsstring>
        <name>setSelected</name>
        <qualifiedname>QCPTextElement::setSelected</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the selection state of this text element to <emphasis>selected</emphasis>. If the selection has changed, <ref refid="class_q_c_p_text_element_1a49f45b87ee9c1fe866c2cdd12af17a9a" kindref="member">selectionChanged</ref> is emitted.</para>
<para>Note that this function can change the selection state independently of the current <ref refid="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" kindref="member">setSelectable</ref> state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5268" column="15" bodyfile="qcustomplot.cpp" bodystart="19870" bodyend="19877"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a29e95d6cfd9e28772ce6a8890a2c8889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPTextElement::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE</argsstring>
        <name>selectTest</name>
        <qualifiedname>QCPTextElement::selectTest</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1a62d60f1b0ee9bb23e38811d71586d79c">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 0.99*selectionTolerance (see <ref refid="class_q_custom_plot_1a4dc31241d7b09680950e19e5f971ed93" kindref="member">QCustomPlot::setSelectionTolerance</ref>) when <emphasis>pos</emphasis> is within the bounding box of the text element&apos;s text. Note that this bounding box is updated in the draw call.</para>
<para>If <emphasis>pos</emphasis> is outside the text&apos;s bounding box or if <emphasis>onlySelectable</emphasis> is true and this text element is not selectable (<ref refid="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" kindref="member">setSelectable</ref>), returns -1.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5271" column="18" bodyfile="qcustomplot.cpp" bodystart="19949" bodyend="19959"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1ad7b2c98355e3d2f912574b74fcee0574" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::mousePressEvent</definition>
        <argsstring>(QMouseEvent *event, const QVariant &amp;details) Q_DECL_OVERRIDE</argsstring>
        <name>mousePressEvent</name>
        <qualifiedname>QCPTextElement::mousePressEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376">mousePressEvent</reimplements>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accepts the mouse event in order to emit the according click signal in the <ref refid="class_q_c_p_text_element_1acfcbaf9b1da18745e72726aafb39c855" kindref="member">mouseReleaseEvent</ref>.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5272" column="16" bodyfile="qcustomplot.cpp" bodystart="19967" bodyend="19971"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1acfcbaf9b1da18745e72726aafb39c855" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::mouseReleaseEvent</definition>
        <argsstring>(QMouseEvent *event, const QPointF &amp;startPos) Q_DECL_OVERRIDE</argsstring>
        <name>mouseReleaseEvent</name>
        <qualifiedname>QCPTextElement::mouseReleaseEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c">mouseReleaseEvent</reimplements>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>startPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emits the <ref refid="class_q_c_p_text_element_1ad2246a0e701c0655623f048737298334" kindref="member">clicked</ref> signal if the cursor hasn&apos;t moved by more than a few pixels since the <ref refid="class_q_c_p_text_element_1ad7b2c98355e3d2f912574b74fcee0574" kindref="member">mousePressEvent</ref>.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5273" column="16" bodyfile="qcustomplot.cpp" bodystart="19979" bodyend="19983"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a2272ff775ab385f612e9fd39773de7c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::mouseDoubleClickEvent</definition>
        <argsstring>(QMouseEvent *event, const QVariant &amp;details) Q_DECL_OVERRIDE</argsstring>
        <name>mouseDoubleClickEvent</name>
        <qualifiedname>QCPTextElement::mouseDoubleClickEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81">mouseDoubleClickEvent</reimplements>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emits the <ref refid="class_q_c_p_text_element_1a9c6fd27ae8a7c3a02df7a6bbd3509e40" kindref="member">doubleClicked</ref> signal.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5274" column="16" bodyfile="qcustomplot.cpp" bodystart="19990" bodyend="19994"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_q_c_p_text_element_1a49f45b87ee9c1fe866c2cdd12af17a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::selectionChanged</definition>
        <argsstring>(bool selected)</argsstring>
        <name>selectionChanged</name>
        <qualifiedname>QCPTextElement::selectionChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the selection state has changed to <emphasis>selected</emphasis>, either by user interaction or by a direct call to <ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref>, <ref refid="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" kindref="member">setSelectable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5277" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_text_element_1ac4567260b52d02bfbad63357d13986c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::selectableChanged</definition>
        <argsstring>(bool selectable)</argsstring>
        <name>selectableChanged</name>
        <qualifiedname>QCPTextElement::selectableChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selectable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5278" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_text_element_1ad2246a0e701c0655623f048737298334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::clicked</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>clicked</name>
        <qualifiedname>QCPTextElement::clicked</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the text element is clicked.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1a9c6fd27ae8a7c3a02df7a6bbd3509e40" kindref="member">doubleClicked</ref>, <ref refid="class_q_c_p_text_element_1a29e95d6cfd9e28772ce6a8890a2c8889" kindref="member">selectTest</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5279" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_text_element_1a9c6fd27ae8a7c3a02df7a6bbd3509e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPTextElement::doubleClicked</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>doubleClicked</name>
        <qualifiedname>QCPTextElement::doubleClicked</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the text element is double clicked.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_text_element_1ad2246a0e701c0655623f048737298334" kindref="member">clicked</ref>, <ref refid="class_q_c_p_text_element_1a29e95d6cfd9e28772ce6a8890a2c8889" kindref="member">selectTest</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5280" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_text_element_1a91f2e4b4a639d9079e89a0030c7ed352" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::applyDefaultAntialiasingHint</definition>
        <argsstring>(QCPPainter *painter) const Q_DECL_OVERRIDE</argsstring>
        <name>applyDefaultAntialiasingHint</name>
        <qualifiedname>QCPTextElement::applyDefaultAntialiasingHint</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1a0a8f18141bcf46cf40ad4c13324ff346">applyDefaultAntialiasingHint</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5294" column="16" bodyfile="qcustomplot.cpp" bodystart="19880" bodyend="19883"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1ad1dae61ea77ae74841f3c2fb765fc88e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::draw</definition>
        <argsstring>(QCPPainter *painter) Q_DECL_OVERRIDE</argsstring>
        <name>draw</name>
        <qualifiedname>QCPTextElement::draw</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1ad1c597b1d608cfdd86e7b76819a94cfb">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5295" column="16" bodyfile="qcustomplot.cpp" bodystart="19886" bodyend="19891"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a47b8541f55ff520c557e0f27461f109e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSize</type>
        <definition>QSize QCPTextElement::minimumOuterSizeHint</definition>
        <argsstring>() const Q_DECL_OVERRIDE</argsstring>
        <name>minimumOuterSizeHint</name>
        <qualifiedname>QCPTextElement::minimumOuterSizeHint</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1a46789036c4fcb190fa374f91321d7c09">minimumOuterSizeHint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the suggested minimum size this layout element (the <ref refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" kindref="member">outerRect</ref>) may be compressed to, if no manual minimum size is set.</para>
<para>if a minimum size (<ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">setMinimumSize</ref>) was not set manually, parent layouts use the returned size (usually indirectly through QCPLayout::getFinalMinimumOuterSize) to determine the minimum allowed size of this layout element.</para>
<para>A manual minimum size is considered set if it is non-zero.</para>
<para>The default implementation simply returns the sum of the horizontal margins for the width and the sum of the vertical margins for the height. Reimplementations may use their detailed knowledge about the layout element&apos;s content to provide size hints. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5296" column="17" bodyfile="qcustomplot.cpp" bodystart="19894" bodyend="19901"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1ae82475b50c10a5b3314d996d50ae536b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSize</type>
        <definition>QSize QCPTextElement::maximumOuterSizeHint</definition>
        <argsstring>() const Q_DECL_OVERRIDE</argsstring>
        <name>maximumOuterSizeHint</name>
        <qualifiedname>QCPTextElement::maximumOuterSizeHint</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1ad96efb977a26e360e8a64a4c1e56456d">maximumOuterSizeHint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the suggested maximum size this layout element (the <ref refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" kindref="member">outerRect</ref>) may be expanded to, if no manual maximum size is set.</para>
<para>if a maximum size (<ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">setMaximumSize</ref>) was not set manually, parent layouts use the returned size (usually indirectly through QCPLayout::getFinalMaximumOuterSize) to determine the maximum allowed size of this layout element.</para>
<para>A manual maximum size is considered set if it is smaller than Qt&apos;s <computeroutput>QWIDGETSIZE_MAX</computeroutput>.</para>
<para>The default implementation simply returns <computeroutput>QWIDGETSIZE_MAX</computeroutput> for both width and height, implying no suggested maximum size. Reimplementations may use their detailed knowledge about the layout element&apos;s content to provide size hints. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5297" column="17" bodyfile="qcustomplot.cpp" bodystart="19904" bodyend="19911"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a8d696ea82fa7bf743e01858039c03525" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::selectEvent</definition>
        <argsstring>(QMouseEvent *event, bool additive, const QVariant &amp;details, bool *selectionStateChanged) Q_DECL_OVERRIDE</argsstring>
        <name>selectEvent</name>
        <qualifiedname>QCPTextElement::selectEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91">selectEvent</reimplements>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>additive</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>selectionStateChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5299" column="16" bodyfile="qcustomplot.cpp" bodystart="19914" bodyend="19925"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a9a631a9deb9d82089a9d52de1744accf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPTextElement::deselectEvent</definition>
        <argsstring>(bool *selectionStateChanged) Q_DECL_OVERRIDE</argsstring>
        <name>deselectEvent</name>
        <qualifiedname>QCPTextElement::deselectEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee">deselectEvent</reimplements>
        <param>
          <type>bool *</type>
          <declname>selectionStateChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5300" column="16" bodyfile="qcustomplot.cpp" bodystart="19928" bodyend="19937"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1ae236bd398e52939f2de2b70e5e2ba611" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QCPTextElement::mainFont</definition>
        <argsstring>() const</argsstring>
        <name>mainFont</name>
        <qualifiedname>QCPTextElement::mainFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5303" column="9" bodyfile="qcustomplot.cpp" bodystart="20001" bodyend="20004"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_text_element_1a63510789e31db34362de97d78e9e7866" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QCPTextElement::mainTextColor</definition>
        <argsstring>() const</argsstring>
        <name>mainTextColor</name>
        <qualifiedname>QCPTextElement::mainTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5304" column="10" bodyfile="qcustomplot.cpp" bodystart="20011" bodyend="20014"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A layout element displaying a text. </para>
    </briefdescription>
    <detaileddescription>
<para>The text may be specified with <ref refid="class_q_c_p_text_element_1ac44b81e69e719b879eb2feecb33557e2" kindref="member">setText</ref>, the formatting can be controlled with <ref refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" kindref="member">setFont</ref>, <ref refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" kindref="member">setTextColor</ref>, and <ref refid="class_q_c_p_text_element_1ab908f437f552020888a3ad8cf8242605" kindref="member">setTextFlags</ref>.</para>
<para>A text element can be added as follows: <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPTextElement</label>
        <link refid="class_q_c_p_text_element"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="14" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="11">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="18">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPTextElement</label>
        <link refid="class_q_c_p_text_element"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="6">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="5231" column="1" bodyfile="qcustomplot.h" bodystart="5232" bodyend="5308"/>
    <listofallmembers>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_text_element_1a91f2e4b4a639d9079e89a0030c7ed352" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_layout_element_1a2585bc8c5cc70ee712909751a2fc8909" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>autoMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>calculateAutoMargin</name></member>
      <member refid="class_q_c_p_text_element_1ad2246a0e701c0655623f048737298334" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>clicked</name></member>
      <member refid="class_q_c_p_layerable_1acbcfc9ecc75433747b1978a77b1864b3" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_text_element_1a9a631a9deb9d82089a9d52de1744accf" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_text_element_1a9c6fd27ae8a7c3a02df7a6bbd3509e40" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>doubleClicked</name></member>
      <member refid="class_q_c_p_text_element_1ad1dae61ea77ae74841f3c2fb765fc88e" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>draw</name></member>
      <member refid="class_q_c_p_layout_element_1a76dec8cb31e498994a944d7647a43309" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>elements</name></member>
      <member refid="class_q_c_p_text_element_1a9247189a1c2b2bf5604645a7396b2ddc" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>font</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>layout</name></member>
      <member refid="class_q_c_p_layout_element_1a765f041a73af0c2de41b41a5a03e31a4" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>layoutChanged</name></member>
      <member refid="class_q_c_p_text_element_1ae236bd398e52939f2de2b70e5e2ba611" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mainFont</name></member>
      <member refid="class_q_c_p_text_element_1a63510789e31db34362de97d78e9e7866" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mainTextColor</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_layout_element_1aa5513622910f31d9309f87886bee597a" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>marginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1acdd2c6b2ffb1c712e3bb3014fdec2e1b" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>marginGroups</name></member>
      <member refid="class_q_c_p_layout_element_1af4ac9450aa2d60863bf3a8ea0c940c9d" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>margins</name></member>
      <member refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mAutoMargins</name></member>
      <member refid="class_q_c_p_text_element_1ae82475b50c10a5b3314d996d50ae536b" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>maximumOuterSizeHint</name></member>
      <member refid="class_q_c_p_layout_element_1afb9503858d4aa0f3b9f1794b084fb40a" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>maximumSize</name></member>
      <member refid="class_q_c_p_text_element_1a2fef52fa1ec006799102b2956133ba29" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mFont</name></member>
      <member refid="class_q_c_p_layout_element_1a5eae30e28f28d73fd1c56409c011393e" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>minimumMargins</name></member>
      <member refid="class_q_c_p_text_element_1a47b8541f55ff520c557e0f27461f109e" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>minimumOuterSizeHint</name></member>
      <member refid="class_q_c_p_layout_element_1a60d4295468a2b57fe91f6f68e20c3993" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>minimumSize</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mMarginGroups</name></member>
      <member refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mMinimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mMinimumSize</name></member>
      <member refid="class_q_c_p_text_element_1a2272ff775ab385f612e9fd39773de7c0" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_text_element_1ad7b2c98355e3d2f912574b74fcee0574" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_text_element_1acfcbaf9b1da18745e72726aafb39c855" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mOuterRect</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mParentLayout</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mRect</name></member>
      <member refid="class_q_c_p_text_element_1a112e8f9898991fe54f94fcb7effddc2f" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mSelectable</name></member>
      <member refid="class_q_c_p_text_element_1a7a46eb67459a3c8c80d19aa28b8ae791" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mSelected</name></member>
      <member refid="class_q_c_p_text_element_1a5d242628c9c4beb361b82676c4851c38" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mSelectedFont</name></member>
      <member refid="class_q_c_p_text_element_1ad523a852d47bc97b1af62a4d0dedf2ad" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mSelectedTextColor</name></member>
      <member refid="class_q_c_p_layout_element_1acc012635b1ae178ff3c4da8a3af303a2" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mSizeConstraintRect</name></member>
      <member refid="class_q_c_p_text_element_1a2ef3d8f044b2a0520c90561b3b533028" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mText</name></member>
      <member refid="class_q_c_p_text_element_1a226bb09aae41b1d106f6b00d52def0cb" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mTextBoundingRect</name></member>
      <member refid="class_q_c_p_text_element_1a3685263a99eacd98b180d29adc8e8830" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mTextColor</name></member>
      <member refid="class_q_c_p_text_element_1a221eb95ecda1056eb79d56f1230f45d5" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mTextFlags</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>outerRect</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layout_element_1ab4bb5c5a958451f5f153fdce350f13cf" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPLayoutElement</name></member>
      <member refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPTextElement</name></member>
      <member refid="class_q_c_p_text_element_1a00f08a8a3363ad8d7d12ca0db4922b6b" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPTextElement</name></member>
      <member refid="class_q_c_p_text_element_1a2684e65def4a5daf80be9f5f149ca9b2" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPTextElement</name></member>
      <member refid="class_q_c_p_text_element_1adb4bcd3743dbfabfedee4fe9c2ee93da" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPTextElement</name></member>
      <member refid="class_q_c_p_text_element_1a00b75787b77b39bbd083813c2a7b2520" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>QCPTextElement</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>rect</name></member>
      <member refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aa7fa7e25cd23758b9915c64ed9f1be26c" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>scrInnerRect</name></member>
      <member refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aabe2745b41a6131ed194e13591b08e04d" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>scrOuterRect</name></member>
      <member refid="class_q_c_p_text_element_1a96e2a712fca40324a8489f75833b4096" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>selectable</name></member>
      <member refid="class_q_c_p_text_element_1ac4567260b52d02bfbad63357d13986c5" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_text_element_1a135d1ad0aa97a245b4247c3292ff551c" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>selected</name></member>
      <member refid="class_q_c_p_text_element_1a7119d960bdf57df74f9bcc748d2a0b43" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>selectedFont</name></member>
      <member refid="class_q_c_p_text_element_1a98616fa5c33f1eaee0428191ece39686" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>selectedTextColor</name></member>
      <member refid="class_q_c_p_text_element_1a8d696ea82fa7bf743e01858039c03525" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_layerable_1a908c9edda761886f33893be326dab77d" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_text_element_1a49f45b87ee9c1fe866c2cdd12af17a9a" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_text_element_1a29e95d6cfd9e28772ce6a8890a2c8889" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setAutoMargins</name></member>
      <member refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setFont</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMarginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a03e0e9c48f230217c529b0819f832d84" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMinimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a8e0447614a0bf92de9a7304588c6b96e" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setOuterRect</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPTextElement</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setSelectable</name></member>
      <member refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setSelected</name></member>
      <member refid="class_q_c_p_text_element_1a0a2397a3c4ede519e16ab3e991904065" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setSelectedFont</name></member>
      <member refid="class_q_c_p_text_element_1abaec200cae70a0eade53583defc0476d" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setSelectedTextColor</name></member>
      <member refid="class_q_c_p_layout_element_1a361666cdcc6fbfd37344cc44be746b0f" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setSizeConstraintRect</name></member>
      <member refid="class_q_c_p_text_element_1ac44b81e69e719b879eb2feecb33557e2" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setText</name></member>
      <member refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setTextColor</name></member>
      <member refid="class_q_c_p_text_element_1ab908f437f552020888a3ad8cf8242605" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setTextFlags</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2a" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>SizeConstraintRect</name></member>
      <member refid="class_q_c_p_layout_element_1a66136f121ee3e1c933b748761203cab4" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>sizeConstraintRect</name></member>
      <member refid="class_q_c_p_text_element_1a453c24723b76fdcae405a8a7b0d02614" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>text</name></member>
      <member refid="class_q_c_p_text_element_1a4b906c81abb94517500dbdb2fe9c22b9" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>textColor</name></member>
      <member refid="class_q_c_p_text_element_1a1937ed3b7454d7e815f6027895a7d480" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>textFlags</name></member>
      <member refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>update</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>UpdatePhase</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>upLayout</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>upMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>upPreparation</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPTextElement</scope><name>visible</name></member>
      <member refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" virt="virtual"><scope>QCPTextElement</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>~QCPLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1a2fa26d3d22a2854c4da1d80f188db961" prot="public" virt="virtual"><scope>QCPTextElement</scope><name>~QCPLayoutElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
