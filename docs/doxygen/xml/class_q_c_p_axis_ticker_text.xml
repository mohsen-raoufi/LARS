<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_axis_ticker_text" kind="class" language="C++" prot="public">
    <compoundname>QCPAxisTickerText</compoundname>
    <basecompoundref refid="class_q_c_p_axis_ticker" prot="public" virt="non-virtual">QCPAxisTicker</basecompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_text_1a27c48539feb6c293979cd8059ba220c3" prot="protected" static="no" mutable="no">
        <type>QMap&lt; double, QString &gt;</type>
        <definition>QMap&lt;double, QString&gt; QCPAxisTickerText::mTicks</definition>
        <argsstring></argsstring>
        <name>mTicks</name>
        <qualifiedname>QCPAxisTickerText::mTicks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1927" column="8" bodyfile="qcustomplot.h" bodystart="1927" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_text_1a206d092b1598eecb981bba7fb16ff44e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QCPAxisTickerText::mSubTickCount</definition>
        <argsstring></argsstring>
        <name>mSubTickCount</name>
        <qualifiedname>QCPAxisTickerText::mSubTickCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1928" column="7" bodyfile="qcustomplot.h" bodystart="1928" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a1d7243b1256c1aa9d1d5b99b2e84e648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPAxisTickerText::QCPAxisTickerText</definition>
        <argsstring>()</argsstring>
        <name>QCPAxisTickerText</name>
        <qualifiedname>QCPAxisTickerText::QCPAxisTickerText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the ticker and sets reasonable default values. Axis tickers are commonly created managed by a QSharedPointer, which then can be passed to <ref refid="class_q_c_p_axis_1a4ee03fcd2c74d05cd1a419b9af5cfbdc" kindref="member">QCPAxis::setTicker</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1908" column="3" bodyfile="qcustomplot.cpp" bodystart="7227" bodyend="7230"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QMap&lt; double, QString &gt; &amp;</type>
        <definition>QMap&lt; double, QString &gt; &amp; QCPAxisTickerText::ticks</definition>
        <argsstring>()</argsstring>
        <name>ticks</name>
        <qualifiedname>QCPAxisTickerText::ticks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a non-const reference to the internal map which stores the tick coordinates and their labels.</para>
<para>You can access the map directly in order to add, remove or manipulate ticks, as an alternative to using the methods provided by <ref refid="class_q_c_p_axis_ticker_text" kindref="compound">QCPAxisTickerText</ref>, such as <ref refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" kindref="member">setTicks</ref> and <ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1911" column="8" bodyfile="qcustomplot.h" bodystart="1911" bodyend="1911"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a5c3c59e8fdf4c96568dd50d4a653e791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QCPAxisTickerText::subTickCount</definition>
        <argsstring>() const</argsstring>
        <name>subTickCount</name>
        <qualifiedname>QCPAxisTickerText::subTickCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1912" column="7" bodyfile="qcustomplot.h" bodystart="1912" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::setTicks</definition>
        <argsstring>(const QMap&lt; double, QString &gt; &amp;ticks)</argsstring>
        <name>setTicks</name>
        <qualifiedname>QCPAxisTickerText::setTicks</qualifiedname>
        <param>
          <type>const QMap&lt; double, QString &gt; &amp;</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Sets the ticks that shall appear on the axis. The map key of <emphasis>ticks</emphasis> corresponds to the axis coordinate, and the map value is the string that will appear as tick label.</para>
<para>An alternative to manipulate ticks is to directly access the internal storage with the <ref refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" kindref="member">ticks</ref> getter.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_text_1aba34051300eecaefbedb2df8feff2d45" kindref="member">addTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" kindref="member">clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1915" column="8" bodyfile="qcustomplot.cpp" bodystart="7242" bodyend="7245"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a686f38f358a0cf2d9309c84c22581d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::setTicks</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;positions, const QVector&lt; QString &gt; &amp;labels)</argsstring>
        <name>setTicks</name>
        <qualifiedname>QCPAxisTickerText::setTicks</qualifiedname>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <param>
          <type>const QVector&lt; QString &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Sets the ticks that shall appear on the axis. The entries of <emphasis>positions</emphasis> correspond to the axis coordinates, and the entries of <emphasis>labels</emphasis> are the respective strings that will appear as tick labels.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_text_1aba34051300eecaefbedb2df8feff2d45" kindref="member">addTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" kindref="member">clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1916" column="8" bodyfile="qcustomplot.cpp" bodystart="7255" bodyend="7259"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a8cfa50c51183c90186892eeef978d571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::setSubTickCount</definition>
        <argsstring>(int subTicks)</argsstring>
        <name>setSubTickCount</name>
        <qualifiedname>QCPAxisTickerText::setSubTickCount</qualifiedname>
        <param>
          <type>int</type>
          <declname>subTicks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the number of sub ticks that shall appear between ticks. For <ref refid="class_q_c_p_axis_ticker_text" kindref="compound">QCPAxisTickerText</ref>, there is no automatic sub tick count calculation. So if sub ticks are needed, they must be configured with this method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1917" column="8" bodyfile="qcustomplot.cpp" bodystart="7266" bodyend="7272"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>QCPAxisTickerText::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears all ticks.</para>
<para>An alternative to manipulate ticks is to directly access the internal storage with the <ref refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" kindref="member">ticks</ref> getter.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" kindref="member">setTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1aba34051300eecaefbedb2df8feff2d45" kindref="member">addTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1920" column="8" bodyfile="qcustomplot.cpp" bodystart="7282" bodyend="7285"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::addTick</definition>
        <argsstring>(double position, const QString &amp;label)</argsstring>
        <name>addTick</name>
        <qualifiedname>QCPAxisTickerText::addTick</qualifiedname>
        <param>
          <type>double</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a single tick to the axis at the given axis coordinate <emphasis>position</emphasis>, with the provided tick <emphasis>label</emphasis>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_text_1aba34051300eecaefbedb2df8feff2d45" kindref="member">addTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" kindref="member">setTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" kindref="member">clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1921" column="8" bodyfile="qcustomplot.cpp" bodystart="7293" bodyend="7296"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1aba34051300eecaefbedb2df8feff2d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::addTicks</definition>
        <argsstring>(const QMap&lt; double, QString &gt; &amp;ticks)</argsstring>
        <name>addTicks</name>
        <qualifiedname>QCPAxisTickerText::addTicks</qualifiedname>
        <param>
          <type>const QMap&lt; double, QString &gt; &amp;</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Adds the provided <emphasis>ticks</emphasis> to the ones already existing. The map key of <emphasis>ticks</emphasis> corresponds to the axis coordinate, and the map value is the string that will appear as tick label.</para>
<para>An alternative to manipulate ticks is to directly access the internal storage with the <ref refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" kindref="member">ticks</ref> getter.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" kindref="member">setTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" kindref="member">clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1922" column="8" bodyfile="qcustomplot.cpp" bodystart="7308" bodyend="7315"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a8140c730e20b0050e1b702af3db00b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerText::addTicks</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;positions, const QVector&lt; QString &gt; &amp;labels)</argsstring>
        <name>addTicks</name>
        <qualifiedname>QCPAxisTickerText::addTicks</qualifiedname>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <param>
          <type>const QVector&lt; QString &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Adds the provided ticks to the ones already existing. The entries of <emphasis>positions</emphasis> correspond to the axis coordinates, and the entries of <emphasis>labels</emphasis> are the respective strings that will appear as tick labels.</para>
<para>An alternative to manipulate ticks is to directly access the internal storage with the <ref refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" kindref="member">ticks</ref> getter.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" kindref="member">setTicks</ref>, <ref refid="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" kindref="member">clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1923" column="8" bodyfile="qcustomplot.cpp" bodystart="7328" bodyend="7335"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a628f16c41905e8c95c6622d6757a38c4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPAxisTickerText::getTickStep</definition>
        <argsstring>(const QCPRange &amp;range) Q_DECL_OVERRIDE</argsstring>
        <name>getTickStep</name>
        <qualifiedname>QCPAxisTickerText::getTickStep</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">getTickStep</reimplements>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Since the tick coordinates are provided externally, this method implementation does nothing.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1931" column="18" bodyfile="qcustomplot.cpp" bodystart="7342" bodyend="7347"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a9c2488b877776870239abda4c8106052" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QCPAxisTickerText::getSubTickCount</definition>
        <argsstring>(double tickStep) Q_DECL_OVERRIDE</argsstring>
        <name>getSubTickCount</name>
        <qualifiedname>QCPAxisTickerText::getSubTickCount</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1a4ccc403ced7a1457ce6ba293509933c8">getSubTickCount</reimplements>
        <param>
          <type>double</type>
          <declname>tickStep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the sub tick count that was configured with <ref refid="class_q_c_p_axis_ticker_text_1a8cfa50c51183c90186892eeef978d571" kindref="member">setSubTickCount</ref>.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1932" column="15" bodyfile="qcustomplot.cpp" bodystart="7354" bodyend="7358"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1a99247779a9c20bea1f50911117540a71" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QCPAxisTickerText::getTickLabel</definition>
        <argsstring>(double tick, const QLocale &amp;locale, QChar formatChar, int precision) Q_DECL_OVERRIDE</argsstring>
        <name>getTickLabel</name>
        <qualifiedname>QCPAxisTickerText::getTickLabel</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1a8201eb4aa8be192bf786b126eb5ee089">getTickLabel</reimplements>
        <param>
          <type>double</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const QLocale &amp;</type>
          <declname>locale</declname>
        </param>
        <param>
          <type>QChar</type>
          <declname>formatChar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the tick label which corresponds to the key <emphasis>tick</emphasis> in the internal tick storage. Since the labels are provided externally, <emphasis>locale</emphasis>, <emphasis>formatChar</emphasis>, and <emphasis>precision</emphasis> are ignored.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1933" column="19" bodyfile="qcustomplot.cpp" bodystart="7366" bodyend="7372"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_text_1aa195c4fd0364d0393f1798fb495d6a60" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVector&lt; double &gt;</type>
        <definition>QVector&lt; double &gt; QCPAxisTickerText::createTickVector</definition>
        <argsstring>(double tickStep, const QCPRange &amp;range) Q_DECL_OVERRIDE</argsstring>
        <name>createTickVector</name>
        <qualifiedname>QCPAxisTickerText::createTickVector</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1af4645a824c7bd2ca8fc7e86ebf9055bd">createTickVector</reimplements>
        <param>
          <type>double</type>
          <declname>tickStep</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the externally provided tick coordinates which are in the specified <emphasis>range</emphasis>. If available, one tick above and below the range is provided in addition, to allow possible sub tick calculation. The parameter <emphasis>tickStep</emphasis> is ignored.</para>
<para>\seebaseclassmethod </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1934" column="19" bodyfile="qcustomplot.cpp" bodystart="7381" bodyend="7397"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Specialized axis ticker which allows arbitrary labels at specified coordinates. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="axisticker-text.png"></image>
</para>
<para>This <ref refid="class_q_c_p_axis_ticker" kindref="compound">QCPAxisTicker</ref> subclass generates ticks which can be directly specified by the user as coordinates and associated strings. They can be passed as a whole with <ref refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" kindref="member">setTicks</ref> or one at a time with <ref refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" kindref="member">addTick</ref>. Alternatively you can directly access the internal storage via <ref refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" kindref="member">ticks</ref> and modify the tick/label data there.</para>
<para>This is useful for cases where the axis represents categories rather than numerical values.</para>
<para>If you are updating the ticks of this ticker regularly and in a dynamic fasion (e.g. dependent on the axis range), it is a sign that you should probably create an own ticker by subclassing <ref refid="class_q_c_p_axis_ticker" kindref="compound">QCPAxisTicker</ref>, instead of using this one.</para>
<para>The ticker can be created and assigned to an axis like this: <programlisting filename="documentation/doc-image-generator/mainwindow.cpp"></programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QCPAxisTicker</label>
        <link refid="class_q_c_p_axis_ticker"/>
      </node>
      <node id="1">
        <label>QCPAxisTickerText</label>
        <link refid="class_q_c_p_axis_ticker_text"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QCPAxisTicker</label>
        <link refid="class_q_c_p_axis_ticker"/>
      </node>
      <node id="1">
        <label>QCPAxisTickerText</label>
        <link refid="class_q_c_p_axis_ticker_text"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="1905" column="1" bodyfile="qcustomplot.h" bodystart="1906" bodyend="1935"/>
    <listofallmembers>
      <member refid="class_q_c_p_axis_ticker_text_1a3362873a48614e6d446c193548cb85e3" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>addTick</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1aba34051300eecaefbedb2df8feff2d45" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>addTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a8140c730e20b0050e1b702af3db00b2e" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>addTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_1ac7df6c72876b7abd67c932663a0b0f6a" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>cleanMantissa</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a21826d2fcd9a25c194d34d4f67aa1460" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>clear</name></member>
      <member refid="class_q_c_p_axis_ticker_1a804050e408f37a0b9770c6654ebe6aa7" prot="protected" virt="virtual"><scope>QCPAxisTickerText</scope><name>createLabelVector</name></member>
      <member refid="class_q_c_p_axis_ticker_1a9a6435723fa0bd366d1ea4c2cff7c33f" prot="protected" virt="virtual"><scope>QCPAxisTickerText</scope><name>createSubTickVector</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1aa195c4fd0364d0393f1798fb495d6a60" prot="protected" virt="virtual"><scope>QCPAxisTickerText</scope><name>createTickVector</name></member>
      <member refid="class_q_c_p_axis_ticker_1aefbd11725678ca824add8cf926cbc856" prot="public" virt="virtual"><scope>QCPAxisTickerText</scope><name>generate</name></member>
      <member refid="class_q_c_p_axis_ticker_1abe99aaaf6c512812869b0a19937c76ff" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>getMantissa</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a9c2488b877776870239abda4c8106052" prot="protected" virt="virtual"><scope>QCPAxisTickerText</scope><name>getSubTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a99247779a9c20bea1f50911117540a71" prot="protected" virt="virtual"><scope>QCPAxisTickerText</scope><name>getTickLabel</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a628f16c41905e8c95c6622d6757a38c4" prot="protected" virt="virtual"><scope>QCPAxisTickerText</scope><name>getTickStep</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a206d092b1598eecb981bba7fb16ff44e" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>mSubTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1a14a35b47d1aad11b08d18ea0e25937b8" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>mTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1a560ef9347b1aa599a9bf0e2f29d3ec16" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>mTickOrigin</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a27c48539feb6c293979cd8059ba220c3" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>mTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_1ac059d6d670b2f6132c593fb4de156701" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>mTickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_1a4ea0a7c4ca1c610f92b9bd5944ab4260" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>pickClosest</name></member>
      <member refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>QCPAxisTicker</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a1d7243b1256c1aa9d1d5b99b2e84e648" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>QCPAxisTickerText</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a8cfa50c51183c90186892eeef978d571" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>setSubTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1a47752abba8293e6dc18491501ae34008" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>setTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab509c7e500293bf66a8409f0d7c23943" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>setTickOrigin</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a8cdf1f21940f1f53f5e3d30b2c74f5cf" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>setTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a686f38f358a0cf2d9309c84c22581d9b" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>setTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>setTickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1a5c3c59e8fdf4c96568dd50d4a653e791" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>subTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1aaf9edbe4169ce55e216fd067cc139452" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>tickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1ac0c6e9587c36fdeefb5518c00fe7ab15" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>tickOrigin</name></member>
      <member refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>ticks</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>TickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_1a58df76f2ec3eb48401bdd314b0e14ba1" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>tickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab28cc1ab549489be7975f5ce7e717916" prot="protected" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>trimTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>tssMeetTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8" prot="public" virt="non-virtual"><scope>QCPAxisTickerText</scope><name>tssReadability</name></member>
      <member refid="class_q_c_p_axis_ticker_1a1119d6f09ad720f9c5dfdd2559047161" prot="public" virt="virtual"><scope>QCPAxisTickerText</scope><name>~QCPAxisTicker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
