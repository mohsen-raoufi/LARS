<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_legend" kind="class" language="C++" prot="public">
    <compoundname>QCPLegend</compoundname>
    <basecompoundref refid="class_q_c_p_layout_grid" prot="public" virt="non-virtual">QCPLayoutGrid</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" prot="public" static="no" strong="no">
        <type></type>
        <name>SelectablePart</name>
        <qualifiedname>QCPLegend::SelectablePart</qualifiedname>
        <enumvalue id="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a378201c07d500af7126e3ec91652eed7" prot="public">
          <name>spNone</name>
          <initializer>= 0x000</initializer>
          <briefdescription>
<para><computeroutput>0x000</computeroutput> None </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" prot="public">
          <name>spLegendBox</name>
          <initializer>= 0x001</initializer>
          <briefdescription>
<para><computeroutput>0x001</computeroutput> The legend box (frame) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" prot="public">
          <name>spItems</name>
          <initializer>= 0x002</initializer>
          <briefdescription>
<para><computeroutput>0x002</computeroutput> Legend items individually (see <ref refid="class_q_c_p_legend_1ac7d9e567d5c551e09cd9bcc4306c5532" kindref="member">selectedItems</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the selectable parts of a legend</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>, <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5126" column="3" bodyfile="qcustomplot.h" bodystart="5126" bodyend="5129"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_legend_1a52ab8342a382456131d567f962d7f9d0" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPLegend::mBorderPen</definition>
        <argsstring></argsstring>
        <name>mBorderPen</name>
        <qualifiedname>QCPLegend::mBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5191" column="8" bodyfile="qcustomplot.h" bodystart="5191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a773ae518c3149fcabff4a2906fdacbc4" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPLegend::mIconBorderPen</definition>
        <argsstring></argsstring>
        <name>mIconBorderPen</name>
        <qualifiedname>QCPLegend::mIconBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5191" column="19" bodyfile="qcustomplot.h" bodystart="5191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a9bd7cd05a9a485e06eda513a348baf80" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPLegend::mBrush</definition>
        <argsstring></argsstring>
        <name>mBrush</name>
        <qualifiedname>QCPLegend::mBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5192" column="10" bodyfile="qcustomplot.h" bodystart="5192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a56ffacb184a99eefe09a0c7181d0713d" prot="protected" static="no" mutable="no">
        <type>QFont</type>
        <definition>QFont QCPLegend::mFont</definition>
        <argsstring></argsstring>
        <name>mFont</name>
        <qualifiedname>QCPLegend::mFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5193" column="9" bodyfile="qcustomplot.h" bodystart="5193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a478b2d809a7390e9ff8f8bb70d6bd9fe" prot="protected" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor QCPLegend::mTextColor</definition>
        <argsstring></argsstring>
        <name>mTextColor</name>
        <qualifiedname>QCPLegend::mTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5194" column="10" bodyfile="qcustomplot.h" bodystart="5194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a39b972aae6c6a3fa5aa73313ab7a5765" prot="protected" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize QCPLegend::mIconSize</definition>
        <argsstring></argsstring>
        <name>mIconSize</name>
        <qualifiedname>QCPLegend::mIconSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5195" column="9" bodyfile="qcustomplot.h" bodystart="5195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a8abf8843864ee9afc3f54f906c062240" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QCPLegend::mIconTextPadding</definition>
        <argsstring></argsstring>
        <name>mIconTextPadding</name>
        <qualifiedname>QCPLegend::mIconTextPadding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5196" column="7" bodyfile="qcustomplot.h" bodystart="5196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" prot="protected" static="no" mutable="no">
        <type>SelectableParts</type>
        <definition>SelectableParts QCPLegend::mSelectedParts</definition>
        <argsstring></argsstring>
        <name>mSelectedParts</name>
        <qualifiedname>QCPLegend::mSelectedParts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5197" column="19" bodyfile="qcustomplot.h" bodystart="5197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" prot="protected" static="no" mutable="no">
        <type>SelectableParts</type>
        <definition>SelectableParts QCPLegend::mSelectableParts</definition>
        <argsstring></argsstring>
        <name>mSelectableParts</name>
        <qualifiedname>QCPLegend::mSelectableParts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5197" column="34" bodyfile="qcustomplot.h" bodystart="5197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a62906c996906ae23e9f724b6ac1f7334" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPLegend::mSelectedBorderPen</definition>
        <argsstring></argsstring>
        <name>mSelectedBorderPen</name>
        <qualifiedname>QCPLegend::mSelectedBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5198" column="8" bodyfile="qcustomplot.h" bodystart="5198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a7429ac0e64c7b90b649b4d8f4cc5fa55" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPLegend::mSelectedIconBorderPen</definition>
        <argsstring></argsstring>
        <name>mSelectedIconBorderPen</name>
        <qualifiedname>QCPLegend::mSelectedIconBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5198" column="27" bodyfile="qcustomplot.h" bodystart="5198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1ab3c7567c86d4784b1e48f76a84b3a1e2" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPLegend::mSelectedBrush</definition>
        <argsstring></argsstring>
        <name>mSelectedBrush</name>
        <qualifiedname>QCPLegend::mSelectedBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5199" column="10" bodyfile="qcustomplot.h" bodystart="5199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a86ce8f6c20a2f51a48eaf3c24ce16805" prot="protected" static="no" mutable="no">
        <type>QFont</type>
        <definition>QFont QCPLegend::mSelectedFont</definition>
        <argsstring></argsstring>
        <name>mSelectedFont</name>
        <qualifiedname>QCPLegend::mSelectedFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5200" column="9" bodyfile="qcustomplot.h" bodystart="5200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_legend_1a6c25c8796c6e73e983aae6024965f2be" prot="protected" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor QCPLegend::mSelectedTextColor</definition>
        <argsstring></argsstring>
        <name>mSelectedTextColor</name>
        <qualifiedname>QCPLegend::mSelectedTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5201" column="10" bodyfile="qcustomplot.h" bodystart="5201" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_legend_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <qualifiedname>QCPLegend::QCustomPlot</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5219" column="16" bodyfile="qcustomplot.h" bodystart="5219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_legend_1a8a375e31e42c68de049fcf0fd35db5b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPAbstractLegendItem</definition>
        <argsstring></argsstring>
        <name>QCPAbstractLegendItem</name>
        <qualifiedname>QCPLegend::QCPAbstractLegendItem</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5220" column="16" bodyfile="qcustomplot.h" bodystart="5220" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLegend::QCPLegend</definition>
        <argsstring>()</argsstring>
        <name>QCPLegend</name>
        <qualifiedname>QCPLegend::QCPLegend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref> instance with default values.</para>
<para>Note that by default, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> already contains a legend ready to be used as <ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">QCustomPlot::legend</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5134" column="12" bodyfile="qcustomplot.cpp" bodystart="19054" bodyend="19079"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a11391e486a959a42eeba4edf1bd8b46b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPLegend::~QCPLegend</definition>
        <argsstring>() Q_DECL_OVERRIDE</argsstring>
        <name>~QCPLegend</name>
        <qualifiedname>QCPLegend::~QCPLegend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5135" column="11" bodyfile="qcustomplot.cpp" bodystart="19081" bodyend="19086"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a844b709a5632313416655f931c8e5631" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPLegend::borderPen</definition>
        <argsstring>() const</argsstring>
        <name>borderPen</name>
        <qualifiedname>QCPLegend::borderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5138" column="8" bodyfile="qcustomplot.h" bodystart="5138" bodyend="5138"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1aaddafd5cbe9175512311350bb3b563e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPLegend::brush</definition>
        <argsstring>() const</argsstring>
        <name>brush</name>
        <qualifiedname>QCPLegend::brush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5139" column="10" bodyfile="qcustomplot.h" bodystart="5139" bodyend="5139"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ae240104de3c3a4cfc0834dbaffa07ac9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QCPLegend::font</definition>
        <argsstring>() const</argsstring>
        <name>font</name>
        <qualifiedname>QCPLegend::font</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5140" column="9" bodyfile="qcustomplot.h" bodystart="5140" bodyend="5140"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1aa96d8f1a183ec2be8c0461c0abebd6db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QCPLegend::textColor</definition>
        <argsstring>() const</argsstring>
        <name>textColor</name>
        <qualifiedname>QCPLegend::textColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5141" column="10" bodyfile="qcustomplot.h" bodystart="5141" bodyend="5141"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ae4f17a186558c82d2ba269f6e7164dda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize QCPLegend::iconSize</definition>
        <argsstring>() const</argsstring>
        <name>iconSize</name>
        <qualifiedname>QCPLegend::iconSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5142" column="9" bodyfile="qcustomplot.h" bodystart="5142" bodyend="5142"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a19668bb7f8fafe20d367cebf96269eaf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QCPLegend::iconTextPadding</definition>
        <argsstring>() const</argsstring>
        <name>iconTextPadding</name>
        <qualifiedname>QCPLegend::iconTextPadding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5143" column="7" bodyfile="qcustomplot.h" bodystart="5143" bodyend="5143"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a5b91d2ea68a4dd20238f660b80cd9945" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPLegend::iconBorderPen</definition>
        <argsstring>() const</argsstring>
        <name>iconBorderPen</name>
        <qualifiedname>QCPLegend::iconBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5144" column="8" bodyfile="qcustomplot.h" bodystart="5144" bodyend="5144"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ad091ff5e11edbe0adecba81c35522ac7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SelectableParts</type>
        <definition>SelectableParts QCPLegend::selectableParts</definition>
        <argsstring>() const</argsstring>
        <name>selectableParts</name>
        <qualifiedname>QCPLegend::selectableParts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5145" column="19" bodyfile="qcustomplot.h" bodystart="5145" bodyend="5145"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a3efbf879f6936ec337690985e567dc6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SelectableParts</type>
        <definition>QCPLegend::SelectableParts QCPLegend::selectedParts</definition>
        <argsstring>() const</argsstring>
        <name>selectedParts</name>
        <qualifiedname>QCPLegend::selectedParts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5146" column="19" bodyfile="qcustomplot.cpp" bodystart="19089" bodyend="19105"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1add8204bf083c82cc5def29093501a017" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPLegend::selectedBorderPen</definition>
        <argsstring>() const</argsstring>
        <name>selectedBorderPen</name>
        <qualifiedname>QCPLegend::selectedBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5147" column="8" bodyfile="qcustomplot.h" bodystart="5147" bodyend="5147"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ad8eb320ca3a25928982a65163e8f883b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPLegend::selectedIconBorderPen</definition>
        <argsstring>() const</argsstring>
        <name>selectedIconBorderPen</name>
        <qualifiedname>QCPLegend::selectedIconBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5148" column="8" bodyfile="qcustomplot.h" bodystart="5148" bodyend="5148"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a77dfa9340f68ca195f1817a93db09757" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPLegend::selectedBrush</definition>
        <argsstring>() const</argsstring>
        <name>selectedBrush</name>
        <qualifiedname>QCPLegend::selectedBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5149" column="10" bodyfile="qcustomplot.h" bodystart="5149" bodyend="5149"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a483ffd35d64710a165da87b9d9f11110" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QCPLegend::selectedFont</definition>
        <argsstring>() const</argsstring>
        <name>selectedFont</name>
        <qualifiedname>QCPLegend::selectedFont</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5150" column="9" bodyfile="qcustomplot.h" bodystart="5150" bodyend="5150"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ab9b469b27787bfb2ce6c8978a31821af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QCPLegend::selectedTextColor</definition>
        <argsstring>() const</argsstring>
        <name>selectedTextColor</name>
        <qualifiedname>QCPLegend::selectedTextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5151" column="10" bodyfile="qcustomplot.h" bodystart="5151" bodyend="5151"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a866a9e3f5267de7430a6c7f26a61db9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setBorderPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setBorderPen</name>
        <qualifiedname>QCPLegend::setBorderPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen, the border of the entire legend is drawn with. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5154" column="8" bodyfile="qcustomplot.cpp" bodystart="19110" bodyend="19113"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a497bbcd38baa3598c08e2b3f48103f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setBrush</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setBrush</name>
        <qualifiedname>QCPLegend::setBrush</qualifiedname>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the brush of the legend background. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5155" column="8" bodyfile="qcustomplot.cpp" bodystart="19118" bodyend="19121"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1aa4cda8499e3cb0f3be415edc02984c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setFont</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>setFont</name>
        <qualifiedname>QCPLegend::setFont</qualifiedname>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default font of legend text. Legend items that draw text (e.g. the name of a graph) will use this font by default. However, a different font can be specified on a per-item-basis by accessing the specific legend item.</para>
<para>This function will also set <emphasis>font</emphasis> on all already existing legend items.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_legend_item_1a409c53455d8112f71d70c0c43eb10265" kindref="member">QCPAbstractLegendItem::setFont</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5156" column="8" bodyfile="qcustomplot.cpp" bodystart="19132" bodyend="19140"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ae1eb239ff4a4632fe1b6c3e668d845c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setTextColor</definition>
        <argsstring>(const QColor &amp;color)</argsstring>
        <name>setTextColor</name>
        <qualifiedname>QCPLegend::setTextColor</qualifiedname>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default color of legend text. Legend items that draw text (e.g. the name of a graph) will use this color by default. However, a different colors can be specified on a per-item-basis by accessing the specific legend item.</para>
<para>This function will also set <emphasis>color</emphasis> on all already existing legend items.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_legend_item_1a6ebace6aaffaedcdab2d74e88acc2d1e" kindref="member">QCPAbstractLegendItem::setTextColor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5157" column="8" bodyfile="qcustomplot.cpp" bodystart="19151" bodyend="19159"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a8b0740cce488bf7010da6beda6898984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setIconSize</definition>
        <argsstring>(const QSize &amp;size)</argsstring>
        <name>setIconSize</name>
        <qualifiedname>QCPLegend::setIconSize</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the size of legend icons. Legend items that draw an icon (e.g. a visual representation of the graph) will use this size by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5158" column="8" bodyfile="qcustomplot.cpp" bodystart="19165" bodyend="19168"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a96b1a37fd4ee6a9778e6e54fe56ab6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setIconSize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>setIconSize</name>
        <qualifiedname>QCPLegend::setIconSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5159" column="8" bodyfile="qcustomplot.cpp" bodystart="19172" bodyend="19176"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a62973bd69d5155e8ea3141366e8968f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setIconTextPadding</definition>
        <argsstring>(int padding)</argsstring>
        <name>setIconTextPadding</name>
        <qualifiedname>QCPLegend::setIconTextPadding</qualifiedname>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the horizontal space in pixels between the legend icon and the text next to it. Legend items that draw an icon (e.g. a visual representation of the graph) and text (e.g. the name of the graph) will use this space by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5160" column="8" bodyfile="qcustomplot.cpp" bodystart="19183" bodyend="19186"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a2f2c93d18a651f4ff294bb3f026f49b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setIconBorderPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setIconBorderPen</name>
        <qualifiedname>QCPLegend::setIconBorderPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen used to draw a border around each legend icon. Legend items that draw an icon (e.g. a visual representation of the graph) will use this pen by default.</para>
<para>If no border is wanted, set this to <emphasis>Qt::NoPen</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5161" column="8" bodyfile="qcustomplot.cpp" bodystart="19194" bodyend="19197"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SLOT void</type>
        <definition>void QCPLegend::setSelectableParts</definition>
        <argsstring>(const SelectableParts &amp;selectableParts)</argsstring>
        <name>setSelectableParts</name>
        <qualifiedname>QCPLegend::setSelectableParts</qualifiedname>
        <param>
          <type>const SelectableParts &amp;</type>
          <declname>selectableParts</declname>
          <defname>selectable</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether the user can (de-)select the parts in <emphasis>selectable</emphasis> by clicking on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. (When <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref> contains <ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a269c9af298e257d1108edec0432b5513" kindref="member">QCP::iSelectLegend</ref>.)</para>
<para>However, even when <emphasis>selectable</emphasis> is set to a value not allowing the selection of a specific part, it is still possible to set the selection of this part manually, by calling <ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref> directly.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" kindref="member">SelectablePart</ref>, <ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5162" column="15" bodyfile="qcustomplot.cpp" bodystart="19209" bodyend="19216"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SLOT void</type>
        <definition>void QCPLegend::setSelectedParts</definition>
        <argsstring>(const SelectableParts &amp;selectedParts)</argsstring>
        <name>setSelectedParts</name>
        <qualifiedname>QCPLegend::setSelectedParts</qualifiedname>
        <param>
          <type>const SelectableParts &amp;</type>
          <declname>selectedParts</declname>
          <defname>selected</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the selected state of the respective legend parts described by <ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" kindref="member">SelectablePart</ref>. When a part is selected, it uses a different pen/font and brush. If some legend items are selected and <emphasis>selected</emphasis> doesn&apos;t contain <ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>, those items become deselected.</para>
<para>The entire selection mechanism is handled automatically when <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref> contains iSelectLegend. You only need to call this function when you wish to change the selection state manually.</para>
<para>This function can change the selection state of a part even when <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref> was set to a value that actually excludes the part.</para>
<para>emits the <ref refid="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" kindref="member">selectionChanged</ref> signal when <emphasis>selected</emphasis> is different from the previous selection state.</para>
<para>Note that it doesn&apos;t make sense to set the selected state <ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref> here when it wasn&apos;t set before, because there&apos;s no way to specify which exact items to newly select. Do this by calling <ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">QCPAbstractLegendItem::setSelected</ref> directly on the legend item you wish to select.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" kindref="member">SelectablePart</ref>, <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref>, <ref refid="class_q_c_p_legend_1ae11e1229abeec1abdbd22a57f2b26a84" kindref="member">selectTest</ref>, <ref refid="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" kindref="member">setSelectedBorderPen</ref>, <ref refid="class_q_c_p_legend_1ade93aabe9bcccaf9cf46cec22c658027" kindref="member">setSelectedIconBorderPen</ref>, <ref refid="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" kindref="member">setSelectedBrush</ref>, <ref refid="class_q_c_p_legend_1ab580a01c3c0a239374ed66c29edf5ad2" kindref="member">setSelectedFont</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5163" column="15" bodyfile="qcustomplot.cpp" bodystart="19239" bodyend="19262"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setSelectedBorderPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setSelectedBorderPen</name>
        <qualifiedname>QCPLegend::setSelectedBorderPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When the legend box is selected, this pen is used to draw the border instead of the normal pen set via <ref refid="class_q_c_p_legend_1a866a9e3f5267de7430a6c7f26a61db9f" kindref="member">setBorderPen</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>, <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref>, <ref refid="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" kindref="member">setSelectedBrush</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5164" column="8" bodyfile="qcustomplot.cpp" bodystart="19270" bodyend="19273"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ade93aabe9bcccaf9cf46cec22c658027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setSelectedIconBorderPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setSelectedIconBorderPen</name>
        <qualifiedname>QCPLegend::setSelectedIconBorderPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen legend items will use to draw their icon borders, when they are selected.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>, <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref>, <ref refid="class_q_c_p_legend_1ab580a01c3c0a239374ed66c29edf5ad2" kindref="member">setSelectedFont</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5165" column="8" bodyfile="qcustomplot.cpp" bodystart="19280" bodyend="19283"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setSelectedBrush</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setSelectedBrush</name>
        <qualifiedname>QCPLegend::setSelectedBrush</qualifiedname>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When the legend box is selected, this brush is used to draw the legend background instead of the normal brush set via <ref refid="class_q_c_p_legend_1a497bbcd38baa3598c08e2b3f48103f23" kindref="member">setBrush</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>, <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref>, <ref refid="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" kindref="member">setSelectedBorderPen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5166" column="8" bodyfile="qcustomplot.cpp" bodystart="19291" bodyend="19294"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ab580a01c3c0a239374ed66c29edf5ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setSelectedFont</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>setSelectedFont</name>
        <qualifiedname>QCPLegend::setSelectedFont</qualifiedname>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default font that is used by legend items when they are selected.</para>
<para>This function will also set <emphasis>font</emphasis> on all already existing legend items.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1aa4cda8499e3cb0f3be415edc02984c73" kindref="member">setFont</ref>, <ref refid="class_q_c_p_abstract_legend_item_1a91db5aee48617a9d3206e61376807365" kindref="member">QCPAbstractLegendItem::setSelectedFont</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5167" column="8" bodyfile="qcustomplot.cpp" bodystart="19303" bodyend="19311"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a7674dfc7a1f30e1abd1018c0ed45e0bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::setSelectedTextColor</definition>
        <argsstring>(const QColor &amp;color)</argsstring>
        <name>setSelectedTextColor</name>
        <qualifiedname>QCPLegend::setSelectedTextColor</qualifiedname>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default text color that is used by legend items when they are selected.</para>
<para>This function will also set <emphasis>color</emphasis> on all already existing legend items.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1ae1eb239ff4a4632fe1b6c3e668d845c6" kindref="member">setTextColor</ref>, <ref refid="class_q_c_p_abstract_legend_item_1a4d01d008ee1a5bfe9905b0397a421936" kindref="member">QCPAbstractLegendItem::setSelectedTextColor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5168" column="8" bodyfile="qcustomplot.cpp" bodystart="19320" bodyend="19328"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ae11e1229abeec1abdbd22a57f2b26a84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPLegend::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE</argsstring>
        <name>selectTest</name>
        <qualifiedname>QCPLegend::selectTest</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1a62d60f1b0ee9bb23e38811d71586d79c">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Layout elements are sensitive to events inside their outer rect. If <emphasis>pos</emphasis> is within the outer rect, this method returns a value corresponding to 0.99 times the parent plot&apos;s selection tolerance. However, layout elements are not selectable by default. So if <emphasis>onlySelectable</emphasis> is true, -1.0 is returned.</para>
<para>See <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">QCPLayerable::selectTest</ref> for a general explanation of this virtual method.</para>
<para><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref> subclasses may reimplement this method to provide more specific selection test behaviour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5171" column="18" bodyfile="qcustomplot.cpp" bodystart="19550" bodyend="19562"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1acfe9694c45104a3359d3806ed366fcf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref> *</type>
        <definition>QCPAbstractLegendItem * QCPLegend::item</definition>
        <argsstring>(int index) const</argsstring>
        <name>item</name>
        <qualifiedname>QCPLegend::item</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the item with index <emphasis>i</emphasis>. If non-legend items were added to the legend, and the element at the specified cell index is not a <ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>, returns <computeroutput>nullptr</computeroutput>.</para>
<para>Note that the linear index depends on the current fill order (<ref refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" kindref="member">setFillOrder</ref>).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a57ab86ab8b2a3762d4c1455eb5452c88" kindref="member">itemCount</ref>, <ref refid="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" kindref="member">addItem</ref>, <ref refid="class_q_c_p_legend_1a91e790002d8bf15a20628a8e8841e397" kindref="member">itemWithPlottable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5174" column="25" bodyfile="qcustomplot.cpp" bodystart="19338" bodyend="19341"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a91e790002d8bf15a20628a8e8841e397" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_plottable_legend_item" kindref="compound">QCPPlottableLegendItem</ref> *</type>
        <definition>QCPPlottableLegendItem * QCPLegend::itemWithPlottable</definition>
        <argsstring>(const QCPAbstractPlottable *plottable) const</argsstring>
        <name>itemWithPlottable</name>
        <qualifiedname>QCPLegend::itemWithPlottable</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref> *</type>
          <declname>plottable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="class_q_c_p_plottable_legend_item" kindref="compound">QCPPlottableLegendItem</ref> which is associated with <emphasis>plottable</emphasis> (e.g. a <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>*). If such an item isn&apos;t in the legend, returns <computeroutput>nullptr</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a4b90a442af871582df85c2bc13f91e88" kindref="member">hasItemWithPlottable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5175" column="26" bodyfile="qcustomplot.cpp" bodystart="19349" bodyend="19360"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a57ab86ab8b2a3762d4c1455eb5452c88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPLegend::itemCount</definition>
        <argsstring>() const</argsstring>
        <name>itemCount</name>
        <qualifiedname>QCPLegend::itemCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of items currently in the legend. It is identical to the base class <ref refid="class_q_c_p_layout_grid_1a9a8942aface780a02445ebcf14c48513" kindref="member">QCPLayoutGrid::elementCount()</ref>, and unlike the other &quot;item&quot; interface methods of <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>, doesn&apos;t only address elements which can be cast to <ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>.</para>
<para>Note that if empty cells are in the legend (e.g. by calling methods of the <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref> base class which allows creating empty cells), they are included in the returned count.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1acfe9694c45104a3359d3806ed366fcf7" kindref="member">item</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5176" column="7" bodyfile="qcustomplot.cpp" bodystart="19372" bodyend="19375"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ad0f698e33db454a6c103b5206740e599" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLegend::hasItem</definition>
        <argsstring>(QCPAbstractLegendItem *item) const</argsstring>
        <name>hasItem</name>
        <qualifiedname>QCPLegend::hasItem</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the legend contains <emphasis>item</emphasis>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a4b90a442af871582df85c2bc13f91e88" kindref="member">hasItemWithPlottable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5177" column="8" bodyfile="qcustomplot.cpp" bodystart="19382" bodyend="19390"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a4b90a442af871582df85c2bc13f91e88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLegend::hasItemWithPlottable</definition>
        <argsstring>(const QCPAbstractPlottable *plottable) const</argsstring>
        <name>hasItemWithPlottable</name>
        <qualifiedname>QCPLegend::hasItemWithPlottable</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref> *</type>
          <declname>plottable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the legend contains a <ref refid="class_q_c_p_plottable_legend_item" kindref="compound">QCPPlottableLegendItem</ref> which is associated with <emphasis>plottable</emphasis> (e.g. a <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>*). If such an item isn&apos;t in the legend, returns false.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a91e790002d8bf15a20628a8e8841e397" kindref="member">itemWithPlottable</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5178" column="8" bodyfile="qcustomplot.cpp" bodystart="19398" bodyend="19401"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLegend::addItem</definition>
        <argsstring>(QCPAbstractLegendItem *item)</argsstring>
        <name>addItem</name>
        <qualifiedname>QCPLegend::addItem</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds <emphasis>item</emphasis> to the legend, if it&apos;s not present already. The element is arranged according to the current fill order (<ref refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" kindref="member">setFillOrder</ref>) and wrapping (<ref refid="class_q_c_p_layout_grid_1ab36af18d77e4428386d02970382ee598" kindref="member">setWrap</ref>).</para>
<para>Returns true on sucess, i.e. if the item wasn&apos;t in the list already and has been successfuly added.</para>
<para>The legend takes ownership of the item.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" kindref="member">removeItem</ref>, <ref refid="class_q_c_p_legend_1acfe9694c45104a3359d3806ed366fcf7" kindref="member">item</ref>, <ref refid="class_q_c_p_legend_1ad0f698e33db454a6c103b5206740e599" kindref="member">hasItem</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5179" column="8" bodyfile="qcustomplot.cpp" bodystart="19413" bodyend="19416"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLegend::removeItem</definition>
        <argsstring>(int index)</argsstring>
        <name>removeItem</name>
        <qualifiedname>QCPLegend::removeItem</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Removes the item with the specified <emphasis>index</emphasis> from the legend and deletes it.</para>
<para>After successful removal, the legend is reordered according to the current fill order (<ref refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" kindref="member">setFillOrder</ref>) and wrapping (<ref refid="class_q_c_p_layout_grid_1ab36af18d77e4428386d02970382ee598" kindref="member">setWrap</ref>), so no empty cell remains where the removed <emphasis>item</emphasis> was. If you don&apos;t want this, rather use the raw element interface of <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>.</para>
<para>Returns true, if successful. Unlike <ref refid="class_q_c_p_layout_1a2403f684fee3ce47132faaeed00bb066" kindref="member">QCPLayoutGrid::removeAt</ref>, this method only removes elements derived from <ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a57ab86ab8b2a3762d4c1455eb5452c88" kindref="member">itemCount</ref>, <ref refid="class_q_c_p_legend_1a24795c7250eb5214fcea16b7217b4dfb" kindref="member">clearItems</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5180" column="8" bodyfile="qcustomplot.cpp" bodystart="19431" bodyend="19441"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a2aea4ec6da2d454dd0b241a254d65082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLegend::removeItem</definition>
        <argsstring>(QCPAbstractLegendItem *item)</argsstring>
        <name>removeItem</name>
        <qualifiedname>QCPLegend::removeItem</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Removes <emphasis>item</emphasis> from the legend and deletes it.</para>
<para>After successful removal, the legend is reordered according to the current fill order (<ref refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" kindref="member">setFillOrder</ref>) and wrapping (<ref refid="class_q_c_p_layout_grid_1ab36af18d77e4428386d02970382ee598" kindref="member">setWrap</ref>), so no empty cell remains where the removed <emphasis>item</emphasis> was. If you don&apos;t want this, rather use the raw element interface of <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>.</para>
<para>Returns true, if successful.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a24795c7250eb5214fcea16b7217b4dfb" kindref="member">clearItems</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5181" column="8" bodyfile="qcustomplot.cpp" bodystart="19455" bodyend="19461"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a24795c7250eb5214fcea16b7217b4dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::clearItems</definition>
        <argsstring>()</argsstring>
        <name>clearItems</name>
        <qualifiedname>QCPLegend::clearItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all items from the legend. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5182" column="8" bodyfile="qcustomplot.cpp" bodystart="19466" bodyend="19474"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ac7d9e567d5c551e09cd9bcc4306c5532" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref> * &gt;</type>
        <definition>QList&lt; QCPAbstractLegendItem * &gt; QCPLegend::selectedItems</definition>
        <argsstring>() const</argsstring>
        <name>selectedItems</name>
        <qualifiedname>QCPLegend::selectedItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the legend items that are currently selected. If no items are selected, the list is empty.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">QCPAbstractLegendItem::setSelected</ref>, setSelectable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5183" column="9" bodyfile="qcustomplot.cpp" bodystart="19482" bodyend="19494"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::selectionChanged</definition>
        <argsstring>(QCPLegend::SelectableParts parts)</argsstring>
        <name>selectionChanged</name>
        <qualifiedname>QCPLegend::selectionChanged</qualifiedname>
        <param>
          <type>QCPLegend::SelectableParts</type>
          <declname>parts</declname>
          <defname>selection</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the selection state of this legend has changed.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>, <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5186" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_legend_1a8a77300fd0976d6bdd8000f4e8d114b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLegend::selectableChanged</definition>
        <argsstring>(QCPLegend::SelectableParts parts)</argsstring>
        <name>selectableChanged</name>
        <qualifiedname>QCPLegend::selectableChanged</qualifiedname>
        <param>
          <type>QCPLegend::SelectableParts</type>
          <declname>parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5187" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_legend_1a2b225cefb5eb267771e2c7c44fd2b408" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLegend::parentPlotInitialized</definition>
        <argsstring>(QCustomPlot *parentPlot) Q_DECL_OVERRIDE</argsstring>
        <name>parentPlotInitialized</name>
        <qualifiedname>QCPLegend::parentPlotInitialized</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1ab4bb5c5a958451f5f153fdce350f13cf">parentPlotInitialized</reimplements>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5204" column="16" bodyfile="qcustomplot.cpp" bodystart="19604" bodyend="19608"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a1a2075e462984f9ff51d9c75bda3581b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref></type>
        <definition>QCP::Interaction QCPLegend::selectionCategory</definition>
        <argsstring>() const Q_DECL_OVERRIDE</argsstring>
        <name>selectionCategory</name>
        <qualifiedname>QCPLegend::selectionCategory</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1a908c9edda761886f33893be326dab77d">selectionCategory</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5205" column="28" bodyfile="qcustomplot.cpp" bodystart="19592" bodyend="19595"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a817f75c234f82a2e26643dc0de742095" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLegend::applyDefaultAntialiasingHint</definition>
        <argsstring>(QCPPainter *painter) const Q_DECL_OVERRIDE</argsstring>
        <name>applyDefaultAntialiasingHint</name>
        <qualifiedname>QCPLegend::applyDefaultAntialiasingHint</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1a0a8f18141bcf46cf40ad4c13324ff346">applyDefaultAntialiasingHint</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5206" column="16" bodyfile="qcustomplot.cpp" bodystart="19511" bodyend="19514"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a74f93358d2b4a76ec95c3a5d825582a3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLegend::draw</definition>
        <argsstring>(QCPPainter *painter) Q_DECL_OVERRIDE</argsstring>
        <name>draw</name>
        <qualifiedname>QCPLegend::draw</qualifiedname>
        <reimplements refid="class_q_c_p_layout_element_1ad1c597b1d608cfdd86e7b76819a94cfb">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5207" column="16" bodyfile="qcustomplot.cpp" bodystart="19541" bodyend="19547"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a71f54a05c3e5b1a1ade1864422cd642e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLegend::selectEvent</definition>
        <argsstring>(QMouseEvent *event, bool additive, const QVariant &amp;details, bool *selectionStateChanged) Q_DECL_OVERRIDE</argsstring>
        <name>selectEvent</name>
        <qualifiedname>QCPLegend::selectEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91">selectEvent</reimplements>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>additive</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>selectionStateChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5209" column="16" bodyfile="qcustomplot.cpp" bodystart="19565" bodyend="19576"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ac2066837f7ebc32a5b15434cdca5b176" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLegend::deselectEvent</definition>
        <argsstring>(bool *selectionStateChanged) Q_DECL_OVERRIDE</argsstring>
        <name>deselectEvent</name>
        <qualifiedname>QCPLegend::deselectEvent</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee">deselectEvent</reimplements>
        <param>
          <type>bool *</type>
          <declname>selectionStateChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5210" column="16" bodyfile="qcustomplot.cpp" bodystart="19579" bodyend="19589"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1a1cf9df6f2130c5ad842dc92188ab6bd7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPLegend::getBorderPen</definition>
        <argsstring>() const</argsstring>
        <name>getBorderPen</name>
        <qualifiedname>QCPLegend::getBorderPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5213" column="8" bodyfile="qcustomplot.cpp" bodystart="19521" bodyend="19524"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_legend_1ab1438d5d67304cdda3b9339da580d6bc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPLegend::getBrush</definition>
        <argsstring>() const</argsstring>
        <name>getBrush</name>
        <qualifiedname>QCPLegend::getBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5214" column="10" bodyfile="qcustomplot.cpp" bodystart="19531" bodyend="19534"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Manages a legend inside a <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>A legend is a small box somewhere in the plot which lists plottables with their name and icon.</para>
<para>A legend is populated with legend items by calling <ref refid="class_q_c_p_abstract_plottable_1aa64e93cb5b606d8110d2cc0a349bb30f" kindref="member">QCPAbstractPlottable::addToLegend</ref> on the plottable, for which a legend item shall be created. In the case of the main legend (<ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">QCustomPlot::legend</ref>), simply adding plottables to the plot while <ref refid="class_q_custom_plot_1ad8858410c2db47b7104040a3aa61c3fc" kindref="member">QCustomPlot::setAutoAddPlottableToLegend</ref> is set to true (the default) creates corresponding legend items. The legend item associated with a certain plottable can be removed with <ref refid="class_q_c_p_abstract_plottable_1a3cc235007e2343a65ad4f463767e0e20" kindref="member">QCPAbstractPlottable::removeFromLegend</ref>. However, <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref> also offers an interface to add and manipulate legend items directly: <ref refid="class_q_c_p_legend_1acfe9694c45104a3359d3806ed366fcf7" kindref="member">item</ref>, <ref refid="class_q_c_p_legend_1a91e790002d8bf15a20628a8e8841e397" kindref="member">itemWithPlottable</ref>, <ref refid="class_q_c_p_legend_1a57ab86ab8b2a3762d4c1455eb5452c88" kindref="member">itemCount</ref>, <ref refid="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" kindref="member">addItem</ref>, <ref refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" kindref="member">removeItem</ref>, etc.</para>
<para>Since <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref> derives from <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>, it can be placed in any position a <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref> may be positioned. The legend items are themselves <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElements</ref> which are placed in the grid layout of the legend. <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref> only adds an interface specialized for handling child elements of type <ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>, as mentioned above. In principle, any other layout elements may also be added to a legend via the normal <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref> interface. See the special page about <ref refid="" kindref="compound">The Layout System</ref> for examples on how to add other elements to the legend and move it outside the axis rect.</para>
<para>Use the methods <ref refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" kindref="member">setFillOrder</ref> and <ref refid="class_q_c_p_layout_grid_1ab36af18d77e4428386d02970382ee598" kindref="member">setWrap</ref> inherited from <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref> to control in which order (column first or row first) the legend is filled up when calling <ref refid="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" kindref="member">addItem</ref>, and at which column or row wrapping occurs. The default fill order for legends is <ref refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353ccaa0202730954e26c474cc820164aedce3e" kindref="member">foRowsFirst</ref>.</para>
<para>By default, every <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> has one legend (<ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">QCustomPlot::legend</ref>) which is placed in the inset layout of the main axis rect (<ref refid="class_q_c_p_axis_rect_1a949f803466619924c7018df4b511ae10" kindref="member">QCPAxisRect::insetLayout</ref>). To move the legend to another position inside the axis rect, use the methods of the <ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref>. To move the legend outside of the axis rect, place it anywhere else with the QCPLayout/ <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref> interface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="15" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="12">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="17">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="8">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="5101" column="1" bodyfile="qcustomplot.h" bodystart="5102" bodyend="5221"/>
    <listofallmembers>
      <member refid="class_q_c_p_layout_grid_1adff1a2ca691ed83d2d24a4cd1fe17012" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>addElement</name></member>
      <member refid="class_q_c_p_layout_grid_1a4c44025dd25acd27e053cadfd448ad7b" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>addElement</name></member>
      <member refid="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>addItem</name></member>
      <member refid="class_q_c_p_layout_1af6dbbc24156a808da29cd1ec031729a3" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>adoptElement</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_legend_1a817f75c234f82a2e26643dc0de742095" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_layout_element_1a2585bc8c5cc70ee712909751a2fc8909" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>autoMargins</name></member>
      <member refid="class_q_c_p_legend_1a844b709a5632313416655f931c8e5631" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>borderPen</name></member>
      <member refid="class_q_c_p_legend_1aaddafd5cbe9175512311350bb3b563e6" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>brush</name></member>
      <member refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>calculateAutoMargin</name></member>
      <member refid="class_q_c_p_layout_1a02883bdf2769b5b227f0232dba1ac4ee" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>clear</name></member>
      <member refid="class_q_c_p_legend_1a24795c7250eb5214fcea16b7217b4dfb" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>clearItems</name></member>
      <member refid="class_q_c_p_layerable_1acbcfc9ecc75433747b1978a77b1864b3" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_layout_grid_1a1a2962cbf45011405b64b913afa8e7a2" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>columnCount</name></member>
      <member refid="class_q_c_p_layout_grid_1adcf4c387d5996bf6e4ae0ed26138247e" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>columnSpacing</name></member>
      <member refid="class_q_c_p_layout_grid_1a7c0c87dcd496860d39cb3e193d108113" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>columnStretchFactors</name></member>
      <member refid="class_q_c_p_legend_1ac2066837f7ebc32a5b15434cdca5b176" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_legend_1a74f93358d2b4a76ec95c3a5d825582a3" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>draw</name></member>
      <member refid="class_q_c_p_layout_grid_1a602b426609b4411cf6a93c3ddf3a381a" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>element</name></member>
      <member refid="class_q_c_p_layout_grid_1a4288f174082555f6bd92021bdedb75dc" prot="public" virt="virtual"><scope>QCPLegend</scope><name>elementAt</name></member>
      <member refid="class_q_c_p_layout_grid_1a9a8942aface780a02445ebcf14c48513" prot="public" virt="virtual"><scope>QCPLegend</scope><name>elementCount</name></member>
      <member refid="class_q_c_p_layout_grid_1a7d5b968b4cf57393e9e387976d91f8f7" prot="public" virt="virtual"><scope>QCPLegend</scope><name>elements</name></member>
      <member refid="class_q_c_p_layout_grid_1a886c0dcbabd51a45da399e044552b685" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>expandTo</name></member>
      <member refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353cca" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>FillOrder</name></member>
      <member refid="class_q_c_p_layout_grid_1a6cb6563a13759222ad92ae397bd6c27e" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>fillOrder</name></member>
      <member refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353ccaac4cb4b796ec4822d5894b47b51627fb3" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>foColumnsFirst</name></member>
      <member refid="class_q_c_p_legend_1ae240104de3c3a4cfc0834dbaffa07ac9" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>font</name></member>
      <member refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353ccaa0202730954e26c474cc820164aedce3e" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>foRowsFirst</name></member>
      <member refid="class_q_c_p_legend_1a1cf9df6f2130c5ad842dc92188ab6bd7" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getBorderPen</name></member>
      <member refid="class_q_c_p_legend_1ab1438d5d67304cdda3b9339da580d6bc" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getBrush</name></member>
      <member refid="class_q_c_p_layout_1add49fd6843821a6126914b837ed52e22" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getFinalMaximumOuterSize</name></member>
      <member refid="class_q_c_p_layout_1a864fddc84721f186663faf3683f1fa70" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getFinalMinimumOuterSize</name></member>
      <member refid="class_q_c_p_layout_grid_1a9be77011ec5b5dfbe7fbda126659e1eb" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getMaximumRowColSizes</name></member>
      <member refid="class_q_c_p_layout_grid_1a4b9a251919936f127a63fc1b9911cd4e" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getMinimumRowColSizes</name></member>
      <member refid="class_q_c_p_layout_1a3e77be8006d39f2aafc1313d6e8fc3fd" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>getSectionSizes</name></member>
      <member refid="class_q_c_p_layout_grid_1ab0cf4f7edc9414a3bfaddac0f46dc0a0" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>hasElement</name></member>
      <member refid="class_q_c_p_legend_1ad0f698e33db454a6c103b5206740e599" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>hasItem</name></member>
      <member refid="class_q_c_p_legend_1a4b90a442af871582df85c2bc13f91e88" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>hasItemWithPlottable</name></member>
      <member refid="class_q_c_p_legend_1a5b91d2ea68a4dd20238f660b80cd9945" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>iconBorderPen</name></member>
      <member refid="class_q_c_p_legend_1ae4f17a186558c82d2ba269f6e7164dda" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>iconSize</name></member>
      <member refid="class_q_c_p_legend_1a19668bb7f8fafe20d367cebf96269eaf" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>iconTextPadding</name></member>
      <member refid="class_q_c_p_layout_grid_1a577223db920e2acb34bc1091080c76d1" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>indexToRowCol</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_layout_grid_1a1e880a321dbe8b43b471ccd764433dc4" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>insertColumn</name></member>
      <member refid="class_q_c_p_layout_grid_1a48af3dd7c3a653d9c3d7dd99bd02e838" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>insertRow</name></member>
      <member refid="class_q_c_p_legend_1acfe9694c45104a3359d3806ed366fcf7" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>item</name></member>
      <member refid="class_q_c_p_legend_1a57ab86ab8b2a3762d4c1455eb5452c88" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>itemCount</name></member>
      <member refid="class_q_c_p_legend_1a91e790002d8bf15a20628a8e8841e397" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>itemWithPlottable</name></member>
      <member refid="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>layout</name></member>
      <member refid="class_q_c_p_layout_element_1a765f041a73af0c2de41b41a5a03e31a4" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>layoutChanged</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_layout_element_1aa5513622910f31d9309f87886bee597a" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>marginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1acdd2c6b2ffb1c712e3bb3014fdec2e1b" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>marginGroups</name></member>
      <member refid="class_q_c_p_layout_element_1af4ac9450aa2d60863bf3a8ea0c940c9d" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>margins</name></member>
      <member refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mAutoMargins</name></member>
      <member refid="class_q_c_p_layout_grid_1a41ce0014c220d77b909e2ca937f0e599" prot="public" virt="virtual"><scope>QCPLegend</scope><name>maximumOuterSizeHint</name></member>
      <member refid="class_q_c_p_layout_element_1afb9503858d4aa0f3b9f1794b084fb40a" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>maximumSize</name></member>
      <member refid="class_q_c_p_legend_1a52ab8342a382456131d567f962d7f9d0" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a9bd7cd05a9a485e06eda513a348baf80" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_layout_grid_1ae9ac48f0791be07ead0a96dbd5622770" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mColumnSpacing</name></member>
      <member refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mColumnStretchFactors</name></member>
      <member refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mElements</name></member>
      <member refid="class_q_c_p_layout_grid_1a35a20072cbca5659dd75ca74eae87beb" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mFillOrder</name></member>
      <member refid="class_q_c_p_legend_1a56ffacb184a99eefe09a0c7181d0713d" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mFont</name></member>
      <member refid="class_q_c_p_legend_1a773ae518c3149fcabff4a2906fdacbc4" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mIconBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a39b972aae6c6a3fa5aa73313ab7a5765" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mIconSize</name></member>
      <member refid="class_q_c_p_legend_1a8abf8843864ee9afc3f54f906c062240" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mIconTextPadding</name></member>
      <member refid="class_q_c_p_layout_element_1a5eae30e28f28d73fd1c56409c011393e" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>minimumMargins</name></member>
      <member refid="class_q_c_p_layout_grid_1a0438bc58b4d3894d01db95b08d4268df" prot="public" virt="virtual"><scope>QCPLegend</scope><name>minimumOuterSizeHint</name></member>
      <member refid="class_q_c_p_layout_element_1a60d4295468a2b57fe91f6f68e20c3993" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>minimumSize</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mMarginGroups</name></member>
      <member refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mMinimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mMinimumSize</name></member>
      <member refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mOuterRect</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mParentLayout</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mRect</name></member>
      <member refid="class_q_c_p_layout_grid_1a8b67f183f4645739cc4c794d75843b40" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mRowSpacing</name></member>
      <member refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mRowStretchFactors</name></member>
      <member refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectableParts</name></member>
      <member refid="class_q_c_p_legend_1a62906c996906ae23e9f724b6ac1f7334" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectedBorderPen</name></member>
      <member refid="class_q_c_p_legend_1ab3c7567c86d4784b1e48f76a84b3a1e2" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectedBrush</name></member>
      <member refid="class_q_c_p_legend_1a86ce8f6c20a2f51a48eaf3c24ce16805" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectedFont</name></member>
      <member refid="class_q_c_p_legend_1a7429ac0e64c7b90b649b4d8f4cc5fa55" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectedIconBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectedParts</name></member>
      <member refid="class_q_c_p_legend_1a6c25c8796c6e73e983aae6024965f2be" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSelectedTextColor</name></member>
      <member refid="class_q_c_p_layout_element_1acc012635b1ae178ff3c4da8a3af303a2" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mSizeConstraintRect</name></member>
      <member refid="class_q_c_p_legend_1a478b2d809a7390e9ff8f8bb70d6bd9fe" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mTextColor</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layout_grid_1a17d90c289139847f68cca9e75d64b0fd" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>mWrap</name></member>
      <member refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>outerRect</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_legend_1a2b225cefb5eb267771e2c7c44fd2b408" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_legend_1a8a375e31e42c68de049fcf0fd35db5b0" prot="private" virt="non-virtual"><scope>QCPLegend</scope><name>QCPAbstractLegendItem</name></member>
      <member refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>QCPLayout</name></member>
      <member refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" prot="public" virt="non-virtual" ambiguityscope="QCPLayout::QCPLayoutElement::"><scope>QCPLegend</scope><name>QCPLayoutElement</name></member>
      <member refid="class_q_c_p_layout_grid_1ab2a4c1587dc8aed4c41c509c8d8d2a64" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>QCPLayoutGrid</name></member>
      <member refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>QCPLegend</name></member>
      <member refid="class_q_c_p_legend_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" virt="non-virtual"><scope>QCPLegend</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>rect</name></member>
      <member refid="class_q_c_p_layout_1a4afbb4bef0071f72f91afdac4433a18e" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>releaseElement</name></member>
      <member refid="class_q_c_p_layout_1a6c58f537d8086f352576ab7c5b15d0bc" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>remove</name></member>
      <member refid="class_q_c_p_layout_1a2403f684fee3ce47132faaeed00bb066" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>removeAt</name></member>
      <member refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>removeItem</name></member>
      <member refid="class_q_c_p_legend_1a2aea4ec6da2d454dd0b241a254d65082" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>removeItem</name></member>
      <member refid="class_q_c_p_layout_grid_1a682ba76f130810ffd294032a1bfbcfcb" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>rowColToIndex</name></member>
      <member refid="class_q_c_p_layout_grid_1a19c66fd76cbce58a8e94f33797e0c0aa" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>rowCount</name></member>
      <member refid="class_q_c_p_layout_grid_1a4cb6c680505cd0ce6f85b9e217fd2cd0" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>rowSpacing</name></member>
      <member refid="class_q_c_p_layout_grid_1a39189b27f4b1ae4afbcd70d7d934431c" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>rowStretchFactors</name></member>
      <member refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aa7fa7e25cd23758b9915c64ed9f1be26c" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>scrInnerRect</name></member>
      <member refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aabe2745b41a6131ed194e13591b08e04d" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>scrOuterRect</name></member>
      <member refid="class_q_c_p_legend_1a8a77300fd0976d6bdd8000f4e8d114b8" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>SelectablePart</name></member>
      <member refid="class_q_c_p_legend_1ad091ff5e11edbe0adecba81c35522ac7" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectableParts</name></member>
      <member refid="class_q_c_p_legend_1add8204bf083c82cc5def29093501a017" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a77dfa9340f68ca195f1817a93db09757" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedBrush</name></member>
      <member refid="class_q_c_p_legend_1a483ffd35d64710a165da87b9d9f11110" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedFont</name></member>
      <member refid="class_q_c_p_legend_1ad8eb320ca3a25928982a65163e8f883b" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedIconBorderPen</name></member>
      <member refid="class_q_c_p_legend_1ac7d9e567d5c551e09cd9bcc4306c5532" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedItems</name></member>
      <member refid="class_q_c_p_legend_1a3efbf879f6936ec337690985e567dc6f" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedParts</name></member>
      <member refid="class_q_c_p_legend_1ab9b469b27787bfb2ce6c8978a31821af" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectedTextColor</name></member>
      <member refid="class_q_c_p_legend_1a71f54a05c3e5b1a1ade1864422cd642e" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_legend_1a1a2075e462984f9ff51d9c75bda3581b" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_legend_1ae11e1229abeec1abdbd22a57f2b26a84" prot="public" virt="virtual"><scope>QCPLegend</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setAutoMargins</name></member>
      <member refid="class_q_c_p_legend_1a866a9e3f5267de7430a6c7f26a61db9f" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a497bbcd38baa3598c08e2b3f48103f23" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_layout_grid_1a3a49272aba32bb0fddc3bb2a45a3dba0" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setColumnSpacing</name></member>
      <member refid="class_q_c_p_layout_grid_1ae38f31a71687b9d7ee3104852528fb50" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setColumnStretchFactor</name></member>
      <member refid="class_q_c_p_layout_grid_1a6c2591d1a7e2534ce036989543b49e57" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setColumnStretchFactors</name></member>
      <member refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setFillOrder</name></member>
      <member refid="class_q_c_p_legend_1aa4cda8499e3cb0f3be415edc02984c73" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setFont</name></member>
      <member refid="class_q_c_p_legend_1a2f2c93d18a651f4ff294bb3f026f49b8" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setIconBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a8b0740cce488bf7010da6beda6898984" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setIconSize</name></member>
      <member refid="class_q_c_p_legend_1a96b1a37fd4ee6a9778e6e54fe56ab6c2" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setIconSize</name></member>
      <member refid="class_q_c_p_legend_1a62973bd69d5155e8ea3141366e8968f6" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setIconTextPadding</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMarginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a03e0e9c48f230217c529b0819f832d84" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMinimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a8e0447614a0bf92de9a7304588c6b96e" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setOuterRect</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_layout_grid_1aaef2cd2d456197ee06a208793678e436" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setRowSpacing</name></member>
      <member refid="class_q_c_p_layout_grid_1a7b0273de5369bd93d942edbaf5b166ec" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setRowStretchFactor</name></member>
      <member refid="class_q_c_p_layout_grid_1a200b45f9c908f96ebadaa3c8d87a2782" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setRowStretchFactors</name></member>
      <member refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectableParts</name></member>
      <member refid="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectedBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectedBrush</name></member>
      <member refid="class_q_c_p_legend_1ab580a01c3c0a239374ed66c29edf5ad2" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectedFont</name></member>
      <member refid="class_q_c_p_legend_1ade93aabe9bcccaf9cf46cec22c658027" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectedIconBorderPen</name></member>
      <member refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectedParts</name></member>
      <member refid="class_q_c_p_legend_1a7674dfc7a1f30e1abd1018c0ed45e0bc" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSelectedTextColor</name></member>
      <member refid="class_q_c_p_layout_element_1a361666cdcc6fbfd37344cc44be746b0f" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setSizeConstraintRect</name></member>
      <member refid="class_q_c_p_legend_1ae1eb239ff4a4632fe1b6c3e668d845c6" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setTextColor</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_layout_grid_1ab36af18d77e4428386d02970382ee598" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>setWrap</name></member>
      <member refid="class_q_c_p_layout_grid_1a38621ca7aa633b6a9a88617df7f08672" prot="public" virt="virtual"><scope>QCPLegend</scope><name>simplify</name></member>
      <member refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2a" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>SizeConstraintRect</name></member>
      <member refid="class_q_c_p_layout_element_1a66136f121ee3e1c933b748761203cab4" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>sizeConstraintRect</name></member>
      <member refid="class_q_c_p_layout_1aeac66a292f65cf7f8adf94eb92345b3e" prot="protected" virt="non-virtual"><scope>QCPLegend</scope><name>sizeConstraintsChanged</name></member>
      <member refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>spItems</name></member>
      <member refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>spLegendBox</name></member>
      <member refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a378201c07d500af7126e3ec91652eed7" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>spNone</name></member>
      <member refid="class_q_c_p_layout_grid_1aee961c2eb6cf8a85dcbc5a7d7b6c1a00" prot="public" virt="virtual"><scope>QCPLegend</scope><name>take</name></member>
      <member refid="class_q_c_p_layout_grid_1a17dd220234d1bbf8835abcc666384d45" prot="public" virt="virtual"><scope>QCPLegend</scope><name>takeAt</name></member>
      <member refid="class_q_c_p_legend_1aa96d8f1a183ec2be8c0461c0abebd6db" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>textColor</name></member>
      <member refid="class_q_c_p_layout_1a48ecc9c98ea90b547c3e27a931a8f7bd" prot="public" virt="virtual"><scope>QCPLegend</scope><name>update</name></member>
      <member refid="class_q_c_p_layout_grid_1a6cf43f14d3fa335fd8758561ccf1f78c" prot="public" virt="virtual"><scope>QCPLegend</scope><name>updateLayout</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>UpdatePhase</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>upLayout</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>upMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>upPreparation</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>visible</name></member>
      <member refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" virt="virtual"><scope>QCPLegend</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_layout_grid_1a8bb71b52b2796c9f05fae6a32d2d0efd" prot="public" virt="non-virtual"><scope>QCPLegend</scope><name>wrap</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="virtual"><scope>QCPLegend</scope><name>~QCPLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1a2fa26d3d22a2854c4da1d80f188db961" prot="public" virt="virtual"><scope>QCPLegend</scope><name>~QCPLayoutElement</name></member>
      <member refid="class_q_c_p_layout_grid_1ab4a55415452c4a58a408c4860a303bc5" prot="public" virt="virtual"><scope>QCPLegend</scope><name>~QCPLayoutGrid</name></member>
      <member refid="class_q_c_p_legend_1a11391e486a959a42eeba4edf1bd8b46b" prot="public" virt="virtual"><scope>QCPLegend</scope><name>~QCPLegend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
