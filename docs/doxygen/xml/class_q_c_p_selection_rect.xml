<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_selection_rect" kind="class" language="C++" prot="public">
    <compoundname>QCPSelectionRect</compoundname>
    <basecompoundref refid="class_q_c_p_layerable" prot="public" virt="non-virtual">QCPLayerable</basecompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_selection_rect_1a45a2600ef19c8f7b5ec6134beab036cf" prot="protected" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect QCPSelectionRect::mRect</definition>
        <argsstring></argsstring>
        <name>mRect</name>
        <qualifiedname>QCPSelectionRect::mRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1147" column="9" bodyfile="qcustomplot.h" bodystart="1147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_rect_1ae255dec12cd531071115bd667f0fd815" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPSelectionRect::mPen</definition>
        <argsstring></argsstring>
        <name>mPen</name>
        <qualifiedname>QCPSelectionRect::mPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1148" column="8" bodyfile="qcustomplot.h" bodystart="1148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_rect_1a1bda3f02c2e4da58c856d19695028cbe" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPSelectionRect::mBrush</definition>
        <argsstring></argsstring>
        <name>mBrush</name>
        <qualifiedname>QCPSelectionRect::mBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1149" column="10" bodyfile="qcustomplot.h" bodystart="1149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_rect_1a1c167356b0bc59e62691bff8c90f5851" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPSelectionRect::mActive</definition>
        <argsstring></argsstring>
        <name>mActive</name>
        <qualifiedname>QCPSelectionRect::mActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1151" column="8" bodyfile="qcustomplot.h" bodystart="1151" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_selection_rect_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <qualifiedname>QCPSelectionRect::QCustomPlot</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1163" column="16" bodyfile="qcustomplot.h" bodystart="1163" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_selection_rect_1ade6ee59fabcc585a1e281eb527b01867" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPSelectionRect::QCPSelectionRect</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>QCPSelectionRect</name>
        <qualifiedname>QCPSelectionRect::QCPSelectionRect</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref> instance. To make <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> use the selection rect instance, pass it to <ref refid="class_q_custom_plot_1a0c09f96df15faa4799ad7051bb16cf33" kindref="member">QCustomPlot::setSelectionRect</ref>. <emphasis>parentPlot</emphasis> should be set to the same <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> widget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1122" column="12" bodyfile="qcustomplot.cpp" bodystart="2846" bodyend="2852"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a5a358140ca202c2b1f049d87a653aa2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPSelectionRect::~QCPSelectionRect</definition>
        <argsstring>() Q_DECL_OVERRIDE</argsstring>
        <name>~QCPSelectionRect</name>
        <qualifiedname>QCPSelectionRect::~QCPSelectionRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1123" column="11" bodyfile="qcustomplot.cpp" bodystart="2854" bodyend="2857"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a3812115ae4dfe2855bf1e58331c14805" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect QCPSelectionRect::rect</definition>
        <argsstring>() const</argsstring>
        <name>rect</name>
        <qualifiedname>QCPSelectionRect::rect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1126" column="9" bodyfile="qcustomplot.h" bodystart="1126" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a23ab082ffa04be1dbf9afb9e633ab815" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPSelectionRect::range</definition>
        <argsstring>(const QCPAxis *axis) const</argsstring>
        <name>range</name>
        <qualifiedname>QCPSelectionRect::range</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenience function which returns the coordinate range of the provided <emphasis>axis</emphasis>, that this selection rect currently encompasses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1127" column="12" bodyfile="qcustomplot.cpp" bodystart="2863" bodyend="2876"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1ab4229f8faeaffba9617d2e6c4779b765" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPSelectionRect::pen</definition>
        <argsstring>() const</argsstring>
        <name>pen</name>
        <qualifiedname>QCPSelectionRect::pen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1128" column="8" bodyfile="qcustomplot.h" bodystart="1128" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a9669c77c5796dea9dc089a088d50ebfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPSelectionRect::brush</definition>
        <argsstring>() const</argsstring>
        <name>brush</name>
        <qualifiedname>QCPSelectionRect::brush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1129" column="10" bodyfile="qcustomplot.h" bodystart="1129" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1ad27c1569c6ea8fa48e24b81e2a302df3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPSelectionRect::isActive</definition>
        <argsstring>() const</argsstring>
        <name>isActive</name>
        <qualifiedname>QCPSelectionRect::isActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if there is currently a selection going on, i.e. the user has started dragging a selection rect, but hasn&apos;t released the mouse button yet.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_selection_rect_1af67bc58f4f5ce9a4dc420b9c42de235a" kindref="member">cancel</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1130" column="8" bodyfile="qcustomplot.h" bodystart="1130" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1ada20b7fb1b2dcbe50523262636b06963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::setPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setPen</name>
        <qualifiedname>QCPSelectionRect::setPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen that will be used to draw the selection rect outline.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_selection_rect_1ab0c66f1484418782efa01f4153611080" kindref="member">setBrush</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1133" column="8" bodyfile="qcustomplot.cpp" bodystart="2883" bodyend="2886"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1ab0c66f1484418782efa01f4153611080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::setBrush</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setBrush</name>
        <qualifiedname>QCPSelectionRect::setBrush</qualifiedname>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the brush that will be used to fill the selection rect. By default the selection rect is not filled, i.e. <emphasis>brush</emphasis> is <computeroutput>Qt::NoBrush</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_selection_rect_1ada20b7fb1b2dcbe50523262636b06963" kindref="member">setPen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1134" column="8" bodyfile="qcustomplot.cpp" bodystart="2894" bodyend="2897"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1af67bc58f4f5ce9a4dc420b9c42de235a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SLOT void</type>
        <definition>void QCPSelectionRect::cancel</definition>
        <argsstring>()</argsstring>
        <name>cancel</name>
        <qualifiedname>QCPSelectionRect::cancel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If there is currently a selection interaction going on (<ref refid="class_q_c_p_selection_rect_1ad27c1569c6ea8fa48e24b81e2a302df3" kindref="member">isActive</ref>), the interaction is canceled. The selection rect will emit the <ref refid="class_q_c_p_selection_rect_1aeb82009393c90130102dccf36477b906" kindref="member">canceled</ref> signal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1137" column="15" bodyfile="qcustomplot.cpp" bodystart="2903" bodyend="2910"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_q_c_p_selection_rect_1a7b7162d19f4f2174d3644ff1a5d335aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::started</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>started</name>
        <qualifiedname>QCPSelectionRect::started</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when a selection rect interaction was initiated, i.e. the user just started dragging the selection rect with the mouse. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1140" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_selection_rect_1a1bab11026bca52740c2e6682623e6964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::changed</definition>
        <argsstring>(const QRect &amp;rect, QMouseEvent *event)</argsstring>
        <name>changed</name>
        <qualifiedname>QCPSelectionRect::changed</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted while the selection rect interaction is ongoing and the <emphasis>rect</emphasis> has changed its size due to the user moving the mouse.</para>
<para>Note that <emphasis>rect</emphasis> may have a negative width or height, if the selection is being dragged to the upper or left side of the selection rect origin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1141" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_selection_rect_1aeb82009393c90130102dccf36477b906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::canceled</definition>
        <argsstring>(const QRect &amp;rect, QInputEvent *event)</argsstring>
        <name>canceled</name>
        <qualifiedname>QCPSelectionRect::canceled</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>QInputEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the selection interaction was cancelled. Note that <emphasis>event</emphasis> is <computeroutput>nullptr</computeroutput> if the selection interaction was cancelled programmatically, by a call to <ref refid="class_q_c_p_selection_rect_1af67bc58f4f5ce9a4dc420b9c42de235a" kindref="member">cancel</ref>.</para>
<para>The user may cancel the selection interaction by pressing the escape key. In this case, <emphasis>event</emphasis> holds the respective input event.</para>
<para>Note that <emphasis>rect</emphasis> may have a negative width or height, if the selection is being dragged to the upper or left side of the selection rect origin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1142" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_q_c_p_selection_rect_1a15a43542e1f7b953a44c260b419e6d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::accepted</definition>
        <argsstring>(const QRect &amp;rect, QMouseEvent *event)</argsstring>
        <name>accepted</name>
        <qualifiedname>QCPSelectionRect::accepted</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the selection interaction was completed by the user releasing the mouse button.</para>
<para>Note that <emphasis>rect</emphasis> may have a negative width or height, if the selection is being dragged to the upper or left side of the selection rect origin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1143" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a271f24cfca8bc50a0e2b4310ff90e227" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::startSelection</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>startSelection</name>
        <qualifiedname>QCPSelectionRect::startSelection</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1154" column="16" bodyfile="qcustomplot.cpp" bodystart="2918" bodyend="2923"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a95c3f1700be2a6d7bba0fe56ece5fbb1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::moveSelection</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>moveSelection</name>
        <qualifiedname>QCPSelectionRect::moveSelection</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1155" column="16" bodyfile="qcustomplot.cpp" bodystart="2931" bodyend="2936"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a625bcffd73987f6de6c6559aaf29ab9d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::endSelection</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>endSelection</name>
        <qualifiedname>QCPSelectionRect::endSelection</qualifiedname>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1156" column="16" bodyfile="qcustomplot.cpp" bodystart="2944" bodyend="2949"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1a1affe764316d6122a26fdb2e9583feb1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::keyPressEvent</definition>
        <argsstring>(QKeyEvent *event)</argsstring>
        <name>keyPressEvent</name>
        <qualifiedname>QCPSelectionRect::keyPressEvent</qualifiedname>
        <param>
          <type>QKeyEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1157" column="16" bodyfile="qcustomplot.cpp" bodystart="2957" bodyend="2964"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1aa854697618e16037ba9c73056abfb9bf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::applyDefaultAntialiasingHint</definition>
        <argsstring>(QCPPainter *painter) const Q_DECL_OVERRIDE</argsstring>
        <name>applyDefaultAntialiasingHint</name>
        <qualifiedname>QCPSelectionRect::applyDefaultAntialiasingHint</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1a1168944abbf9fa6731b0f4a2d0d67e8b">applyDefaultAntialiasingHint</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1160" column="16" bodyfile="qcustomplot.cpp" bodystart="2967" bodyend="2970"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_rect_1ab0e50ae796508bdcd97ab8c335c593bf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionRect::draw</definition>
        <argsstring>(QCPPainter *painter) Q_DECL_OVERRIDE</argsstring>
        <name>draw</name>
        <qualifiedname>QCPSelectionRect::draw</qualifiedname>
        <reimplements refid="class_q_c_p_layerable_1adf62b4bac3ca934db80290792fc897e1">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1161" column="16" bodyfile="qcustomplot.cpp" bodystart="2978" bodyend="2986"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Provides rect/rubber-band data selection and range zoom interaction. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref> is used by <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the <ref refid="class_q_custom_plot_1a810ef958ebe84db661c7288b526c0deb" kindref="member">QCustomPlot::setSelectionRectMode</ref> is not <ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa9032f170490d67240a6c68c2638ffab1" kindref="member">QCP::srmNone</ref>. When the user drags the mouse across the plot, the current selection rect instance (<ref refid="class_q_custom_plot_1a0c09f96df15faa4799ad7051bb16cf33" kindref="member">QCustomPlot::setSelectionRect</ref>) is forwarded these events and makes sure an according rect shape is drawn. At the begin, during, and after completion of the interaction, it emits the corresponding signals <ref refid="class_q_c_p_selection_rect_1a7b7162d19f4f2174d3644ff1a5d335aa" kindref="member">started</ref>, <ref refid="class_q_c_p_selection_rect_1a1bab11026bca52740c2e6682623e6964" kindref="member">changed</ref>, <ref refid="class_q_c_p_selection_rect_1aeb82009393c90130102dccf36477b906" kindref="member">canceled</ref>, and <ref refid="class_q_c_p_selection_rect_1a15a43542e1f7b953a44c260b419e6d2c" kindref="member">accepted</ref>.</para>
<para>The <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> instance connects own slots to the current selection rect instance, in order to react to an accepted selection rect interaction accordingly.</para>
<para><ref refid="class_q_c_p_selection_rect_1ad27c1569c6ea8fa48e24b81e2a302df3" kindref="member">isActive</ref> can be used to check whether the selection rect is currently active. An ongoing selection interaction can be cancelled programmatically via calling <ref refid="class_q_c_p_selection_rect_1af67bc58f4f5ce9a4dc420b9c42de235a" kindref="member">cancel</ref> at any time.</para>
<para>The appearance of the selection rect can be controlled via <ref refid="class_q_c_p_selection_rect_1ada20b7fb1b2dcbe50523262636b06963" kindref="member">setPen</ref> and <ref refid="class_q_c_p_selection_rect_1ab0c66f1484418782efa01f4153611080" kindref="member">setBrush</ref>.</para>
<para>If you wish to provide custom behaviour, e.g. a different visual representation of the selection rect (QCPSelectionRect::draw), you can subclass <ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref> and pass an instance of your subclass to <ref refid="class_q_custom_plot_1a0c09f96df15faa4799ad7051bb16cf33" kindref="member">QCustomPlot::setSelectionRect</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="14" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="11">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="1">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="5">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="1118" column="1" bodyfile="qcustomplot.h" bodystart="1119" bodyend="1164"/>
    <listofallmembers>
      <member refid="class_q_c_p_selection_rect_1a15a43542e1f7b953a44c260b419e6d2c" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>accepted</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_selection_rect_1aa854697618e16037ba9c73056abfb9bf" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_selection_rect_1a9669c77c5796dea9dc089a088d50ebfb" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>brush</name></member>
      <member refid="class_q_c_p_selection_rect_1af67bc58f4f5ce9a4dc420b9c42de235a" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>cancel</name></member>
      <member refid="class_q_c_p_selection_rect_1aeb82009393c90130102dccf36477b906" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>canceled</name></member>
      <member refid="class_q_c_p_selection_rect_1a1bab11026bca52740c2e6682623e6964" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>changed</name></member>
      <member refid="class_q_c_p_layerable_1acbcfc9ecc75433747b1978a77b1864b3" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_selection_rect_1ab0e50ae796508bdcd97ab8c335c593bf" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>draw</name></member>
      <member refid="class_q_c_p_selection_rect_1a625bcffd73987f6de6c6559aaf29ab9d" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>endSelection</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_selection_rect_1ad27c1569c6ea8fa48e24b81e2a302df3" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>isActive</name></member>
      <member refid="class_q_c_p_selection_rect_1a1affe764316d6122a26fdb2e9583feb1" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>keyPressEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_selection_rect_1a1c167356b0bc59e62691bff8c90f5851" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mActive</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_selection_rect_1a1bda3f02c2e4da58c856d19695028cbe" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_selection_rect_1a95c3f1700be2a6d7bba0fe56ece5fbb1" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>moveSelection</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_selection_rect_1ae255dec12cd531071115bd667f0fd815" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mPen</name></member>
      <member refid="class_q_c_p_selection_rect_1a45a2600ef19c8f7b5ec6134beab036cf" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mRect</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_selection_rect_1ab4229f8faeaffba9617d2e6c4779b765" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>pen</name></member>
      <member refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_selection_rect_1ade6ee59fabcc585a1e281eb527b01867" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>QCPSelectionRect</name></member>
      <member refid="class_q_c_p_selection_rect_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_selection_rect_1a23ab082ffa04be1dbf9afb9e633ab815" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>range</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_selection_rect_1a3812115ae4dfe2855bf1e58331c14805" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>rect</name></member>
      <member refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_layerable_1a908c9edda761886f33893be326dab77d" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" prot="public" virt="virtual"><scope>QCPSelectionRect</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_selection_rect_1ab0c66f1484418782efa01f4153611080" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_selection_rect_1ada20b7fb1b2dcbe50523262636b06963" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setPen</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_selection_rect_1a7b7162d19f4f2174d3644ff1a5d335aa" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>started</name></member>
      <member refid="class_q_c_p_selection_rect_1a271f24cfca8bc50a0e2b4310ff90e227" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>startSelection</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPSelectionRect</scope><name>visible</name></member>
      <member refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" virt="virtual"><scope>QCPSelectionRect</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="virtual"><scope>QCPSelectionRect</scope><name>~QCPLayerable</name></member>
      <member refid="class_q_c_p_selection_rect_1a5a358140ca202c2b1f049d87a653aa2d" prot="public" virt="virtual"><scope>QCPSelectionRect</scope><name>~QCPSelectionRect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
