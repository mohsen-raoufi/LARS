<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classrcsc_1_1_polygon2_d" kind="class" language="C++" prot="public">
    <compoundname>rcsc::Polygon2D</compoundname>
    <basecompoundref refid="classrcsc_1_1_region2_d" prot="public" virt="non-virtual">rcsc::Region2D</basecompoundref>
    <includes refid="polygon__2d_8h" local="no">polygon_2d.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcsc_1_1_polygon2_d_1acb35e08ab3b93bf2945094860576f889" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &gt;</type>
        <definition>std::vector&lt; Vector2D &gt; rcsc::Polygon2D::M_vertices</definition>
        <argsstring></argsstring>
        <name>M_vertices</name>
        <qualifiedname>rcsc::Polygon2D::M_vertices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="49" column="17" bodyfile="ui/geom/polygon_2d.h" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a9125d6093c6410b9f01af8e7350b3c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcsc::Polygon2D::Polygon2D</definition>
        <argsstring>()</argsstring>
        <name>Polygon2D</name>
        <qualifiedname>rcsc::Polygon2D::Polygon2D</qualifiedname>
        <briefdescription>
<para>create empty polygon </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="55" column="5" bodyfile="ui/geom/polygon_2d.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1aded01889649f9497cbe3f95db6039f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcsc::Polygon2D::Polygon2D</definition>
        <argsstring>(const std::vector&lt; Vector2D &gt; &amp;v)</argsstring>
        <name>Polygon2D</name>
        <qualifiedname>rcsc::Polygon2D::Polygon2D</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>create polygon with points </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>array of points </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="61" column="5" bodyfile="ui/geom/polygon_2d.cpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a8137001a902e9814fee97f662753ed73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rcsc::Polygon2D::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>rcsc::Polygon2D::clear</qualifiedname>
        <briefdescription>
<para>clear all data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="66" column="10" bodyfile="ui/geom/polygon_2d.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1ac37477672b486f7c127da6b71ad1fb73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_polygon2_d" kindref="compound">Polygon2D</ref> &amp;</type>
        <definition>const Polygon2D &amp; rcsc::Polygon2D::assign</definition>
        <argsstring>(const std::vector&lt; Vector2D &gt; &amp;v)</argsstring>
        <name>assign</name>
        <qualifiedname>rcsc::Polygon2D::assign</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>set polygon with points </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>array of points </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const reference to itself </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="73" column="22" bodyfile="ui/geom/polygon_2d.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1ab3c27600df82d058ba0ab72e4ea8da82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rcsc::Polygon2D::addVertex</definition>
        <argsstring>(const Vector2D &amp;p)</argsstring>
        <name>addVertex</name>
        <qualifiedname>rcsc::Polygon2D::addVertex</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>append point to polygon </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>new point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="79" column="10" bodyfile="ui/geom/polygon_2d.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a0842c1aa142f44e43f4677fbfe4fb12c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Vector2D &gt; &amp; rcsc::Polygon2D::vertices</definition>
        <argsstring>() const</argsstring>
        <name>vertices</name>
        <qualifiedname>rcsc::Polygon2D::vertices</qualifiedname>
        <briefdescription>
<para>get list of point of this polygon </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const reference to point list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="88" column="24" bodyfile="ui/geom/polygon_2d.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a67ffdd4b22c3035c6e0d830d4189b4db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool rcsc::Polygon2D::contains</definition>
        <argsstring>(const Vector2D &amp;p) const</argsstring>
        <name>contains</name>
        <qualifiedname>rcsc::Polygon2D::contains</qualifiedname>
        <reimplements refid="classrcsc_1_1_region2_d_1a5be3cd9e4045fd957aef13b7be798774">contains</reimplements>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>check point is in this polygon or not. the point on segment lines is allowed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>point for checking </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if point is in this polygon </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="99" column="10" bodyfile="ui/geom/polygon_2d.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a0f7bd9be06baa7adfb364dc5b84b552a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Polygon2D::contains</definition>
        <argsstring>(const Vector2D &amp;p, const bool allow_on_segment) const</argsstring>
        <name>contains</name>
        <qualifiedname>rcsc::Polygon2D::contains</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allow_on_segment</declname>
        </param>
        <briefdescription>
<para>check point is in this polygon or not </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>point for checking </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_on_segment</parametername>
</parameternamelist>
<parameterdescription>
<para>when point is on outline, if this parameter is set to true, returns true </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if point is in this polygon </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="111" column="10" bodyfile="ui/geom/polygon_2d.cpp" bodystart="151" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1ae8e07bf41a10a11f811dcea51e2b4037" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcsc_1_1_rect2_d" kindref="compound">Rect2D</ref></type>
        <definition>Rect2D rcsc::Polygon2D::getBoundingBox</definition>
        <argsstring>() const</argsstring>
        <name>getBoundingBox</name>
        <qualifiedname>rcsc::Polygon2D::getBoundingBox</qualifiedname>
        <briefdescription>
<para>get bounding box of this polygon </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bounding box of this polygon </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="118" column="12" bodyfile="ui/geom/polygon_2d.cpp" bodystart="94" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a45151517253ffb328ddf75bbfe3e6764" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D rcsc::Polygon2D::xyCenter</definition>
        <argsstring>() const</argsstring>
        <name>xyCenter</name>
        <qualifiedname>rcsc::Polygon2D::xyCenter</qualifiedname>
        <briefdescription>
<para>get centor of bounding box of this polygon </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>centor of bounding box of this polygon </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="124" column="14" bodyfile="ui/geom/polygon_2d.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a07cb7100406ca034ac82caa863315fe5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rcsc::Polygon2D::dist</definition>
        <argsstring>(const Vector2D &amp;p, const bool check_as_plane=true) const</argsstring>
        <name>dist</name>
        <qualifiedname>rcsc::Polygon2D::dist</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>check_as_plane</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>get minimum distance between this polygon and point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check_as_plane</parametername>
</parameternamelist>
<parameterdescription>
<para>if this parameter is set to true, handle this polygon as a plane polygon, otherwise handle this polygon as a polyline polygon. when point is inside of this polygon, distance between plane polygon and point is 0, distance between polyline polygon and point is minimum distance between each segments of this polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum distance between this polygon and point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="138" column="12" bodyfile="ui/geom/polygon_2d.cpp" bodystart="267" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a0617b75e564b6c1cd7ba491cd215bb3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rcsc::Polygon2D::area</definition>
        <argsstring>() const</argsstring>
        <name>area</name>
        <qualifiedname>rcsc::Polygon2D::area</qualifiedname>
        <reimplements refid="classrcsc_1_1_region2_d_1a2502791cb8472d99df26d9e216e74357">area</reimplements>
        <briefdescription>
<para>get area of this polygon </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>value of area with sign. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="146" column="12" bodyfile="ui/geom/polygon_2d.cpp" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a8a06805735d300d3a560f6940a767130" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rcsc::Polygon2D::doubleSignedArea</definition>
        <argsstring>() const</argsstring>
        <name>doubleSignedArea</name>
        <qualifiedname>rcsc::Polygon2D::doubleSignedArea</qualifiedname>
        <briefdescription>
<para>calculate doubled signed area value </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>value of doubled signed area. If vertices are placed counterclockwise order, returns positive number. If vertices are placed clockwise order, returns negative number. Otherwise, returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="155" column="12" bodyfile="ui/geom/polygon_2d.cpp" bodystart="329" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1aca1f3694569529cfd46f51b3f549ca88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Polygon2D::isCounterclockwise</definition>
        <argsstring>() const</argsstring>
        <name>isCounterclockwise</name>
        <qualifiedname>rcsc::Polygon2D::isCounterclockwise</qualifiedname>
        <briefdescription>
<para>check vertexes of this polygon is placed counterclockwise ot not </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if counterclockwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="161" column="10" bodyfile="ui/geom/polygon_2d.cpp" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a2ebfad42f3969adce4f1f1b65363df9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Polygon2D::isClockwise</definition>
        <argsstring>() const</argsstring>
        <name>isClockwise</name>
        <qualifiedname>rcsc::Polygon2D::isClockwise</qualifiedname>
        <briefdescription>
<para>check vertexes of this polygon is placed clockwise ot not </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if clockwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="167" column="10" bodyfile="ui/geom/polygon_2d.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_polygon2_d_1a7bdb6b5a97c0c38a458a35980a23c982" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcsc_1_1_polygon2_d" kindref="compound">Polygon2D</ref></type>
        <definition>Polygon2D rcsc::Polygon2D::getScissoredConnectedPolygon</definition>
        <argsstring>(const Rect2D &amp;r) const</argsstring>
        <name>getScissoredConnectedPolygon</name>
        <qualifiedname>rcsc::Polygon2D::getScissoredConnectedPolygon</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_rect2_d" kindref="compound">Rect2D</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>get a polygon clipped by a rectangle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>rectangle for clipping </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a polygon. if polygon is separated by edges of rectangle, each separated polygon is connected to one polygon. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/polygon_2d.h" line="175" column="15" bodyfile="ui/geom/polygon_2d.cpp" bodystart="528" bodyend="558"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>2D polygon region class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rcsc::Polygon2D</label>
        <link refid="classrcsc_1_1_polygon2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcsc::Region2D</label>
        <link refid="classrcsc_1_1_region2_d"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rcsc::Polygon2D</label>
        <link refid="classrcsc_1_1_polygon2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcsc::Region2D</label>
        <link refid="classrcsc_1_1_region2_d"/>
      </node>
    </collaborationgraph>
    <location file="ui/geom/polygon_2d.h" line="46" column="1" bodyfile="ui/geom/polygon_2d.h" bodystart="47" bodyend="176"/>
    <listofallmembers>
      <member refid="classrcsc_1_1_polygon2_d_1ab3c27600df82d058ba0ab72e4ea8da82" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>addVertex</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a0617b75e564b6c1cd7ba491cd215bb3b" prot="public" virt="virtual"><scope>rcsc::Polygon2D</scope><name>area</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1ac37477672b486f7c127da6b71ad1fb73" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>assign</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a8137001a902e9814fee97f662753ed73" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>clear</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a67ffdd4b22c3035c6e0d830d4189b4db" prot="public" virt="virtual"><scope>rcsc::Polygon2D</scope><name>contains</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a0f7bd9be06baa7adfb364dc5b84b552a" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>contains</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a07cb7100406ca034ac82caa863315fe5" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>dist</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a8a06805735d300d3a560f6940a767130" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>doubleSignedArea</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1ae8e07bf41a10a11f811dcea51e2b4037" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>getBoundingBox</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a7bdb6b5a97c0c38a458a35980a23c982" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>getScissoredConnectedPolygon</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a2ebfad42f3969adce4f1f1b65363df9a" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>isClockwise</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1aca1f3694569529cfd46f51b3f549ca88" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>isCounterclockwise</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1acb35e08ab3b93bf2945094860576f889" prot="private" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>M_vertices</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a9125d6093c6410b9f01af8e7350b3c17" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>Polygon2D</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1aded01889649f9497cbe3f95db6039f54" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>Polygon2D</name></member>
      <member refid="classrcsc_1_1_region2_d_1a577990d3a9f85a96ec51c412bd47fb1d" prot="protected" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>Region2D</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a0842c1aa142f44e43f4677fbfe4fb12c" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>vertices</name></member>
      <member refid="classrcsc_1_1_polygon2_d_1a45151517253ffb328ddf75bbfe3e6764" prot="public" virt="non-virtual"><scope>rcsc::Polygon2D</scope><name>xyCenter</name></member>
      <member refid="classrcsc_1_1_region2_d_1abc34bfdd9e0683003012f25ae7a2512b" prot="public" virt="virtual"><scope>rcsc::Polygon2D</scope><name>~Region2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
