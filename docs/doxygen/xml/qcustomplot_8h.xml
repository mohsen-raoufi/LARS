<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="qcustomplot_8h" kind="file" language="C++">
    <compoundname>qcustomplot.h</compoundname>
    <includes local="no">QtCore/qglobal.h</includes>
    <includes local="no">QtCore/QObject</includes>
    <includes local="no">QtCore/QPointer</includes>
    <includes local="no">QtCore/QSharedPointer</includes>
    <includes local="no">QtCore/QTimer</includes>
    <includes local="no">QtGui/QPainter</includes>
    <includes local="no">QtGui/QPainterPath</includes>
    <includes local="no">QtGui/QPaintEvent</includes>
    <includes local="no">QtGui/QMouseEvent</includes>
    <includes local="no">QtGui/QWheelEvent</includes>
    <includes local="no">QtGui/QPixmap</includes>
    <includes local="no">QtCore/QVector</includes>
    <includes local="no">QtCore/QString</includes>
    <includes local="no">QtCore/QDateTime</includes>
    <includes local="no">QtCore/QMultiMap</includes>
    <includes local="no">QtCore/QFlags</includes>
    <includes local="no">QtCore/QDebug</includes>
    <includes local="no">QtCore/QStack</includes>
    <includes local="no">QtCore/QCache</includes>
    <includes local="no">QtCore/QMargins</includes>
    <includes local="no">qmath.h</includes>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">QtNumeric</includes>
    <includes local="no">QtWidgets/QWidget</includes>
    <includes local="no">QtPrintSupport/QtPrintSupport</includes>
    <includes local="no">QtCore/QElapsedTimer</includes>
    <includes local="no">QtCore/QTimeZone</includes>
    <includedby refid="mainwindow_8h" local="yes">mainwindow.h</includedby>
    <includedby refid="qcustomplot_8cpp" local="yes">qcustomplot.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>qcustomplot.h</label>
        <link refid="qcustomplot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>QtCore/QCache</label>
      </node>
      <node id="15">
        <label>QtCore/QDateTime</label>
      </node>
      <node id="18">
        <label>QtCore/QDebug</label>
      </node>
      <node id="28">
        <label>QtCore/QElapsedTimer</label>
      </node>
      <node id="17">
        <label>QtCore/QFlags</label>
      </node>
      <node id="21">
        <label>QtCore/QMargins</label>
      </node>
      <node id="16">
        <label>QtCore/QMultiMap</label>
      </node>
      <node id="3">
        <label>QtCore/QObject</label>
      </node>
      <node id="4">
        <label>QtCore/QPointer</label>
      </node>
      <node id="5">
        <label>QtCore/QSharedPointer</label>
      </node>
      <node id="19">
        <label>QtCore/QStack</label>
      </node>
      <node id="14">
        <label>QtCore/QString</label>
      </node>
      <node id="29">
        <label>QtCore/QTimeZone</label>
      </node>
      <node id="6">
        <label>QtCore/QTimer</label>
      </node>
      <node id="13">
        <label>QtCore/QVector</label>
      </node>
      <node id="2">
        <label>QtCore/qglobal.h</label>
      </node>
      <node id="10">
        <label>QtGui/QMouseEvent</label>
      </node>
      <node id="9">
        <label>QtGui/QPaintEvent</label>
      </node>
      <node id="7">
        <label>QtGui/QPainter</label>
      </node>
      <node id="8">
        <label>QtGui/QPainterPath</label>
      </node>
      <node id="12">
        <label>QtGui/QPixmap</label>
      </node>
      <node id="11">
        <label>QtGui/QWheelEvent</label>
      </node>
      <node id="25">
        <label>QtNumeric</label>
      </node>
      <node id="27">
        <label>QtPrintSupport/QtPrintSupport</label>
      </node>
      <node id="26">
        <label>QtWidgets/QWidget</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>limits</label>
      </node>
      <node id="22">
        <label>qmath.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h"/>
      </node>
      <node id="1">
        <label>qcustomplot.h</label>
        <link refid="qcustomplot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_q_c_p_vector2_d" prot="public">QCPVector2D</innerclass>
    <innerclass refid="class_q_c_p_painter" prot="public">QCPPainter</innerclass>
    <innerclass refid="class_q_c_p_abstract_paint_buffer" prot="public">QCPAbstractPaintBuffer</innerclass>
    <innerclass refid="class_q_c_p_paint_buffer_pixmap" prot="public">QCPPaintBufferPixmap</innerclass>
    <innerclass refid="class_q_c_p_layer" prot="public">QCPLayer</innerclass>
    <innerclass refid="class_q_c_p_layerable" prot="public">QCPLayerable</innerclass>
    <innerclass refid="class_q_c_p_range" prot="public">QCPRange</innerclass>
    <innerclass refid="class_q_c_p_data_range" prot="public">QCPDataRange</innerclass>
    <innerclass refid="class_q_c_p_data_selection" prot="public">QCPDataSelection</innerclass>
    <innerclass refid="class_q_c_p_selection_rect" prot="public">QCPSelectionRect</innerclass>
    <innerclass refid="class_q_c_p_margin_group" prot="public">QCPMarginGroup</innerclass>
    <innerclass refid="class_q_c_p_layout_element" prot="public">QCPLayoutElement</innerclass>
    <innerclass refid="class_q_c_p_layout" prot="public">QCPLayout</innerclass>
    <innerclass refid="class_q_c_p_layout_grid" prot="public">QCPLayoutGrid</innerclass>
    <innerclass refid="class_q_c_p_layout_inset" prot="public">QCPLayoutInset</innerclass>
    <innerclass refid="class_q_c_p_line_ending" prot="public">QCPLineEnding</innerclass>
    <innerclass refid="class_q_c_p_label_painter_private" prot="public">QCPLabelPainterPrivate</innerclass>
    <innerclass refid="struct_q_c_p_label_painter_private_1_1_cached_label" prot="protected">QCPLabelPainterPrivate::CachedLabel</innerclass>
    <innerclass refid="struct_q_c_p_label_painter_private_1_1_label_data" prot="protected">QCPLabelPainterPrivate::LabelData</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker" prot="public">QCPAxisTicker</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker_date_time" prot="public">QCPAxisTickerDateTime</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker_time" prot="public">QCPAxisTickerTime</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker_fixed" prot="public">QCPAxisTickerFixed</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker_text" prot="public">QCPAxisTickerText</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker_pi" prot="public">QCPAxisTickerPi</innerclass>
    <innerclass refid="class_q_c_p_axis_ticker_log" prot="public">QCPAxisTickerLog</innerclass>
    <innerclass refid="class_q_c_p_grid" prot="public">QCPGrid</innerclass>
    <innerclass refid="class_q_c_p_axis" prot="public">QCPAxis</innerclass>
    <innerclass refid="class_q_c_p_axis_painter_private" prot="public">QCPAxisPainterPrivate</innerclass>
    <innerclass refid="struct_q_c_p_axis_painter_private_1_1_cached_label" prot="protected">QCPAxisPainterPrivate::CachedLabel</innerclass>
    <innerclass refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" prot="protected">QCPAxisPainterPrivate::TickLabelData</innerclass>
    <innerclass refid="class_q_c_p_scatter_style" prot="public">QCPScatterStyle</innerclass>
    <innerclass refid="class_q_c_p_data_container" prot="public">QCPDataContainer</innerclass>
    <innerclass refid="class_q_c_p_selection_decorator" prot="public">QCPSelectionDecorator</innerclass>
    <innerclass refid="class_q_c_p_abstract_plottable" prot="public">QCPAbstractPlottable</innerclass>
    <innerclass refid="class_q_c_p_item_anchor" prot="public">QCPItemAnchor</innerclass>
    <innerclass refid="class_q_c_p_item_position" prot="public">QCPItemPosition</innerclass>
    <innerclass refid="class_q_c_p_abstract_item" prot="public">QCPAbstractItem</innerclass>
    <innerclass refid="class_q_custom_plot" prot="public">QCustomPlot</innerclass>
    <innerclass refid="class_q_c_p_plottable_interface1_d" prot="public">QCPPlottableInterface1D</innerclass>
    <innerclass refid="class_q_c_p_abstract_plottable1_d" prot="public">QCPAbstractPlottable1D</innerclass>
    <innerclass refid="class_q_c_p_color_gradient" prot="public">QCPColorGradient</innerclass>
    <innerclass refid="class_q_c_p_selection_decorator_bracket" prot="public">QCPSelectionDecoratorBracket</innerclass>
    <innerclass refid="class_q_c_p_axis_rect" prot="public">QCPAxisRect</innerclass>
    <innerclass refid="class_q_c_p_abstract_legend_item" prot="public">QCPAbstractLegendItem</innerclass>
    <innerclass refid="class_q_c_p_plottable_legend_item" prot="public">QCPPlottableLegendItem</innerclass>
    <innerclass refid="class_q_c_p_legend" prot="public">QCPLegend</innerclass>
    <innerclass refid="class_q_c_p_text_element" prot="public">QCPTextElement</innerclass>
    <innerclass refid="class_q_c_p_color_scale_axis_rect_private" prot="public">QCPColorScaleAxisRectPrivate</innerclass>
    <innerclass refid="class_q_c_p_color_scale" prot="public">QCPColorScale</innerclass>
    <innerclass refid="class_q_c_p_graph_data" prot="public">QCPGraphData</innerclass>
    <innerclass refid="class_q_c_p_graph" prot="public">QCPGraph</innerclass>
    <innerclass refid="class_q_c_p_curve_data" prot="public">QCPCurveData</innerclass>
    <innerclass refid="class_q_c_p_curve" prot="public">QCPCurve</innerclass>
    <innerclass refid="class_q_c_p_bars_group" prot="public">QCPBarsGroup</innerclass>
    <innerclass refid="class_q_c_p_bars_data" prot="public">QCPBarsData</innerclass>
    <innerclass refid="class_q_c_p_bars" prot="public">QCPBars</innerclass>
    <innerclass refid="class_q_c_p_statistical_box_data" prot="public">QCPStatisticalBoxData</innerclass>
    <innerclass refid="class_q_c_p_statistical_box" prot="public">QCPStatisticalBox</innerclass>
    <innerclass refid="class_q_c_p_color_map_data" prot="public">QCPColorMapData</innerclass>
    <innerclass refid="class_q_c_p_color_map" prot="public">QCPColorMap</innerclass>
    <innerclass refid="class_q_c_p_financial_data" prot="public">QCPFinancialData</innerclass>
    <innerclass refid="class_q_c_p_financial" prot="public">QCPFinancial</innerclass>
    <innerclass refid="class_q_c_p_error_bars_data" prot="public">QCPErrorBarsData</innerclass>
    <innerclass refid="class_q_c_p_error_bars" prot="public">QCPErrorBars</innerclass>
    <innerclass refid="class_q_c_p_item_straight_line" prot="public">QCPItemStraightLine</innerclass>
    <innerclass refid="class_q_c_p_item_line" prot="public">QCPItemLine</innerclass>
    <innerclass refid="class_q_c_p_item_curve" prot="public">QCPItemCurve</innerclass>
    <innerclass refid="class_q_c_p_item_rect" prot="public">QCPItemRect</innerclass>
    <innerclass refid="class_q_c_p_item_text" prot="public">QCPItemText</innerclass>
    <innerclass refid="class_q_c_p_item_ellipse" prot="public">QCPItemEllipse</innerclass>
    <innerclass refid="class_q_c_p_item_pixmap" prot="public">QCPItemPixmap</innerclass>
    <innerclass refid="class_q_c_p_item_tracer" prot="public">QCPItemTracer</innerclass>
    <innerclass refid="class_q_c_p_item_bracket" prot="public">QCPItemBracket</innerclass>
    <innerclass refid="class_q_c_p_polar_axis_radial" prot="public">QCPPolarAxisRadial</innerclass>
    <innerclass refid="class_q_c_p_polar_axis_angular" prot="public">QCPPolarAxisAngular</innerclass>
    <innerclass refid="class_q_c_p_polar_grid" prot="public">QCPPolarGrid</innerclass>
    <innerclass refid="class_q_c_p_polar_legend_item" prot="public">QCPPolarLegendItem</innerclass>
    <innerclass refid="class_q_c_p_polar_graph" prot="public">QCPPolarGraph</innerclass>
    <innernamespace refid="namespace_q_c_p">QCP</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="qcustomplot_8h_1aa441208467c396e9be040369952f0107" prot="public" static="no">
        <name>QCP_DEVICEPIXELRATIO_SUPPORTED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="44" column="11" bodyfile="qcustomplot.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="qcustomplot_8h_1a6ac48bd184a7a8b315c504bac7d7318c" prot="public" static="no">
        <name>QCP_DEVICEPIXELRATIO_FLOAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="46" column="13" bodyfile="qcustomplot.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="qcustomplot_8h_1aa824bae269cd4bfdf134ecf48126d4d6" prot="public" static="no">
        <name>QCUSTOMPLOT_VERSION_STR</name>
        <initializer>&quot;2.1.0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="134" column="9" bodyfile="qcustomplot.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="qcustomplot_8h_1a68f7e6cb4fbad9160c78296112033882" prot="public" static="no">
        <name>QCUSTOMPLOT_VERSION</name>
        <initializer>0x020100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="135" column="9" bodyfile="qcustomplot.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="qcustomplot_8h_1a5eaab02224a642ded7fb8951e973a02c" prot="public" static="no">
        <name>QCP_LIB_DECL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="145" column="12" bodyfile="qcustomplot.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="qcustomplot_8h_1a42cc5eaeb25b85f8b52d2a4b94c56f55" prot="public" static="no">
        <name>Q_DECL_OVERRIDE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="150" column="11" bodyfile="qcustomplot.h" bodystart="150" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="qcustomplot_8h_1a9acaec6c7811dbc3f9ca07b6631f0442" prot="public" static="no">
        <type><ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>&lt; <ref refid="class_q_c_p_graph_data" kindref="compound">QCPGraphData</ref> &gt;</type>
        <definition>typedef QCPDataContainer&lt;QCPGraphData&gt; QCPGraphDataContainer</definition>
        <argsstring></argsstring>
        <name>QCPGraphDataContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for storing <ref refid="class_q_c_p_graph_data" kindref="compound">QCPGraphData</ref> points. The data is stored sorted by <emphasis>key</emphasis>.</para>
<para>This template instantiation is the container in which <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> holds its data. For details about the generic container, see the documentation of the class template <ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_data" kindref="compound">QCPGraphData</ref>, <ref refid="class_q_c_p_graph_1a1eae9429a316b008e2d99b2d65a54395" kindref="member">QCPGraph::setData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5455" column="26" bodyfile="qcustomplot.h" bodystart="5455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="qcustomplot_8h_1a4372fd32dfa2feaf26a0c4944ae43bcf" prot="public" static="no">
        <type><ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>&lt; <ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref> &gt;</type>
        <definition>typedef QCPDataContainer&lt;QCPCurveData&gt; QCPCurveDataContainer</definition>
        <argsstring></argsstring>
        <name>QCPCurveDataContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for storing <ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref> points. The data is stored sorted by <emphasis>t</emphasis>, so the <emphasis>sortKey()</emphasis> (returning <emphasis>t</emphasis>) is different from <emphasis>mainKey()</emphasis> (returning <emphasis>key</emphasis>).</para>
<para>This template instantiation is the container in which <ref refid="class_q_c_p_curve" kindref="compound">QCPCurve</ref> holds its data. For details about the generic container, see the documentation of the class template <ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref>, <ref refid="class_q_c_p_curve_1a41246850d2e080bc57183ca19cd4135e" kindref="member">QCPCurve::setData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5595" column="26" bodyfile="qcustomplot.h" bodystart="5595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="qcustomplot_8h_1a9bb56b7f3ba6146b9e07e637bc78316d" prot="public" static="no">
        <type><ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>&lt; <ref refid="class_q_c_p_bars_data" kindref="compound">QCPBarsData</ref> &gt;</type>
        <definition>typedef QCPDataContainer&lt;QCPBarsData&gt; QCPBarsDataContainer</definition>
        <argsstring></argsstring>
        <name>QCPBarsDataContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for storing <ref refid="class_q_c_p_bars_data" kindref="compound">QCPBarsData</ref> points. The data is stored sorted by <emphasis>key</emphasis>.</para>
<para>This template instantiation is the container in which <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> holds its data. For details about the generic container, see the documentation of the class template <ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_data" kindref="compound">QCPBarsData</ref>, <ref refid="class_q_c_p_bars_1a6dc562ec7120a8521e1061f2134367e4" kindref="member">QCPBars::setData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5774" column="26" bodyfile="qcustomplot.h" bodystart="5774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="qcustomplot_8h_1a54ca3a0333b00060466428598ce1c1aa" prot="public" static="no">
        <type><ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>&lt; <ref refid="class_q_c_p_statistical_box_data" kindref="compound">QCPStatisticalBoxData</ref> &gt;</type>
        <definition>typedef QCPDataContainer&lt;QCPStatisticalBoxData&gt; QCPStatisticalBoxDataContainer</definition>
        <argsstring></argsstring>
        <name>QCPStatisticalBoxDataContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for storing <ref refid="class_q_c_p_statistical_box_data" kindref="compound">QCPStatisticalBoxData</ref> points. The data is stored sorted by <emphasis>key</emphasis>.</para>
<para>This template instantiation is the container in which <ref refid="class_q_c_p_statistical_box" kindref="compound">QCPStatisticalBox</ref> holds its data. For details about the generic container, see the documentation of the class template <ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_statistical_box_data" kindref="compound">QCPStatisticalBoxData</ref>, <ref refid="class_q_c_p_statistical_box_1a08a6da55822bad825ee25a8069b9b52f" kindref="member">QCPStatisticalBox::setData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5905" column="26" bodyfile="qcustomplot.h" bodystart="5905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="qcustomplot_8h_1ae187bcf53c0a7abae09aa4286559e8b4" prot="public" static="no">
        <type><ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>&lt; <ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref> &gt;</type>
        <definition>typedef QCPDataContainer&lt;QCPFinancialData&gt; QCPFinancialDataContainer</definition>
        <argsstring></argsstring>
        <name>QCPFinancialDataContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for storing <ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref> points. The data is stored sorted by <emphasis>key</emphasis>.</para>
<para>This template instantiation is the container in which <ref refid="class_q_c_p_financial" kindref="compound">QCPFinancial</ref> holds its data. For details about the generic container, see the documentation of the class template <ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref>, <ref refid="class_q_c_p_financial_1a72089e75b8a50d18097526c3c79fdb85" kindref="member">QCPFinancial::setData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6150" column="26" bodyfile="qcustomplot.h" bodystart="6150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="qcustomplot_8h_1a3aa60582b81d9730f057aabdf8780de8" prot="public" static="no">
        <type>QVector&lt; <ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref> &gt;</type>
        <definition>typedef QVector&lt;QCPErrorBarsData&gt; QCPErrorBarsDataContainer</definition>
        <argsstring></argsstring>
        <name>QCPErrorBarsDataContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for storing <ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref> points. It is a typedef for <computeroutput>QVector&lt;<ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref>&gt;</computeroutput>.</para>
<para>This is the container in which <ref refid="class_q_c_p_error_bars" kindref="compound">QCPErrorBars</ref> holds its data. Unlike most other data containers for plottables, it is not based on <ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>. This is because the error bars plottable is special in that it doesn&apos;t store its own key and value coordinate per error bar. It adopts the key and value from the plottable to which the error bars shall be applied (<ref refid="class_q_c_p_error_bars_1aabb42a964cfbf780cd1c79850c7cd989" kindref="member">QCPErrorBars::setDataPlottable</ref>). So the stored <ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref> doesn&apos;t need a sortable key, but merely an index (as <computeroutput>QVector</computeroutput> provides), which maps one-to-one to the indices of the other plottable&apos;s data.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref>, <ref refid="class_q_c_p_error_bars_1a92b1980003255f5f7c05407a4d92aabc" kindref="member">QCPErrorBars::setData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6287" column="17" bodyfile="qcustomplot.h" bodystart="6287" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="qcustomplot_8h_1accbe1a1a6b69d3db3f495f66375f7301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPVector2D, Q_MOVABLE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        </param>
        <param>
          <type>Q_MOVABLE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="455" column="1" declfile="qcustomplot.h" declline="455" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aa75268fb64b9eaee5448fb815007bee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        <definition>const QCPVector2D operator*</definition>
        <argsstring>(double factor, const QCPVector2D &amp;vec)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="457" column="26" bodyfile="qcustomplot.h" bodystart="457" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aace10d28a76e84e7380ede1a9cb58274" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        <definition>const QCPVector2D operator*</definition>
        <argsstring>(const QCPVector2D &amp;vec, double factor)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="458" column="26" bodyfile="qcustomplot.h" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aa69909afc8c656999a2ea292ea01244b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        <definition>const QCPVector2D operator/</definition>
        <argsstring>(const QCPVector2D &amp;vec, double divisor)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="459" column="26" bodyfile="qcustomplot.h" bodystart="459" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a24cc5985429b12dbed4d0d3c5a917d20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        <definition>const QCPVector2D operator+</definition>
        <argsstring>(const QCPVector2D &amp;vec1, const QCPVector2D &amp;vec2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="460" column="26" bodyfile="qcustomplot.h" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a9e01331d8debf0877ee4cba9abd83605" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        <definition>const QCPVector2D operator-</definition>
        <argsstring>(const QCPVector2D &amp;vec1, const QCPVector2D &amp;vec2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="461" column="26" bodyfile="qcustomplot.h" bodystart="461" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a14c807d345ee3f22d6809bb5a4137b52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref></type>
        <definition>const QCPVector2D operator-</definition>
        <argsstring>(const QCPVector2D &amp;vec)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="462" column="26" bodyfile="qcustomplot.h" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aed23afce99cb2c82db7540026f3b7af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPRange, Q_MOVABLE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        </param>
        <param>
          <type>Q_MOVABLE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="836" column="1" declfile="qcustomplot.h" declline="836" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aede14e69c31568a75bd3e9286603c9e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator+</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds <emphasis>value</emphasis> to both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="851" column="23" bodyfile="qcustomplot.h" bodystart="851" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aa7dd8efde53d115b7107826194879069" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator+</definition>
        <argsstring>(double value, const QCPRange &amp;range)</argsstring>
        <name>operator+</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds <emphasis>value</emphasis> to both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="861" column="23" bodyfile="qcustomplot.h" bodystart="861" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a797f82830b516646da8873f82e39e356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator-</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts <emphasis>value</emphasis> from both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="871" column="23" bodyfile="qcustomplot.h" bodystart="871" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a558b1248ff6a9e41fd5b2630555a8acc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator*</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="881" column="23" bodyfile="qcustomplot.h" bodystart="881" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a5cb2332f6957021f47cc768089f4f090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator*</definition>
        <argsstring>(double value, const QCPRange &amp;range)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="891" column="23" bodyfile="qcustomplot.h" bodystart="891" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a4b366a3a21974c88e09b0d39d4a24a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator/</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divides both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="901" column="23" bodyfile="qcustomplot.h" bodystart="901" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a9139711c554711cbce8d84f505061621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPDataRange, Q_MOVABLE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref></type>
        </param>
        <param>
          <type>Q_MOVABLE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="948" column="1" declfile="qcustomplot.h" declline="948" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a49c0217af248959d59abfdd29401b678" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator+</definition>
        <argsstring>(const QCPDataSelection &amp;a, const QCPDataSelection &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points in <emphasis>a</emphasis> joined with the data points in <emphasis>b</emphasis>. The resulting data selection is already simplified (see <ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">QCPDataSelection::simplify</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1003" column="31" bodyfile="qcustomplot.h" bodystart="1003" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a5feed9419bd3df5cb4d4a761580545cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator+</definition>
        <argsstring>(const QCPDataRange &amp;a, const QCPDataSelection &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points in <emphasis>a</emphasis> joined with the data points in <emphasis>b</emphasis>. The resulting data selection is already simplified (see <ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">QCPDataSelection::simplify</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1014" column="31" bodyfile="qcustomplot.h" bodystart="1014" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aa574f51a74d6998e9be95e252e6be287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator+</definition>
        <argsstring>(const QCPDataSelection &amp;a, const QCPDataRange &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points in <emphasis>a</emphasis> joined with the data points in <emphasis>b</emphasis>. The resulting data selection is already simplified (see <ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">QCPDataSelection::simplify</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1025" column="31" bodyfile="qcustomplot.h" bodystart="1025" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a0822e3133b80b5dedfc8050a19c1e0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator+</definition>
        <argsstring>(const QCPDataRange &amp;a, const QCPDataRange &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points in <emphasis>a</emphasis> joined with the data points in <emphasis>b</emphasis>. The resulting data selection is already simplified (see <ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">QCPDataSelection::simplify</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1036" column="31" bodyfile="qcustomplot.h" bodystart="1036" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a41147ef7d6303c746e398278b7b624d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator-</definition>
        <argsstring>(const QCPDataSelection &amp;a, const QCPDataSelection &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points which are in <emphasis>a</emphasis> but not in <emphasis>b</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1046" column="31" bodyfile="qcustomplot.h" bodystart="1046" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a726652cb9ed840e3025435cc2c266468" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator-</definition>
        <argsstring>(const QCPDataRange &amp;a, const QCPDataSelection &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points which are in <emphasis>a</emphasis> but not in <emphasis>b</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1056" column="31" bodyfile="qcustomplot.h" bodystart="1056" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a32c5784ac70946f09a09b2dd19816b78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator-</definition>
        <argsstring>(const QCPDataSelection &amp;a, const QCPDataRange &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points which are in <emphasis>a</emphasis> but not in <emphasis>b</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1066" column="31" bodyfile="qcustomplot.h" bodystart="1066" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1ad62dd67b505c1fa9c02d1aafabcb9acf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
        <definition>const QCPDataSelection operator-</definition>
        <argsstring>(const QCPDataRange &amp;a, const QCPDataRange &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> with the data points which are in <emphasis>a</emphasis> but not in <emphasis>b</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1076" column="31" bodyfile="qcustomplot.h" bodystart="1076" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a1376c7245cffa4c7a6b945a542473907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPLineEnding, Q_MOVABLE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref></type>
        </param>
        <param>
          <type>Q_MOVABLE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1548" column="1" declfile="qcustomplot.h" declline="1548" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1adb726938bdfce1d1136855b9b3613d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPScatterStyle, Q_MOVABLE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        </param>
        <param>
          <type>Q_MOVABLE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2558" column="1" declfile="qcustomplot.h" declline="2558" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a422c3e935fcaf8b1e0cfd18e0672e54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPGraphData, Q_PRIMITIVE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_graph_data" kindref="compound">QCPGraphData</ref></type>
        </param>
        <param>
          <type>Q_PRIMITIVE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5443" column="1" declfile="qcustomplot.h" declline="5443" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1aa7fac95baf023cd00e99dffdb545b1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPCurveData, Q_PRIMITIVE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref></type>
        </param>
        <param>
          <type>Q_PRIMITIVE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5582" column="1" declfile="qcustomplot.h" declline="5582" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1af5914e844cd48c5f0332a4acaafb4461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPBarsData, Q_PRIMITIVE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_bars_data" kindref="compound">QCPBarsData</ref></type>
        </param>
        <param>
          <type>Q_PRIMITIVE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5762" column="1" declfile="qcustomplot.h" declline="5762" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1adfb047f77f52e89d50655c95ea5469e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPStatisticalBoxData, Q_MOVABLE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_statistical_box_data" kindref="compound">QCPStatisticalBoxData</ref></type>
        </param>
        <param>
          <type>Q_MOVABLE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="5892" column="1" declfile="qcustomplot.h" declline="5892" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1a1235fc5306324b607571019cbeeae197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPFinancialData, Q_PRIMITIVE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref></type>
        </param>
        <param>
          <type>Q_PRIMITIVE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6138" column="1" declfile="qcustomplot.h" declline="6138" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="qcustomplot_8h_1ada5a683e023b10f971a90bffed67e408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_TYPEINFO</definition>
        <argsstring>(QCPErrorBarsData, Q_PRIMITIVE_TYPE)</argsstring>
        <name>Q_DECLARE_TYPEINFO</name>
        <param>
          <type><ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref></type>
        </param>
        <param>
          <type>Q_PRIMITIVE_TYPE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6269" column="1" declfile="qcustomplot.h" declline="6269" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/><sp/>QCustomPlot,<sp/>an<sp/>easy<sp/>to<sp/>use,<sp/>modern<sp/>plotting<sp/>widget<sp/>for<sp/>Qt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/><sp/>Copyright<sp/>(C)<sp/>2011-2021<sp/>Emanuel<sp/>Eichhammer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>**</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>http://www.gnu.org/licenses/.<sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="19"><highlight class="comment">****************************************************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Emanuel<sp/>Eichhammer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/><sp/>Website/Contact:<sp/>http://www.qcustomplot.com/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Date:<sp/>29.03.21<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Version:<sp/>2.1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="24"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QCUSTOMPLOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QCUSTOMPLOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/qglobal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>Qt<sp/>version/configuration<sp/>dependent<sp/>macros<sp/>to<sp/>include<sp/>or<sp/>exclude<sp/>certain<sp/>code<sp/>paths:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCUSTOMPLOT_USE_OPENGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(5,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>QCP_OPENGL_PBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>QCP_OPENGL_FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>3,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>QCP_OPENGL_OFFSCREENSURFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>4,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>QCP_DEVICEPIXELRATIO_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>6,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>QCP_DEVICEPIXELRATIO_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QPointer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QSharedPointer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QPainter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QPainterPath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QPaintEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QMouseEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QWheelEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QPixmap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QVector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDateTime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QMultiMap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QFlags&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QStack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QCache&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QMargins&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qmath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCP_OPENGL_FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtGui/QOpenGLContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(6,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;QtGui/QOpenGLFramebufferObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;QOpenGLFramebufferObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;QOpenGLPaintDevice&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>QCP_OPENGL_OFFSCREENSURFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;QtGui/QOffscreenSurface&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;QtGui/QWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCP_OPENGL_PBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtOpenGL/QGLPixelBuffer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(5,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;qnumeric.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtGui/QWidget&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtGui/QPrinter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtGui/QPrintEngine&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtNumeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtWidgets/QWidget&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtPrintSupport/QtPrintSupport&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(4,<sp/>8,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtCore/QElapsedTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>2,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;QtCore/QTimeZone&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_painter_private" kindref="compound">QCPAxisPainterPrivate</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_color_map" kindref="compound">QCPColorMap</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_color_scale" kindref="compound">QCPColorScale</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_polar_axis_radial" kindref="compound">QCPPolarAxisRadial</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_polar_axis_angular" kindref="compound">QCPPolarAxisAngular</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_polar_grid" kindref="compound">QCPPolarGrid</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_polar_graph" kindref="compound">QCPPolarGraph</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/global.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>16981<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QCUSTOMPLOT_VERSION_STR<sp/>&quot;2.1.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QCUSTOMPLOT_VERSION<sp/>0x020100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decl<sp/>definitions<sp/>for<sp/>shared<sp/>library<sp/>compilation/usage:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QT_STATIC_BUILD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>QCP_LIB_DECL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(QCUSTOMPLOT_COMPILE_LIBRARY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>QCP_LIB_DECL<sp/>Q_DECL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(QCUSTOMPLOT_USE_LIBRARY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>QCP_LIB_DECL<sp/>Q_DECL_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>QCP_LIB_DECL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>empty<sp/>macro<sp/>for<sp/>Q_DECL_OVERRIDE<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>exist<sp/>(Qt<sp/>&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Q_DECL_OVERRIDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Q_DECL_OVERRIDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Q_MOC_RUN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="namespace_q_c_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_q_c_p" kindref="compound">QCP</ref><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespace_q_c_p" kindref="compound">QCP</ref><sp/>{<sp/></highlight><highlight class="comment">//<sp/>when<sp/>in<sp/>moc-run,<sp/>make<sp/>it<sp/>look<sp/>like<sp/>a<sp/>class,<sp/>so<sp/>we<sp/>get<sp/>Q_GADGET,<sp/>Q_ENUMS/Q_FLAGS<sp/>features<sp/>in<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2f" kindref="member">ExportPen</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">ResolutionUnit</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">SignDomain</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">MarginSide</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>Q_FLAGS(MarginSides)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">AntialiasedElement</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>Q_FLAGS(AntialiasedElements)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" kindref="member">PlottingHint</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>Q_FLAGS(PlottingHints)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">Interaction</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Q_FLAGS(Interactions)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" kindref="member">SelectionRectMode</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>Q_ENUMS(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">SelectionType</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">ResolutionUnit</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452a707d005dea5c4ab694e4270d9c6094e8" kindref="member">ruDotsPerMeter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187" refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452a4224e01f49b331489ad8cb12b619b229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452a4224e01f49b331489ad8cb12b619b229" kindref="member">ruDotsPerCentimeter</ref><sp/></highlight></codeline>
<codeline lineno="188" refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" kindref="member">ruDotsPerInch</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2faae8fcfaafee234ce18558afef83f6a78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2f" kindref="member">ExportPen</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2faae8fcfaafee234ce18558afef83f6a78" kindref="member">epNoCosmetic</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197" refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2fa50d3657dba3fb90560b93a823cb0a6e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2fa50d3657dba3fb90560b93a823cb0a6e8" kindref="member">epAllowCosmetic</ref><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a2d18af0bc58f6528d1e82ce699fe4829" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">SignDomain</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a2d18af0bc58f6528d1e82ce699fe4829" kindref="member">sdNegative</ref><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">sdBoth</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a584784b75fb816abcc627cf743bb699f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a584784b75fb816abcc627cf743bb699f" kindref="member">sdPositive</ref><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">MarginSide</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">msLeft</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x01<sp/></highlight></codeline>
<codeline lineno="218" refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">msRight</ref><sp/><sp/><sp/>=<sp/>0x02<sp/></highlight></codeline>
<codeline lineno="219" refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">msTop</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x04<sp/></highlight></codeline>
<codeline lineno="220" refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">msBottom</ref><sp/><sp/>=<sp/>0x08<sp/></highlight></codeline>
<codeline lineno="221" refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" kindref="member">msAll</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0xFF<sp/></highlight></codeline>
<codeline lineno="222" refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a80aa4149f16dabd538f8b2e3d42c42d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a80aa4149f16dabd538f8b2e3d42c42d5" kindref="member">msNone</ref><sp/><sp/><sp/><sp/>=<sp/>0x00<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal">Q_DECLARE_FLAGS(MarginSides,<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">MarginSide</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caefa92e89cd37f8a081fd2075aa1af73f" refkind="member"><highlight class="normal">enum<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">AntialiasedElement</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caefa92e89cd37f8a081fd2075aa1af73f" kindref="member">aeAxes</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0001<sp/></highlight></codeline>
<codeline lineno="236" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4fbb37118d62288af0ca601ff2b07a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4fbb37118d62288af0ca601ff2b07a2f" kindref="member">aeGrid</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0002<sp/></highlight></codeline>
<codeline lineno="237" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caaedf83369188a15a69f92bb1d85ca97b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caaedf83369188a15a69f92bb1d85ca97b" kindref="member">aeSubGrid</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0004<sp/></highlight></codeline>
<codeline lineno="238" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca9e0127a6361b5d0596b031a482c5cf97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca9e0127a6361b5d0596b031a482c5cf97" kindref="member">aeLegend</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0008<sp/></highlight></codeline>
<codeline lineno="239" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca1aca7a50c1b95403958733a4acafe773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca1aca7a50c1b95403958733a4acafe773" kindref="member">aeLegendItems</ref><sp/><sp/><sp/>=<sp/>0x0010<sp/></highlight></codeline>
<codeline lineno="240" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4145e4251b0cf2dbedabeea0a38f84f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4145e4251b0cf2dbedabeea0a38f84f6" kindref="member">aePlottables</ref><sp/><sp/><sp/><sp/>=<sp/>0x0020<sp/></highlight></codeline>
<codeline lineno="241" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caf7712a85d6b0c75b24301d2fe9484db3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caf7712a85d6b0c75b24301d2fe9484db3" kindref="member">aeItems</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0040<sp/></highlight></codeline>
<codeline lineno="242" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0cae45ed8cd167bffe27d7f40da4bc17e9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0cae45ed8cd167bffe27d7f40da4bc17e9c" kindref="member">aeScatters</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0080<sp/></highlight></codeline>
<codeline lineno="243" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca788810f0aa930137de6ad6cc6d83d354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca788810f0aa930137de6ad6cc6d83d354" kindref="member">aeFills</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0100<sp/></highlight></codeline>
<codeline lineno="244" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca261f8ea78cf3c9561726223ffa33dc12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca261f8ea78cf3c9561726223ffa33dc12" kindref="member">aeZeroLine</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0200<sp/></highlight></codeline>
<codeline lineno="245" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca51dfdad36b2907277ae1221b09936441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca51dfdad36b2907277ae1221b09936441" kindref="member">aeOther</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x8000<sp/></highlight></codeline>
<codeline lineno="246" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa897c232a0ffc8368e7c100ffc59ef31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa897c232a0ffc8368e7c100ffc59ef31" kindref="member">aeAll</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xFFFF<sp/></highlight></codeline>
<codeline lineno="247" refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa9e90d81896358757d94275aeaa58f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa9e90d81896358757d94275aeaa58f6a" kindref="member">aeNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0000<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="249"><highlight class="normal">Q_DECLARE_FLAGS(AntialiasedElements,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">AntialiasedElement</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4ab7283c5bfc1ba9e597015389880bda42" refkind="member"><highlight class="normal">enum<sp/><ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" kindref="member">PlottingHint</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4ab7283c5bfc1ba9e597015389880bda42" kindref="member">phNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x000<sp/></highlight></codeline>
<codeline lineno="257" refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" kindref="member">phFastPolylines</ref><sp/><sp/><sp/><sp/>=<sp/>0x001<sp/></highlight></codeline>
<codeline lineno="259" refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a30840fba10eebfa519a92cf5c3d32870" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a30840fba10eebfa519a92cf5c3d32870" kindref="member">phImmediateRefresh</ref><sp/>=<sp/>0x002<sp/></highlight></codeline>
<codeline lineno="261" refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a8e9cfe5ee0c5cd36dd7accf9739aff65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a8e9cfe5ee0c5cd36dd7accf9739aff65" kindref="member">phCacheLabels</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x004<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="263"><highlight class="normal">Q_DECLARE_FLAGS(PlottingHints,<sp/><ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" kindref="member">PlottingHint</ref>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a9acac96048a12b0d2b5396c9b4df768b" refkind="member"><highlight class="normal">enum<sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">Interaction</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a9acac96048a12b0d2b5396c9b4df768b" kindref="member">iNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x000<sp/></highlight></codeline>
<codeline lineno="273" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a2c4432b9aceafb94000be8d1b589ef18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a2c4432b9aceafb94000be8d1b589ef18" kindref="member">iRangeDrag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x001<sp/></highlight></codeline>
<codeline lineno="274" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037abee1e94353525a636aeaf0ba32b72e14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037abee1e94353525a636aeaf0ba32b72e14" kindref="member">iRangeZoom</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x002<sp/></highlight></codeline>
<codeline lineno="275" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aef673112c5067c3cf4cfddb62da7265d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aef673112c5067c3cf4cfddb62da7265d" kindref="member">iMultiSelect</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x004<sp/></highlight></codeline>
<codeline lineno="276" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a67148c8227b4155eca49135fc274c7ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a67148c8227b4155eca49135fc274c7ec" kindref="member">iSelectPlottables</ref><sp/>=<sp/>0x008<sp/></highlight></codeline>
<codeline lineno="277" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ad6644ac55bef621645326e9dd7469caa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ad6644ac55bef621645326e9dd7469caa" kindref="member">iSelectAxes</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x010<sp/></highlight></codeline>
<codeline lineno="278" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a269c9af298e257d1108edec0432b5513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a269c9af298e257d1108edec0432b5513" kindref="member">iSelectLegend</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x020<sp/></highlight></codeline>
<codeline lineno="279" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aea2f7c105d674e76d9b187b02ef29260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aea2f7c105d674e76d9b187b02ef29260" kindref="member">iSelectItems</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x040<sp/></highlight></codeline>
<codeline lineno="280" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037af67a50bc26147a13b551b3a625374949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037af67a50bc26147a13b551b3a625374949" kindref="member">iSelectOther</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x080<sp/></highlight></codeline>
<codeline lineno="281" refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ac8eec3d1e6c3eadf6af60968906db8db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ac8eec3d1e6c3eadf6af60968906db8db" kindref="member">iSelectPlottablesBeyondAxisRect</ref><sp/>=<sp/>0x100<sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="283"><highlight class="normal">Q_DECLARE_FLAGS(Interactions,<sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">Interaction</ref>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" refkind="member"><highlight class="normal">enum<sp/><ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" kindref="member">SelectionRectMode</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa9032f170490d67240a6c68c2638ffab1" kindref="member">srmNone</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291" refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa739c260bf4d9a15f73423c91158b9428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa739c260bf4d9a15f73423c91158b9428" kindref="member">srmZoom</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292" refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa62c286e8da283a0cbb88ecac2f3f7506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa62c286e8da283a0cbb88ecac2f3f7506" kindref="member">srmSelect</ref><sp/></highlight></codeline>
<codeline lineno="293" refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa15e7a00c8e7e0673c7b31d75266888d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa15e7a00c8e7e0673c7b31d75266888d4" kindref="member">srmCustom</ref><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">SelectionType</ref><sp/>{<sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa64628e338a2dd1e6f0dc84dec0b63fe" kindref="member">stNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315" refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aff7a688d4d520e8e7f01be098a034a2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aff7a688d4d520e8e7f01be098a034a2d" kindref="member">stWhole</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316" refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038ae5b11259c42962db355e7448f4a8633a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038ae5b11259c42962db355e7448f4a8633a" kindref="member">stSingleData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317" refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa05d2cba99c724df004d9c48971e4371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa05d2cba99c724df004d9c48971e4371" kindref="member">stDataRange</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318" refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038a7cf82676966ebf79cc371f65278e0e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038a7cf82676966ebf79cc371f65278e0e16" kindref="member">stMultipleDataRanges</ref><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInvalidData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qIsNaN(value)<sp/>||<sp/>qIsInf(value);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInvalidData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value2)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isInvalidData(value1)<sp/>||<sp/>isInvalidData(value2);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMarginValue(QMargins<sp/>&amp;margins,<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(side)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref>:<sp/>margins.setLeft(value);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref>:<sp/>margins.setRight(value);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref>:<sp/>margins.setTop(value);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>:<sp/>margins.setBottom(value);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" kindref="member">QCP::msAll</ref>:<sp/>margins<sp/>=<sp/>QMargins(value,<sp/>value,<sp/>value,<sp/>value);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMarginValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;margins,<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(side)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>margins.left();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>margins.right();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>margins.top();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>margins.bottom();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>staticMetaObject;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>moc-run<sp/>we<sp/>create<sp/>a<sp/>static<sp/>meta<sp/>object<sp/>for<sp/>QCP<sp/>&quot;fake&quot;<sp/>object.<sp/>This<sp/>line<sp/>is<sp/>the<sp/>link<sp/>to<sp/>it<sp/>via<sp/>QCP::staticMetaObject<sp/>in<sp/>normal<sp/>operation<sp/>as<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>QCP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::AntialiasedElements)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::PlottingHints)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::MarginSides)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::Interactions)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2f" kindref="member">QCP::ExportPen</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">QCP::ResolutionUnit</ref>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" kindref="member">QCP::PlottingHint</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" kindref="member">QCP::SelectionRectMode</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/global.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/vector2d.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4988<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="class_q_c_p_vector2_d" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref></highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;point);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mX;<sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mY;<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;rx()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mX;<sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;ry()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mY;<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_q_c_p_vector2_d_1ab4249e6ce7bfc37be56f014c54b761ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1ab4249e6ce7bfc37be56f014c54b761ae" kindref="member">setX</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/>mX<sp/>=<sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="421" refid="class_q_c_p_vector2_d_1ada288019aa8cd51e3b30acfc07b461dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1ada288019aa8cd51e3b30acfc07b461dc" kindref="member">setY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/>mY<sp/>=<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="class_q_c_p_vector2_d_1a10adb5ab031fe94f0b64a3c5aefb552e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a10adb5ab031fe94f0b64a3c5aefb552e" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(mX*mX+mY*mY);<sp/>}</highlight></codeline>
<codeline lineno="425" refid="class_q_c_p_vector2_d_1a766585459d84cb149334fda1a498b2e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a766585459d84cb149334fda1a498b2e5" kindref="member">lengthSquared</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mX*mX+mY*mY;<sp/>}</highlight></codeline>
<codeline lineno="426" refid="class_q_c_p_vector2_d_1a2d3ff018ba2aca0ac0d15db35d45a4de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a2d3ff018ba2aca0ac0d15db35d45a4de" kindref="member">angle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qAtan2(mY,<sp/>mX);<sp/>}</highlight></codeline>
<codeline lineno="427" refid="class_q_c_p_vector2_d_1add3edf75de9b7bf1abc693b973b2e906" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_vector2_d_1add3edf75de9b7bf1abc693b973b2e906" kindref="member">toPoint</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(mX),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(mY));<sp/>}</highlight></codeline>
<codeline lineno="428" refid="class_q_c_p_vector2_d_1acd7af3f4a62833ada58be3f3021dbbac" refkind="member"><highlight class="normal"><sp/><sp/>QPointF<sp/><ref refid="class_q_c_p_vector2_d_1acd7af3f4a62833ada58be3f3021dbbac" kindref="member">toPointF</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(mX,<sp/>mY);<sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="430" refid="class_q_c_p_vector2_d_1ace99f200b347b14864808213eef16593" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1ace99f200b347b14864808213eef16593" kindref="member">isNull</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qIsNull(mX)<sp/>&amp;&amp;<sp/>qIsNull(mY);<sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>normalized()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433" refid="class_q_c_p_vector2_d_1a0e08d09f9027784237e302e32290b001" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref><sp/><ref refid="class_q_c_p_vector2_d_1a0e08d09f9027784237e302e32290b001" kindref="member">perpendicular</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref>(-mY,<sp/>mX);<sp/>}</highlight></codeline>
<codeline lineno="434" refid="class_q_c_p_vector2_d_1a39f8d28db7dbffcca6aa63a1f1f6e176" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a39f8d28db7dbffcca6aa63a1f1f6e176" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref><sp/>&amp;vec)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mX*vec.mX+mY*vec.mY;<sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceSquaredToLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceSquaredToLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLineF<sp/>&amp;line)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceToStraightLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;direction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;operator*=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;operator/=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divisor);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vector);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vector);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mX,<sp/>mY;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>operator*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divisor);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec2);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec2);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="455"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPVector2D,<sp/>Q_MOVABLE_TYPE);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>operator*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCPVector2D(vec.mX*factor,<sp/>vec.mY*factor);<sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCPVector2D(vec.mX*factor,<sp/>vec.mY*factor);<sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divisor)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCPVector2D(vec.mX/divisor,<sp/>vec.mY/divisor);<sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCPVector2D(vec1.mX+vec2.mX,<sp/>vec1.mY+vec2.mY);<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCPVector2D(vec1.mX-vec2.mX,<sp/>vec1.mY-vec2.mY);<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;vec)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCPVector2D(-vec.mX,<sp/>-vec.mY);<sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="class_q_c_p_vector2_d_1a6c757af9671d925af4a36c2f58fb7234" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QDebug<sp/><ref refid="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" kindref="member">operator&lt;&lt; </ref>(QDebug<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d_1a04c90748c3623044c79fa20788ffbcc6" kindref="member">QCPVector2D</ref><sp/>&amp;vec)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>d.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;QCPVector2D(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.space();</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/vector2d.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/painter.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4035<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_q_c_p_painter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_painter_1a3c52cb0f43f34573d29bea487da28fe8" kindref="member">QCPPainter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QPainter</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="488" refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156d" kindref="member">PainterMode</ref><sp/>{<sp/><ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156da3bac5e87e3d58553b297befb4eee2a45" kindref="member">pmDefault</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489" refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">pmVectorized</ref><sp/><sp/><sp/>=<sp/>0x01<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490" refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">pmNoCaching</ref><sp/><sp/><sp/><sp/>=<sp/>0x02<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491" refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">pmNonCosmetic</ref><sp/><sp/>=<sp/>0x04<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>Q_ENUMS(PainterMode)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>Q_FLAGS(PainterModes)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(PainterModes,<sp/>PainterMode)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref>(QPaintDevice<sp/>*device);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testRenderHint(QPainter::Antialiasing);<sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>PainterModes<sp/>modes()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mModes;<sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasing(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMode(PainterMode<sp/>mode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setModes(PainterModes<sp/>modes);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>methods<sp/>hiding<sp/>non-virtual<sp/>base<sp/>class<sp/>functions<sp/>(QPainter<sp/>bug<sp/>workarounds):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>begin(QPaintDevice<sp/>*device);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(Qt::PenStyle<sp/>penStyle);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLineF<sp/>&amp;line);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;p2)<sp/>{drawLine(QLineF(p1,<sp/>p2));}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restore();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeNonCosmetic();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>PainterModes<sp/>mModes;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsAntialiasing;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>QStack&lt;bool&gt;<sp/>mAntialiasingStack;</highlight></codeline>
<codeline lineno="529"><highlight class="normal">};</highlight></codeline>
<codeline lineno="530"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPainter::PainterModes)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156d" kindref="member">QCPPainter::PainterMode</ref>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/painter.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/paintbuffer.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>5006<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="class_q_c_p_abstract_paint_buffer" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a3ce532c12f10b81697108835755641e2" kindref="member">QCPAbstractPaintBuffer</ref></highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a3ce532c12f10b81697108835755641e2" kindref="member">QCPAbstractPaintBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a3ce532c12f10b81697108835755641e2" kindref="member">~QCPAbstractPaintBuffer</ref>();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>QSize<sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSize;<sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invalidated()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInvalidated;<sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>devicePixelRatio()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDevicePixelRatio;<sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a8b68c3cd36533f1a4a23b5ce8cd66f01" kindref="member">setSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1ae4c7dc70dfc66be2879ce297b2b3d67f" kindref="member">setInvalidated</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invalidated=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a555eaad5d5c806420ff35602a1bb68fa" kindref="member">setDevicePixelRatio</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="class_q_c_p_abstract_paint_buffer_1ab1329e5e2cfc44a7cef1b5e9b6fab20d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*<ref refid="class_q_c_p_abstract_paint_buffer_1ab1329e5e2cfc44a7cef1b5e9b6fab20d" kindref="member">startPainting</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557" refid="class_q_c_p_abstract_paint_buffer_1a996577a718aecb3b9b5351fab797a062" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a996577a718aecb3b9b5351fab797a062" kindref="member">donePainting</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="558" refid="class_q_c_p_abstract_paint_buffer_1a1f92e533105b575951eba5f01d8d129d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a1f92e533105b575951eba5f01d8d129d" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559" refid="class_q_c_p_abstract_paint_buffer_1a7fc69e37c2a8232e8b2eb8b5853aae4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a7fc69e37c2a8232e8b2eb8b5853aae4c" kindref="member">clear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>QSize<sp/>mSize;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDevicePixelRatio;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInvalidated;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="class_q_c_p_abstract_paint_buffer_1a9bbd9f7520ccfa3e13fc737813f706e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a9bbd9f7520ccfa3e13fc737813f706e4" kindref="member">reallocateBuffer</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">};</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="class_q_c_p_paint_buffer_pixmap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_paint_buffer_pixmap_1aef0224e03b9285509391fcd61a8e6844" kindref="member">QCPPaintBufferPixmap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer_1a3ce532c12f10b81697108835755641e2" kindref="member">QCPAbstractPaintBuffer</ref></highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_paint_buffer_pixmap_1aef0224e03b9285509391fcd61a8e6844" kindref="member">QCPPaintBufferPixmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>devicePixelRatio);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_paint_buffer_pixmap_1aef0224e03b9285509391fcd61a8e6844" kindref="member">~QCPPaintBufferPixmap</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*<ref refid="class_q_c_p_paint_buffer_pixmap_1a357964ef7d28cfa530338be4e5c93234" kindref="member">startPainting</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_paint_buffer_pixmap_1af7bfc685e56a0a9329e57cd9a265eb74" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_paint_buffer_pixmap_1a14badbd010a3cde6b55817ccb7b65217" kindref="member">clear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mBuffer;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_paint_buffer_pixmap_1ad49f3205ba3463b1c44f8db3cfcc90f0" kindref="member">reallocateBuffer</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">};</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCP_OPENGL_PBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/>QCPPaintBufferGlPbuffer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer" kindref="compound">QCPAbstractPaintBuffer</ref></highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>QCPPaintBufferGlPbuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>devicePixelRatio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multisamples);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~QCPPaintBufferGlPbuffer()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*startPainting()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear(const<sp/>QColor<sp/>&amp;color)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>QGLPixelBuffer<sp/>*mGlPBuffer;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mMultisamples;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reallocateBuffer()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="613"><highlight class="normal">};</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>QCP_OPENGL_PBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCP_OPENGL_FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/>QCPPaintBufferGlFbo<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_paint_buffer" kindref="compound">QCPAbstractPaintBuffer</ref></highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>QCPPaintBufferGlFbo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>devicePixelRatio,<sp/>QWeakPointer&lt;QOpenGLContext&gt;<sp/>glContext,<sp/>QWeakPointer&lt;QOpenGLPaintDevice&gt;<sp/>glPaintDevice);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~QCPPaintBufferGlFbo()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*startPainting()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>donePainting()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear(const<sp/>QColor<sp/>&amp;color)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>QWeakPointer&lt;QOpenGLContext&gt;<sp/>mGlContext;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>QWeakPointer&lt;QOpenGLPaintDevice&gt;<sp/>mGlPaintDevice;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>QOpenGLFramebufferObject<sp/>*mGlFrameBuffer;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reallocateBuffer()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">};</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>QCP_OPENGL_FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/paintbuffer.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/layer.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7038<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="class_q_c_p_layer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_layer_1a5d0657fc86d624e5efbe930ef21af718" kindref="member">QCPLayer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCustomPlot*<sp/>parentPlot<sp/>READ<sp/>parentPlot)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>name<sp/>READ<sp/>name)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer_1ad322905c4700dcc7ceba63e011c730d2" kindref="member">index</ref><sp/>READ<sp/><ref refid="class_q_c_p_layer_1ad322905c4700dcc7ceba63e011c730d2" kindref="member">index</ref>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QList&lt;QCPLayerable*&gt;<sp/><ref refid="class_q_c_p_layer_1a183b90941fc78f0b136edd77c5fb6966" kindref="member">children</ref><sp/>READ<sp/><ref refid="class_q_c_p_layer_1a183b90941fc78f0b136edd77c5fb6966" kindref="member">children</ref>)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible<sp/>READ<sp/>visible<sp/>WRITE<sp/><ref refid="class_q_c_p_layer_1ac07671f74edf6884b51a82afb2c19516" kindref="member">setVisible</ref>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7c" kindref="member">LayerMode</ref><sp/>mode<sp/>READ<sp/>mode<sp/>WRITE<sp/><ref refid="class_q_c_p_layer_1a938d57b04f4e4c23cedf1711f983919b" kindref="member">setMode</ref>)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="667" refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7c" kindref="member">LayerMode</ref><sp/>{<sp/><ref refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7ca02eb5e9a4cb7f1baf1e2b6b99e3b87ce" kindref="member">lmLogical</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668" refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7cab581b9fab3007c4c65f057f4185d7538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7cab581b9fab3007c4c65f057f4185d7538" kindref="member">lmBuffered</ref><sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>Q_ENUMS(LayerMode)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>*<sp/>parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;layerName);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer" kindref="compound">~QCPLayer</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentPlot;<sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>QString<sp/>name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;<sp/>}</highlight></codeline>
<codeline lineno="678" refid="class_q_c_p_layer_1ad322905c4700dcc7ceba63e011c730d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer_1ad322905c4700dcc7ceba63e011c730d2" kindref="member">index</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIndex;<sp/>}</highlight></codeline>
<codeline lineno="679" refid="class_q_c_p_layer_1a183b90941fc78f0b136edd77c5fb6966" refkind="member"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayerable*&gt;<sp/><ref refid="class_q_c_p_layer_1a183b90941fc78f0b136edd77c5fb6966" kindref="member">children</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mChildren;<sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mVisible;<sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>LayerMode<sp/>mode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMode;<sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVisible(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMode(LayerMode<sp/>mode);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>replot();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>QCustomPlot<sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>QString<sp/>mName;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mIndex;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayerable*&gt;<sp/>mChildren;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mVisible;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>LayerMode<sp/>mMode;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>QWeakPointer&lt;QCPAbstractPaintBuffer&gt;<sp/>mPaintBuffer;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawToPaintBuffer();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChild(QCPLayerable<sp/>*layerable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prepend);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeChild(QCPLayerable<sp/>*layerable);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(QCPLayer)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCustomPlot;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPLayerable;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">};</highlight></codeline>
<codeline lineno="714"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_layer_1a67dcfc1590be2a1f2227c5a39bb59c7c" kindref="member">QCPLayer::LayerMode</ref>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="class_q_c_p_layerable" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref><sp/>:<sp/>public<sp/>QObject</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible<sp/>READ<sp/>visible<sp/>WRITE<sp/><ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCustomPlot*<sp/>parentPlot<sp/>READ<sp/>parentPlot)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref>*<sp/><ref refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" kindref="member">parentLayerable</ref><sp/>READ<sp/><ref refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" kindref="member">parentLayerable</ref>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPLayer*<sp/>layer<sp/>READ<sp/>layer<sp/>WRITE<sp/><ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">setLayer</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" kindref="member">layerChanged</ref>)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiased<sp/>READ<sp/>antialiased<sp/>WRITE<sp/><ref refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" kindref="member">setAntialiased</ref>)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref>(QCustomPlot<sp/>*plot,<sp/>QString<sp/>targetLayer=QString(),<sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref><sp/>*<ref refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" kindref="member">parentLayerable</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">~QCPLayerable</ref>();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mVisible;<sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>QCustomPlot<sp/>*parentPlot()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentPlot;<sp/>}</highlight></codeline>
<codeline lineno="733" refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref><sp/>*<ref refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" kindref="member">parentLayerable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentLayerable.data();<sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLayer;<sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiased()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiased;<sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVisible(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setLayer(QCPLayer<sp/>*layer);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;layerName);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiased(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>realVisibility()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="750" refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" kindref="member">layerChanged</ref>(QCPLayer<sp/>*newLayer);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mVisible;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>QCustomPlot<sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPLayerable&gt;<sp/>mParentLayerable;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>QCPLayer<sp/>*mLayer;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAntialiased;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parentPlotInitialized(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>selectionCategory()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QRect<sp/>clipRect()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>selection<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>low-level<sp/>mouse<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref>(QWheelEvent<sp/>*event);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeParentPlot(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setParentLayerable(<ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref>*<sp/><ref refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" kindref="member">parentLayerable</ref>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>moveToLayer(QCPLayer<sp/>*layer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prepend);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>localAntialiased,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref><sp/>overrideElement)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref>)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCustomPlot;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPLayer;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPAxisRect;</highlight></codeline>
<codeline lineno="788"><highlight class="normal">};</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/layer.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/range.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>5280<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="class_q_c_p_range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref></highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/>upper;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lower<sp/>==<sp/>other.lower<sp/>&amp;&amp;<sp/>upper<sp/>==<sp/>other.upper;<sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="807" refid="class_q_c_p_range_1afea7c1aa7d08f061cd9bd8832f957df8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>&amp;<ref refid="class_q_c_p_range_1afea7c1aa7d08f061cd9bd8832f957df8" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{<sp/>lower+=value;<sp/>upper+=value;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="808" refid="class_q_c_p_range_1a95894bcb15a16a75ca564091374e2191" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>&amp;<ref refid="class_q_c_p_range_1a95894bcb15a16a75ca564091374e2191" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{<sp/>lower-=value;<sp/>upper-=value;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="809" refid="class_q_c_p_range_1a6876aa9620ff2f0f7f1873f998372cef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>&amp;<ref refid="class_q_c_p_range_1a6876aa9620ff2f0f7f1873f998372cef" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{<sp/>lower*=value;<sp/>upper*=value;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="810" refid="class_q_c_p_range_1a6137d8682b6835ace840730b4c1e2d63" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>&amp;<ref refid="class_q_c_p_range_1a6137d8682b6835ace840730b4c1e2d63" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{<sp/>lower/=value;<sp/>upper/=value;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>operator+(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>&amp;);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>operator*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>&amp;<sp/>range);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="818" refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>upper-lower;<sp/>}</highlight></codeline>
<codeline lineno="819" refid="class_q_c_p_range_1af57d4a37a45d0101177ca30fae5d4ca8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1af57d4a37a45d0101177ca30fae5d4ca8" kindref="member">center</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(upper+lower)*0.5;<sp/>}</highlight></codeline>
<codeline lineno="820" refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" kindref="member">normalize</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>&gt;<sp/>upper)<sp/>qSwap(lower,<sp/>upper);<sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expand(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;otherRange);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expand(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>includeCoord);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>expanded(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;otherRange)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>expanded(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>includeCoord)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>bounded(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerBound,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperBound)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>sanitizedForLogScale()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>sanitizedForLinScale()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828" refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>&gt;=<sp/>lower<sp/>&amp;&amp;<sp/>value<sp/>&lt;=<sp/>upper;<sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range);</highlight></codeline>
<codeline lineno="832" refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">minRange</ref>;</highlight></codeline>
<codeline lineno="833" refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal">};</highlight></codeline>
<codeline lineno="836"><highlight class="normal">Q_DECLARE_TYPEINFO(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>,<sp/>Q_MOVABLE_TYPE);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="class_q_c_p_range_1ab4b7d434541ec2e2e00ef3764dde90d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QDebug<sp/><ref refid="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" kindref="member">operator&lt;&lt; </ref>(QDebug<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>&amp;range)</highlight></codeline>
<codeline lineno="843"><highlight class="normal">{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>d.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;QCPRange(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>range.lower<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>range.upper<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.space();</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="class_q_c_p_range_1aede14e69c31568a75bd3e9286603c9e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1aede14e69c31568a75bd3e9286603c9e0" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>result(range);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="class_q_c_p_range_1aa7dd8efde53d115b7107826194879069" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1aede14e69c31568a75bd3e9286603c9e0" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>range)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>result(range);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="class_q_c_p_range_1a797f82830b516646da8873f82e39e356" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1a797f82830b516646da8873f82e39e356" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>result(range);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>value;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="class_q_c_p_range_1a558b1248ff6a9e41fd5b2630555a8acc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1a558b1248ff6a9e41fd5b2630555a8acc" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>result(range);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>result<sp/>*=<sp/>value;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="class_q_c_p_range_1a5cb2332f6957021f47cc768089f4f090" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1a558b1248ff6a9e41fd5b2630555a8acc" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>range)</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>result(range);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>result<sp/>*=<sp/>value;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="class_q_c_p_range_1a4b366a3a21974c88e09b0d39d4a24a4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1a4b366a3a21974c88e09b0d39d4a24a4b" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref>&amp;<sp/>range,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange</ref><sp/>result(range);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>result<sp/>/=<sp/>value;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/range.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/selection.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>8569<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="class_q_c_p_data_range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref></highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref>();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBegin<sp/>==<sp/>other.mBegin<sp/>&amp;&amp;<sp/>mEnd<sp/>==<sp/>other.mEnd;<sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBegin;<sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEnd;<sp/>}</highlight></codeline>
<codeline lineno="926" refid="class_q_c_p_data_range_1ac6af055e509d1b691c244954ff1c5887" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1ac6af055e509d1b691c244954ff1c5887" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEnd-mBegin;<sp/>}</highlight></codeline>
<codeline lineno="927" refid="class_q_c_p_data_range_1a1e7836058f755c6ab9f11996477b7150" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a1e7836058f755c6ab9f11996477b7150" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1ac6af055e509d1b691c244954ff1c5887" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="class_q_c_p_data_range_1a54ff59048e01e46ac4aefafc844626c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a54ff59048e01e46ac4aefafc844626c6" kindref="member">setBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin)<sp/>{<sp/>mBegin<sp/>=<sp/>begin;<sp/>}</highlight></codeline>
<codeline lineno="931" refid="class_q_c_p_data_range_1a277f1a9eafe70b9184d9c00b641ae5de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a277f1a9eafe70b9184d9c00b641ae5de" kindref="member">setEnd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)<sp/><sp/>{<sp/>mEnd<sp/>=<sp/>end;<sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934" refid="class_q_c_p_data_range_1aae53a37472212dca0a7939963e20dba0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1aae53a37472212dca0a7939963e20dba0" kindref="member">isValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mEnd<sp/>&gt;=<sp/>mBegin)<sp/>&amp;&amp;<sp/>(mBegin<sp/>&gt;=<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="935" refid="class_q_c_p_data_range_1ac32e53fc05d6cd2eac96b96a7265d3b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1ac32e53fc05d6cd2eac96b96a7265d3b8" kindref="member">isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a1e7836058f755c6ab9f11996477b7150" kindref="member">length</ref>()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>bounded(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>expanded(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>intersection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939" refid="class_q_c_p_data_range_1a279ed36602b39607699dc5652bcaf813" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref><sp/><ref refid="class_q_c_p_data_range_1a279ed36602b39607699dc5652bcaf813" kindref="member">adjusted</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>changeBegin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>changeEnd)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref>(mBegin+changeBegin,<sp/>mEnd+changeEnd);<sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>intersects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBegin,<sp/>mEnd;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal">};</highlight></codeline>
<codeline lineno="948"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPDataRange,<sp/>Q_MOVABLE_TYPE);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="class_q_c_p_data_selection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref></highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;range);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>&amp;<ref refid="class_q_c_p_data_selection_1a4584d4b0ea5c4f095bd7b70f88eb5d9d" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>&amp;<ref refid="class_q_c_p_data_selection_1a4584d4b0ea5c4f095bd7b70f88eb5d9d" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>&amp;<ref refid="class_q_c_p_data_selection_1a66f9fab70b026baa64bf8e52fe5de07e" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>&amp;<ref refid="class_q_c_p_data_selection_1a66f9fab70b026baa64bf8e52fe5de07e" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d" kindref="member">dataRangeCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataRanges.size();<sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataPointCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>dataRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index=0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976" refid="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da" refkind="member"><highlight class="normal"><sp/><sp/>QList&lt;QCPDataRange&gt;<sp/><ref refid="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da" kindref="member">dataRanges</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataRanges;<sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>span()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDataRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;dataRange,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>simplify=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="982" refid="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9" kindref="member">isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataRanges.isEmpty();<sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enforceType(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>type);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>intersection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>intersection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;outerRange)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>QList&lt;QCPDataRange&gt;<sp/>mDataRanges;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lessThanDataRangeBegin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.begin()<sp/>&lt;<sp/>b.begin();<sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal">};</highlight></codeline>
<codeline lineno="996"><highlight class="normal">Q_DECLARE_METATYPE(QCPDataSelection)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" refkind="member"><highlight class="normal">inline<sp/>const<sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>operator+(const<sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/>const<sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014" refid="class_q_c_p_data_selection_1a5feed9419bd3df5cb4d4a761580545cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="class_q_c_p_data_selection_1aa574f51a74d6998e9be95e252e6be287" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="class_q_c_p_data_selection_1a0822e3133b80b5dedfc8050a19c1e0c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a49c0217af248959d59abfdd29401b678" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056" refid="class_q_c_p_data_selection_1a726652cb9ed840e3025435cc2c266468" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="class_q_c_p_data_selection_1a32c5784ac70946f09a09b2dd19816b78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="class_q_c_p_data_selection_1ad62dd67b505c1fa9c02d1aafabcb9acf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_data_selection_1a41147ef7d6303c746e398278b7b624d1" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>result(a);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="class_q_c_p_data_range_1a486dd7af8a090ed069672e3510e6a082" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QDebug<sp/><ref refid="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" kindref="member">operator&lt;&lt; </ref>(QDebug<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range_1a49e72fd9bace1da9d875136dcc04c986" kindref="member">QCPDataRange</ref><sp/>&amp;dataRange)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>d.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;QCPDataRange(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dataRange.begin()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dataRange.end()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097" refid="class_q_c_p_data_selection_1aed65b8988afe6b03adeadf5edf663670" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QDebug<sp/><ref refid="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" kindref="member">operator&lt;&lt; </ref>(QDebug<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d" kindref="member">QCPDataSelection</ref><sp/>&amp;selection)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>d.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;QCPDataSelection(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;selection.<ref refid="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d" kindref="member">dataRangeCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>&lt;&lt;<sp/>selection.<ref refid="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad" kindref="member">dataRange</ref>(i);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/selection.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/selectionrect.h&apos;<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3354<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118" refid="class_q_c_p_selection_rect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_selection_rect_1ade6ee59fabcc585a1e281eb527b01867" kindref="member">QCPSelectionRect</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="1119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1ade6ee59fabcc585a1e281eb527b01867" kindref="member">QCPSelectionRect</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1ade6ee59fabcc585a1e281eb527b01867" kindref="member">~QCPSelectionRect</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>QRect<sp/>rect()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect;<sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_selection_rect_1a23ab082ffa04be1dbf9afb9e633ab815" kindref="member">range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="1130" refid="class_q_c_p_selection_rect_1ad27c1569c6ea8fa48e24b81e2a302df3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1ad27c1569c6ea8fa48e24b81e2a302df3" kindref="member">isActive</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mActive;<sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cancel();</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="1140" refid="class_q_c_p_selection_rect_1a7b7162d19f4f2174d3644ff1a5d335aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1a7b7162d19f4f2174d3644ff1a5d335aa" kindref="member">started</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1141" refid="class_q_c_p_selection_rect_1a1bab11026bca52740c2e6682623e6964" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1a1bab11026bca52740c2e6682623e6964" kindref="member">changed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1142" refid="class_q_c_p_selection_rect_1aeb82009393c90130102dccf36477b906" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1aeb82009393c90130102dccf36477b906" kindref="member">canceled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect,<sp/>QInputEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1143" refid="class_q_c_p_selection_rect_1a15a43542e1f7b953a44c260b419e6d2c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_rect_1a15a43542e1f7b953a44c260b419e6d2c" kindref="member">accepted</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>QRect<sp/>mRect;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mActive;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSelection(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveSelection(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endSelection(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>keyPressEvent(QKeyEvent<sp/>*event);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCustomPlot;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/selectionrect.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/layout.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>14279<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172" refid="class_q_c_p_margin_group" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_margin_group_1ac481c20678ec5b305d6df330715f4b7b" kindref="member">QCPMarginGroup</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1ac481c20678ec5b305d6df330715f4b7b" kindref="member">QCPMarginGroup</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1ac481c20678ec5b305d6df330715f4b7b" kindref="member">~QCPMarginGroup</ref>();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180" refid="class_q_c_p_margin_group_1ac967a4dc5fe02ae44aeb43511d5e1bd4" refkind="member"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_margin_group_1ac967a4dc5fe02ae44aeb43511d5e1bd4" kindref="member">elements</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mChildren.value(side);<sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEmpty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>QHash&lt;QCP::MarginSide,<sp/>QList&lt;QCPLayoutElement*&gt;<sp/>&gt;<sp/>mChildren;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>commonMargin(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChild(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side,<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeChild(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side,<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref>)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203" refid="class_q_c_p_layout_element" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" kindref="member">QCPLayoutElement</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPLayout*<sp/><ref refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" kindref="member">layout</ref><sp/>READ<sp/><ref refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" kindref="member">layout</ref>)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QRect<sp/><ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref><sp/>READ<sp/><ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref>)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QRect<sp/><ref refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" kindref="member">outerRect</ref><sp/>READ<sp/><ref refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" kindref="member">outerRect</ref><sp/>WRITE<sp/><ref refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" kindref="member">setOuterRect</ref>)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QMargins<sp/>margins<sp/>READ<sp/>margins<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref>)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QMargins<sp/>minimumMargins<sp/>READ<sp/>minimumMargins<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" kindref="member">setMinimumMargins</ref>)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QSize<sp/>minimumSize<sp/>READ<sp/>minimumSize<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">setMinimumSize</ref>)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QSize<sp/>maximumSize<sp/>READ<sp/>maximumSize<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">setMaximumSize</ref>)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2a" kindref="member">SizeConstraintRect</ref><sp/>sizeConstraintRect<sp/>READ<sp/>sizeConstraintRect<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_element_1a361666cdcc6fbfd37344cc44be746b0f" kindref="member">setSizeConstraintRect</ref>)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1221" refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">UpdatePhase</ref><sp/>{<sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" kindref="member">upPreparation</ref><sp/></highlight></codeline>
<codeline lineno="1222" refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" kindref="member">upMargins</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1223" refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" kindref="member">upLayout</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>Q_ENUMS(UpdatePhase)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1235" refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aa7fa7e25cd23758b9915c64ed9f1be26c" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2a" kindref="member">SizeConstraintRect</ref><sp/>{<sp/><ref refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aa7fa7e25cd23758b9915c64ed9f1be26c" kindref="member">scrInnerRect</ref><sp/></highlight></codeline>
<codeline lineno="1236" refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aabe2745b41a6131ed194e13591b08e04d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_q_c_p_layout_element_1a0afb3e5773529e4bd20e448f81be4d2aabe2745b41a6131ed194e13591b08e04d" kindref="member">scrOuterRect</ref><sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>Q_ENUMS(SizeConstraintRect)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element" kindref="compound">~QCPLayoutElement</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244" refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" refkind="member"><highlight class="normal"><sp/><sp/>QCPLayout<sp/>*<ref refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" kindref="member">layout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentLayout;<sp/>}</highlight></codeline>
<codeline lineno="1245" refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" refkind="member"><highlight class="normal"><sp/><sp/>QRect<sp/><ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect;<sp/>}</highlight></codeline>
<codeline lineno="1246" refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" refkind="member"><highlight class="normal"><sp/><sp/>QRect<sp/><ref refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" kindref="member">outerRect</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOuterRect;<sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>QMargins<sp/>margins()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMargins;<sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>QMargins<sp/>minimumMargins()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMinimumMargins;<sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>QCP::MarginSides<sp/>autoMargins()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAutoMargins;<sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>QSize<sp/>minimumSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMinimumSize;<sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>QSize<sp/>maximumSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMaximumSize;<sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>SizeConstraintRect<sp/>sizeConstraintRect()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSizeConstraintRect;<sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>QCPMarginGroup<sp/>*marginGroup(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMarginGroups.value(side,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>QHash&lt;QCP::MarginSide,<sp/>QCPMarginGroup*&gt;<sp/>marginGroups()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMarginGroups;<sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOuterRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMargins(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;margins);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinimumMargins(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;margins);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAutoMargins(QCP::MarginSides<sp/>sides);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinimumSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinimumSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaximumSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaximumSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSizeConstraintRect(SizeConstraintRect<sp/>constraintRect);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMarginGroup(QCP::MarginSides<sp/>sides,<sp/>QCPMarginGroup<sp/>*group);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(UpdatePhase<sp/>phase);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QSize<sp/>minimumOuterSizeHint()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QSize<sp/>maximumOuterSizeHint()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>elements(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1277"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>QCPLayout<sp/>*mParentLayout;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>QSize<sp/>mMinimumSize,<sp/>mMaximumSize;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>SizeConstraintRect<sp/>mSizeConstraintRect;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>QRect<sp/>mRect,<sp/>mOuterRect;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>QMargins<sp/>mMargins,<sp/>mMinimumMargins;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>QCP::MarginSides<sp/>mAutoMargins;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>QHash&lt;QCP::MarginSide,<sp/>QCPMarginGroup*&gt;<sp/>mMarginGroups;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>calculateAutoMargin(QCP::MarginSide<sp/>side);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layoutChanged();</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(QCPPainter<sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE<sp/>{<sp/>Q_UNUSED(painter)<sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE<sp/>{<sp/>Q_UNUSED(painter)<sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parentPlotInitialized(QCustomPlot<sp/>*parentPlot)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(QCPLayoutElement)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCustomPlot;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPLayout;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPMarginGroup;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">QCPLayoutElement::UpdatePhase</ref>)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306" refid="class_q_c_p_layout" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" kindref="member">QCPLayout</ref><sp/>:<sp/>public<sp/>QCPLayoutElement</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" kindref="member">QCPLayout</ref>();</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a48ecc9c98ea90b547c3e27a931a8f7bd" kindref="member">update</ref>(<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">UpdatePhase</ref><sp/>phase)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_layout_1aca129722c019f91d3367046f80abfa77" kindref="member">elements</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317" refid="class_q_c_p_layout_1acc6012e7dacc55c4282942c31c45b8d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1acc6012e7dacc55c4282942c31c45b8d9" kindref="member">elementCount</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1318" refid="class_q_c_p_layout_1ab22bd9153d855a35ab4010267ae36a69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPLayoutElement*<sp/><ref refid="class_q_c_p_layout_1ab22bd9153d855a35ab4010267ae36a69" kindref="member">elementAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1319" refid="class_q_c_p_layout_1aae3fc1bd5656aa737f18f0779789fd79" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPLayoutElement*<sp/><ref refid="class_q_c_p_layout_1aae3fc1bd5656aa737f18f0779789fd79" kindref="member">takeAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1320" refid="class_q_c_p_layout_1ad110be0de976cd8a817513a4a53d53db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1ad110be0de976cd8a817513a4a53d53db" kindref="member">take</ref>(QCPLayoutElement*<sp/>element)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a41e6ac049143866e8f8b4964efab01b2" kindref="member">simplify</ref>();</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a2403f684fee3ce47132faaeed00bb066" kindref="member">removeAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a6c58f537d8086f352576ab7c5b15d0bc" kindref="member">remove</ref>(QCPLayoutElement*<sp/>element);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a02883bdf2769b5b227f0232dba1ac4ee" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLayout();</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1aeac66a292f65cf7f8adf94eb92345b3e" kindref="member">sizeConstraintsChanged</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adoptElement(QCPLayoutElement<sp/>*el);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>releaseElement(QCPLayoutElement<sp/>*el);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>getSectionSizes(QVector&lt;int&gt;<sp/>maxSizes,<sp/>QVector&lt;int&gt;<sp/>minSizes,<sp/>QVector&lt;double&gt;<sp/>stretchFactors,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalSize)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QSize<sp/>getFinalMinimumOuterSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPLayoutElement<sp/>*el);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QSize<sp/>getFinalMaximumOuterSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPLayoutElement<sp/>*el);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" kindref="member">QCPLayout</ref>)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPLayoutElement;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346" refid="class_q_c_p_layout_grid" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_layout_grid_1ab2a4c1587dc8aed4c41c509c8d8d2a64" kindref="member">QCPLayoutGrid</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" kindref="member">QCPLayout</ref></highlight></codeline>
<codeline lineno="1347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a19c66fd76cbce58a8e94f33797e0c0aa" kindref="member">rowCount</ref><sp/>READ<sp/><ref refid="class_q_c_p_layout_grid_1a19c66fd76cbce58a8e94f33797e0c0aa" kindref="member">rowCount</ref>)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a1a2962cbf45011405b64b913afa8e7a2" kindref="member">columnCount</ref><sp/>READ<sp/><ref refid="class_q_c_p_layout_grid_1a1a2962cbf45011405b64b913afa8e7a2" kindref="member">columnCount</ref>)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QList&lt;double&gt;<sp/>columnStretchFactors<sp/>READ<sp/>columnStretchFactors<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_grid_1a6c2591d1a7e2534ce036989543b49e57" kindref="member">setColumnStretchFactors</ref>)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QList&lt;double&gt;<sp/>rowStretchFactors<sp/>READ<sp/>rowStretchFactors<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_grid_1a200b45f9c908f96ebadaa3c8d87a2782" kindref="member">setRowStretchFactors</ref>)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columnSpacing<sp/>READ<sp/>columnSpacing<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_grid_1a3a49272aba32bb0fddc3bb2a45a3dba0" kindref="member">setColumnSpacing</ref>)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowSpacing<sp/>READ<sp/>rowSpacing<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_grid_1aaef2cd2d456197ee06a208793678e436" kindref="member">setRowSpacing</ref>)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353cca" kindref="member">FillOrder</ref><sp/>fillOrder<sp/>READ<sp/>fillOrder<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_grid_1affc2f3cfd22f28698c5b29b960d2a391" kindref="member">setFillOrder</ref>)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrap<sp/>READ<sp/>wrap<sp/>WRITE<sp/><ref refid="class_q_c_p_layout_grid_1ab36af18d77e4428386d02970382ee598" kindref="member">setWrap</ref>)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1368" refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353cca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353cca" kindref="member">FillOrder</ref><sp/>{<sp/><ref refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353ccaa0202730954e26c474cc820164aedce3e" kindref="member">foRowsFirst</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1369" refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353ccaac4cb4b796ec4822d5894b47b51627fb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_layout_grid_1a7d49ee08773de6b2fd246edfed353ccaac4cb4b796ec4822d5894b47b51627fb3" kindref="member">foColumnsFirst</ref><sp/></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>Q_ENUMS(FillOrder)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid" kindref="compound">~QCPLayoutGrid</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377" refid="class_q_c_p_layout_grid_1a19c66fd76cbce58a8e94f33797e0c0aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a19c66fd76cbce58a8e94f33797e0c0aa" kindref="member">rowCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mElements.size();<sp/>}</highlight></codeline>
<codeline lineno="1378" refid="class_q_c_p_layout_grid_1a1a2962cbf45011405b64b913afa8e7a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a1a2962cbf45011405b64b913afa8e7a2" kindref="member">columnCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mElements.size()<sp/>&gt;<sp/>0<sp/>?<sp/>mElements.first().size()<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>QList&lt;double&gt;<sp/>columnStretchFactors()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColumnStretchFactors;<sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>QList&lt;double&gt;<sp/>rowStretchFactors()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRowStretchFactors;<sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columnSpacing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColumnSpacing;<sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowSpacing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRowSpacing;<sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWrap;<sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>FillOrder<sp/>fillOrder()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFillOrder;<sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColumnStretchFactor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColumnStretchFactors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;double&gt;<sp/>&amp;factors);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRowStretchFactor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRowStretchFactors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;double&gt;<sp/>&amp;factors);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColumnSpacing(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRowSpacing(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWrap(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillOrder(FillOrder<sp/>order,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rearrange=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLayout()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1398" refid="class_q_c_p_layout_grid_1a9a8942aface780a02445ebcf14c48513" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a9a8942aface780a02445ebcf14c48513" kindref="member">elementCount</ref>()<sp/>const<sp/>Q_DECL_OVERRIDE<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a19c66fd76cbce58a8e94f33797e0c0aa" kindref="member">rowCount</ref>()*<ref refid="class_q_c_p_layout_grid_1a1a2962cbf45011405b64b913afa8e7a2" kindref="member">columnCount</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>elementAt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>takeAt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take(<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>element)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>elements(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>virtual<sp/>QSize<sp/>minimumOuterSizeHint()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>virtual<sp/>QSize<sp/>maximumOuterSizeHint()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column)<sp/>const;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addElement(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column,<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addElement(<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasElement(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expandTo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newRowCount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newColumnCount);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertRow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newIndex);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertColumn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newIndex);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowColToIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column)<sp/>const;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>indexToRowCol(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;column)<sp/>const;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1418"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>QList&lt;QList&lt;<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*&gt;<sp/>&gt;<sp/>mElements;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>QList&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>mColumnStretchFactors;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>QList&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>mRowStretchFactors;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mColumnSpacing,<sp/>mRowSpacing;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mWrap;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>FillOrder<sp/>mFillOrder;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getMinimumRowColSizes(QVector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>*minColWidths,<sp/>QVector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>*minRowHeights)<sp/>const;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getMaximumRowColSizes(QVector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>*maxColWidths,<sp/>QVector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>*maxRowHeights)<sp/>const;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>::FillOrder)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437" refid="class_q_c_p_layout_inset" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_layout_inset_1a3ad984f3221735374cc5dee14356a7dd" kindref="member">QCPLayoutInset</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" kindref="member">QCPLayout</ref></highlight></codeline>
<codeline lineno="1438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1444" refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192" kindref="member">InsetPlacement</ref><sp/>{<sp/><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa4802986ea2cea457f932b115acba59e" kindref="member">ipFree</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1445" refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa81e7df4a785ddee2229a8f47c46e817" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa81e7df4a785ddee2229a8f47c46e817" kindref="member">ipBorderAligned</ref><sp/><sp/></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>Q_ENUMS(InsetPlacement)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref>();</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset" kindref="compound">~QCPLayoutInset</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>InsetPlacement<sp/>insetPlacement(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>Qt::Alignment<sp/>insetAlignment(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>QRectF<sp/>insetRect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInsetPlacement(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>InsetPlacement<sp/>placement);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInsetAlignment(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>Qt::Alignment<sp/>alignment);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInsetRect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>const<sp/>QRectF<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLayout()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elementCount()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>elementAt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>takeAt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take(<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>element)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1468" refid="class_q_c_p_layout_inset_1abdac9a04752751ea68c320016086a2e8" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1abdac9a04752751ea68c320016086a2e8" kindref="member">simplify</ref>()<sp/>Q_DECL_OVERRIDE<sp/>{}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addElement(<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element,<sp/>Qt::Alignment<sp/>alignment);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addElement(<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element,<sp/>const<sp/>QRectF<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1475"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>QList&lt;<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*&gt;<sp/>mElements;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>QList&lt;InsetPlacement&gt;<sp/>mInsetPlacement;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>QList&lt;Qt::Alignment&gt;<sp/>mInsetAlignment;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>QList&lt;QRectF&gt;<sp/>mInsetRect;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1482"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref>)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref>::InsetPlacement)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/layout.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/lineending.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4426<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493" refid="class_q_c_p_line_ending" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_line_ending_1af2eaf8123b000d97fbd11929c669f61b" kindref="member">QCPLineEnding</ref></highlight></codeline>
<codeline lineno="1494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1508" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">EndingStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">esNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1509" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" kindref="member">esFlatArrow</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1510" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">esSpikeArrow</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1511" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" kindref="member">esLineArrow</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1512" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" kindref="member">esDisc</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1513" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" kindref="member">esSquare</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1514" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" kindref="member">esDiamond</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1515" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" kindref="member">esBar</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1516" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">esHalfBar</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1517" refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" kindref="member">esSkewedBar</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>Q_ENUMS(EndingStyle)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref>();</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref>(EndingStyle<sp/>style,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width=8,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length=10,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>EndingStyle<sp/>style()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mStyle;<sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWidth;<sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLength;<sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInverted;<sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStyle(EndingStyle<sp/>style);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLength(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInverted(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boundingDistance()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>realLength()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;dir)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPVector2D<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/>EndingStyle<sp/>mStyle;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWidth,<sp/>mLength;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInverted;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPLineEnding,<sp/>Q_MOVABLE_TYPE);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref>)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/lineending.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/labelpainter.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7086<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557" refid="class_q_c_p_label_painter_private" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_q_c_p_label_painter_private_1a345362f7beb21a82d6e246b8c19f8d20" kindref="member">QCPLabelPainterPrivate</ref></highlight></codeline>
<codeline lineno="1558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1564" refid="class_q_c_p_label_painter_private_1aa5cb5741a8794bb2879229b42c9436cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_label_painter_private_1aa5cb5741a8794bb2879229b42c9436cb" kindref="member">AnchorMode</ref><sp/>{<sp/>amRectangular<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,amSkewedUpright<sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,amSkewedRotated<sp/></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>Q_ENUMS(AnchorMode)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1573" refid="class_q_c_p_label_painter_private_1a4412631876e675106f8002f30023cba9" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_label_painter_private_1a4412631876e675106f8002f30023cba9" kindref="member">AnchorReferenceType</ref><sp/>{<sp/>artNormal<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,artTangent<sp/></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>Q_ENUMS(AnchorReferenceType)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1581" refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>{<sp/>asLeft<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asRight<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asTop<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asBottom<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asTopLeft</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asTopRight</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asBottomRight</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,asBottomLeft</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>Q_ENUMS(AnchorSide)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_label_painter_private" kindref="compound">QCPLabelPainterPrivate</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_label_painter_private" kindref="compound">~QCPLabelPainterPrivate</ref>();</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAnchorSide(AnchorSide<sp/>side);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAnchorMode(AnchorMode<sp/>mode);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAnchorReference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPoint);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAnchorReferenceType(AnchorReferenceType<sp/>type);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubstituteExponent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMultiplicationSymbol(QChar<sp/>symbol);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAbbreviateDecimalPowers(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCacheSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelCount);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>AnchorMode<sp/>anchorMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAnchorMode;<sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>AnchorSide<sp/>anchorSide()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAnchorSide;<sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>QPointF<sp/>anchorReference()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAnchorReference;<sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>AnchorReferenceType<sp/>anchorReferenceType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAnchorReferenceType;<sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>QFont<sp/>font()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFont;<sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>QColor<sp/>color()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColor;<sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPadding;<sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRotation;<sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>substituteExponent()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubstituteExponent;<sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>QChar<sp/>multiplicationSymbol()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMultiplicationSymbol;<sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>abbreviateDecimalPowers()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAbbreviateDecimalPowers;<sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cacheSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//virtual<sp/>int<sp/>size()<sp/>const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawTickLabel(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;tickPos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearCache();</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constants<sp/>that<sp/>may<sp/>be<sp/>used<sp/>with<sp/>setMultiplicationSymbol:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QChar<sp/>SymbolDot;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QChar<sp/>SymbolCross;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1634" refid="struct_q_c_p_label_painter_private_1_1_cached_label" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_q_c_p_label_painter_private_1_1_cached_label" kindref="compound">CachedLabel</ref></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>offset;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>QPixmap<sp/>pixmap;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1639" refid="struct_q_c_p_label_painter_private_1_1_label_data" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_q_c_p_label_painter_private_1_1_label_data" kindref="compound">LabelData</ref></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>side;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation;<sp/></highlight><highlight class="comment">//<sp/>angle<sp/>in<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>QTransform<sp/>transform;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>transform<sp/>about<sp/>the<sp/>label<sp/>anchor<sp/>which<sp/>is<sp/>at<sp/>(0,<sp/>0).<sp/>Does<sp/>not<sp/>contain<sp/>final<sp/>absolute<sp/>x/y<sp/>positioning<sp/>on<sp/>the<sp/>plot/axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>basePart,<sp/>expPart,<sp/>suffixPart;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>baseBounds,<sp/>expBounds,<sp/>suffixBounds;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>totalBounds;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>a<sp/>coordinate<sp/>system<sp/>where<sp/>label<sp/>top<sp/>left<sp/>is<sp/>at<sp/>(0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>rotatedTotalBounds;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>a<sp/>coordinate<sp/>system<sp/>where<sp/>the<sp/>label<sp/>anchor<sp/>is<sp/>at<sp/>(0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>QFont<sp/>baseFont,<sp/>expFont;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>QColor<sp/>color;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_label_painter_private_1aa5cb5741a8794bb2879229b42c9436cb" kindref="member">AnchorMode</ref><sp/>mAnchorMode;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>mAnchorSide;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>QPointF<sp/>mAnchorReference;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_label_painter_private_1a4412631876e675106f8002f30023cba9" kindref="member">AnchorReferenceType</ref><sp/>mAnchorReferenceType;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>QFont<sp/>mFont;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>QColor<sp/>mColor;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mPadding;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRotation;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>rotation<sp/>applied<sp/>uniformly<sp/>to<sp/>all<sp/>labels,<sp/>not<sp/>the<sp/>heterogeneous<sp/>rotation<sp/>in<sp/>amCircularRotated<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSubstituteExponent;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>QChar<sp/>mMultiplicationSymbol;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAbbreviateDecimalPowers;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>QByteArray<sp/>mLabelParameterHash;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>whether<sp/>mLabelCache<sp/>needs<sp/>to<sp/>be<sp/>cleared<sp/>due<sp/>to<sp/>changed<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>QCache&lt;QString,<sp/>CachedLabel&gt;<sp/>mLabelCache;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>QRect<sp/>mAxisSelectionBox,<sp/>mTickLabelsSelectionBox,<sp/>mLabelSelectionBox;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLetterCapHeight,<sp/>mLetterDescent;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLabelMaybeCached(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>side,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QByteArray<sp/>generateLabelParameterHash()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>in<sp/>favor<sp/>of<sp/>invalidation<sp/>flag<sp/>upon<sp/>setters?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>QPointF<sp/>getAnchorPos(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;tickPos);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawText(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_q_c_p_label_painter_private_1_1_label_data" kindref="compound">LabelData</ref><sp/>&amp;labelData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><ref refid="struct_q_c_p_label_painter_private_1_1_label_data" kindref="compound">LabelData</ref><sp/>getTickLabelData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation,<sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>side,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyAnchorTransform(<ref refid="struct_q_c_p_label_painter_private_1_1_label_data" kindref="compound">LabelData</ref><sp/>&amp;labelData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//void<sp/>getMaxTickLabelSize(const<sp/>QFont<sp/>&amp;font,<sp/>const<sp/>QString<sp/>&amp;text,<sp/>QSize<sp/>*tickLabelsSize)<sp/>const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><ref refid="struct_q_c_p_label_painter_private_1_1_cached_label" kindref="compound">CachedLabel</ref><sp/>*createCachedLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_q_c_p_label_painter_private_1_1_label_data" kindref="compound">LabelData</ref><sp/>&amp;labelData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>QByteArray<sp/>cacheKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation,<sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>side)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>skewedAnchorSide(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;tickPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sideExpandHorz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sideExpandVert)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>rotationCorrectedSide(<ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">AnchorSide</ref><sp/>side,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>analyzeFontMetrics();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1687"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_label_painter_private_1aa5cb5741a8794bb2879229b42c9436cb" kindref="member">QCPLabelPainterPrivate::AnchorMode</ref>)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_label_painter_private_1a88c58f8a333dbbf48ae51148dcee9875" kindref="member">QCPLabelPainterPrivate::AnchorSide</ref>)</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/labelpainter.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axisticker.h&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4230<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697" refid="class_q_c_p_axis_ticker" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="1698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1706" refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a" kindref="member">TickStepStrategy</ref></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1708" refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8" kindref="member">tssReadability</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1709" refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2" kindref="member">tssMeetTickCount</ref><sp/></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/>Q_ENUMS(TickStepStrategy)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker" kindref="compound">QCPAxisTicker</ref>();</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker" kindref="compound">~QCPAxisTicker</ref>();</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>TickStepStrategy<sp/>tickStepStrategy()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickStepStrategy;<sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickCount;<sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickOrigin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickOrigin;<sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickStepStrategy(TickStepStrategy<sp/>strategy);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickOrigin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision,<sp/>QVector&lt;double&gt;<sp/>&amp;ticks,<sp/>QVector&lt;double&gt;<sp/>*subTicks,<sp/>QVector&lt;QString&gt;<sp/>*tickLabels);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>TickStepStrategy<sp/>mTickStepStrategy;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mTickCount;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mTickOrigin;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTickStep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTickCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>getTickLabel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>createTickVector(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>createSubTickVector(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;ticks);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVector&lt;QString&gt;<sp/>createLabelVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;ticks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trimTicks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range,<sp/>QVector&lt;double&gt;<sp/>&amp;ticks,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepOneOutlier)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pickClosest(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;candidates)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getMantissa(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*magnitude=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cleanMantissa(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(QCPAxisTicker)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1752"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a" kindref="member">QCPAxisTicker::TickStepStrategy</ref>)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal">Q_DECLARE_METATYPE(QSharedPointer&lt;QCPAxisTicker&gt;)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axisticker.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axistickerdatetime.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3600<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762" refid="class_q_c_p_axis_ticker_date_time" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a84cc5c6bbc7c99c1f9bd4b3a392e1b9d" kindref="member">QCPAxisTickerDateTime</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="1763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a84cc5c6bbc7c99c1f9bd4b3a392e1b9d" kindref="member">QCPAxisTickerDateTime</ref>();</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>QString<sp/>dateTimeFormat()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDateTimeFormat;<sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>Qt::TimeSpec<sp/>dateTimeSpec()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDateTimeSpec;<sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>2,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>QTimeZone<sp/>timeZone()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTimeZone;<sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1ad52660a82f688395468674d555f6a86b" kindref="member">setDateTimeFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;format);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1afbd987c7197e42ab61e67fb1c38abebc" kindref="member">setDateTimeSpec</ref>(Qt::TimeSpec<sp/>spec);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>2,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a2e46bf56e771b08e1d344fd95f3dc405" kindref="member">setTimeZone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QTimeZone<sp/>&amp;zone);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a5388e048cbd32cf1ba730b9f1859eb5c" kindref="member">setTickOrigin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin);<sp/></highlight><highlight class="comment">//<sp/>hides<sp/>base<sp/>class<sp/>method<sp/>but<sp/>calls<sp/>baseclass<sp/>implementation<sp/>(&quot;using&quot;<sp/>throws<sp/>off<sp/>IDEs<sp/>and<sp/>doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a5388e048cbd32cf1ba730b9f1859eb5c" kindref="member">setTickOrigin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDateTime<sp/>&amp;origin);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QDateTime<sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a4c1761ad057f5564804a53f942629b53" kindref="member">keyToDateTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a23705013d5f289de98667bd46950ac8c" kindref="member">dateTimeToKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDateTime<sp/>&amp;dateTime);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_date_time_1a23705013d5f289de98667bd46950ac8c" kindref="member">dateTimeToKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDate<sp/>&amp;date,<sp/>Qt::TimeSpec<sp/>timeSpec=Qt::LocalTime);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>QString<sp/>mDateTimeFormat;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>Qt::TimeSpec<sp/>mDateTimeSpec;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(5,<sp/>2,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/>QTimeZone<sp/>mTimeZone;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>DateStrategy<sp/>{dsNone,<sp/>dsUniformTimeInDay,<sp/>dsUniformDayInMonth}<sp/>mDateStrategy;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTickStep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTickCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>getTickLabel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>createTickVector(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axistickerdatetime.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axistickertime.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3542<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811" refid="class_q_c_p_axis_ticker_time" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_time_1a5145aac1d2117fdac411d9e8552cc41b" kindref="member">QCPAxisTickerTime</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="1812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1820" refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea809db637d2a7f601287c8790facc25cf" kindref="member">tuMilliseconds</ref><sp/></highlight></codeline>
<codeline lineno="1821" refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea22b2c1842215272ae827eea2d1cc037d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea22b2c1842215272ae827eea2d1cc037d" kindref="member">tuSeconds</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1822" refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea682de6640daef46cffd8a080348d7d00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea682de6640daef46cffd8a080348d7d00" kindref="member">tuMinutes</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1823" refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea83a5713594424ba17f1f62f18f0e5935" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea83a5713594424ba17f1f62f18f0e5935" kindref="member">tuHours</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1824" refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3eaf9729e64545307a80a0e3527d6da6556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3eaf9729e64545307a80a0e3527d6da6556" kindref="member">tuDays</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>Q_ENUMS(TimeUnit)</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker_time" kindref="compound">QCPAxisTickerTime</ref>();</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>QString<sp/>timeFormat()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTimeFormat;<sp/>}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fieldWidth(TimeUnit<sp/>unit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFieldWidth.value(unit);<sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTimeFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;format);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFieldWidth(TimeUnit<sp/>unit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>QString<sp/>mTimeFormat;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>QHash&lt;TimeUnit,<sp/>int&gt;<sp/>mFieldWidth;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>TimeUnit<sp/>mSmallestUnit,<sp/>mBiggestUnit;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>QHash&lt;TimeUnit,<sp/>QString&gt;<sp/>mFormatPattern;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTickStep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTickCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>getTickLabel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>replaceUnit(QString<sp/>&amp;text,<sp/>TimeUnit<sp/>unit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">QCPAxisTickerTime::TimeUnit</ref>)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axistickertime.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axistickerfixed.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3308<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863" refid="class_q_c_p_axis_ticker_fixed" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_fixed_1a96d2b053a15f9b8e94550c3efeff6a34" kindref="member">QCPAxisTickerFixed</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="1864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1873" refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439" kindref="member">ScaleStrategy</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439a6621275677a05caa0de204ae3956b85f" kindref="member">ssNone</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1874" refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439a22f651785f6412645837421896561104" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439a22f651785f6412645837421896561104" kindref="member">ssMultiples</ref><sp/></highlight></codeline>
<codeline lineno="1875" refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439ac39d5813e9165ebd494307ae61ce5dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439ac39d5813e9165ebd494307ae61ce5dce" kindref="member">ssPowers</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>Q_ENUMS(ScaleStrategy)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker_fixed" kindref="compound">QCPAxisTickerFixed</ref>();</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickStep;<sp/>}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>ScaleStrategy<sp/>scaleStrategy()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScaleStrategy;<sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickStep(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScaleStrategy(ScaleStrategy<sp/>strategy);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mTickStep;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/>ScaleStrategy<sp/>mScaleStrategy;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTickStep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1897"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_ticker_fixed_1a15b3d38b935d404b1311eb85cfb6a439" kindref="member">QCPAxisTickerFixed::ScaleStrategy</ref>)</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axistickerfixed.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axistickertext.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3090<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905" refid="class_q_c_p_axis_ticker_text" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_text_1a1d7243b1256c1aa9d1d5b99b2e84e648" kindref="member">QCPAxisTickerText</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="1906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker_text_1a1d7243b1256c1aa9d1d5b99b2e84e648" kindref="member">QCPAxisTickerText</ref>();</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911" refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" refkind="member"><highlight class="normal"><sp/><sp/>QMap&lt;double,<sp/>QString&gt;<sp/>&amp;<ref refid="class_q_c_p_axis_ticker_text_1ac84622a6bb4f2a98474e185ecaf3189a" kindref="member">ticks</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicks;<sp/>}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickCount;<sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;double,<sp/>QString&gt;<sp/>&amp;ticks);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;positions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QString&gt;<sp/>&amp;labels);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTicks);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTick(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;label);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTicks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;double,<sp/>QString&gt;<sp/>&amp;ticks);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTicks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;positions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QString&gt;<sp/>&amp;labels);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/>QMap&lt;double,<sp/>QString&gt;<sp/>mTicks;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mSubTickCount;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTickStep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTickCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>getTickLabel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>createTickVector(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axistickertext.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axistickerpi.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3911<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943" refid="class_q_c_p_axis_ticker_pi" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_pi_1aa0d7b7034055927c0f0077a2d713d7d0" kindref="member">QCPAxisTickerPi</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="1944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1952" refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54c" kindref="member">FractionStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54ca00f097b669b2a0e22f508f1ae97877d8" kindref="member">fsFloatingPoint</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1953" refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54ca05a5457e0e14cb726f623e25282066b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54ca05a5457e0e14cb726f623e25282066b3" kindref="member">fsAsciiFractions</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1954" refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54ca92f38a938c8b179b23363d9993681c55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54ca92f38a938c8b179b23363d9993681c55" kindref="member">fsUnicodeFractions</ref><sp/></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/>Q_ENUMS(FractionStyle)</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker_pi" kindref="compound">QCPAxisTickerPi</ref>();</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/>QString<sp/>piSymbol()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPiSymbol;<sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>piValue()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPiValue;<sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>periodicity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPeriodicity;<sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>FractionStyle<sp/>fractionStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFractionStyle;<sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPiSymbol(QString<sp/>symbol);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPiValue(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pi);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPeriodicity(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiplesOfPi);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFractionStyle(FractionStyle<sp/>style);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>QString<sp/>mPiSymbol;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mPiValue;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mPeriodicity;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>FractionStyle<sp/>mFractionStyle;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mPiTickStep;<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>one<sp/>tick<sp/>step<sp/>in<sp/>units<sp/>of<sp/>mPiValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTickStep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTickCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>getTickLabel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLocale<sp/>&amp;locale,<sp/>QChar<sp/>formatChar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplifyFraction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;numerator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;denominator)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>QString<sp/>fractionToString(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominator)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>QString<sp/>unicodeFraction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominator)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>QString<sp/>unicodeSuperscript(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/>QString<sp/>unicodeSubscript(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_ticker_pi_1a262f1534c7f0c79a7d5237f5d1e2c54c" kindref="member">QCPAxisTickerPi::FractionStyle</ref>)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axistickerpi.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axistickerlog.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>2594<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002" refid="class_q_c_p_axis_ticker_log" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_ticker_log_1af3cb86ea5eef2023c0b96b5260c4cbdf" kindref="member">QCPAxisTickerLog</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" kindref="member">QCPAxisTicker</ref></highlight></codeline>
<codeline lineno="2003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_ticker_log_1af3cb86ea5eef2023c0b96b5260c4cbdf" kindref="member">QCPAxisTickerLog</ref>();</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>logBase()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLogBase;<sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickCount;<sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_log_1ac6e3b4e03baea3816f898869ab9751ef" kindref="member">setLogBase</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_ticker_log_1ad51989c798c0cfd50936d77aac57c56a" kindref="member">setSubTickCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTicks);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLogBase;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mSubTickCount;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLogBaseLnInv;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTickCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>createTickVector(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axistickerlog.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/axis/axis.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>20913<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034" refid="class_q_c_p_grid" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_grid_1acd1cdd2909625388a13048b698494a17" kindref="member">QCPGrid</ref><sp/>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="2035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subGridVisible<sp/>READ<sp/>subGridVisible<sp/>WRITE<sp/><ref refid="class_q_c_p_grid_1ad4ad6bf714ec45e08845456355a1b700" kindref="member">setSubGridVisible</ref>)</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedSubGrid<sp/>READ<sp/>antialiasedSubGrid<sp/>WRITE<sp/><ref refid="class_q_c_p_grid_1a5692310ba183721a413d60951407d114" kindref="member">setAntialiasedSubGrid</ref>)</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedZeroLine<sp/>READ<sp/>antialiasedZeroLine<sp/>WRITE<sp/><ref refid="class_q_c_p_grid_1a3cc6d54647393ee71afb6da56af07aa4" kindref="member">setAntialiasedZeroLine</ref>)</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_grid_1aa05ab9816ffb440908171e45e833b593" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>subGridPen<sp/>READ<sp/>subGridPen<sp/>WRITE<sp/><ref refid="class_q_c_p_grid_1a9edd3593f384d1f0b0202a39cef4453d" kindref="member">setSubGridPen</ref>)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>zeroLinePen<sp/>READ<sp/>zeroLinePen<sp/>WRITE<sp/><ref refid="class_q_c_p_grid_1a209f40fdb252397b418b82d3494d8ea0" kindref="member">setZeroLinePen</ref>)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1acd1cdd2909625388a13048b698494a17" kindref="member">QCPGrid</ref>(QCPAxis<sp/>*parentAxis);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subGridVisible()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubGridVisible;<sp/>}</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedSubGrid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedSubGrid;<sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedZeroLine()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedZeroLine;<sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>QPen<sp/>subGridPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubGridPen;<sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>QPen<sp/>zeroLinePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mZeroLinePen;<sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1ad4ad6bf714ec45e08845456355a1b700" kindref="member">setSubGridVisible</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a5692310ba183721a413d60951407d114" kindref="member">setAntialiasedSubGrid</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a3cc6d54647393ee71afb6da56af07aa4" kindref="member">setAntialiasedZeroLine</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1aa05ab9816ffb440908171e45e833b593" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a9edd3593f384d1f0b0202a39cef4453d" kindref="member">setSubGridPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a209f40fdb252397b418b82d3494d8ea0" kindref="member">setZeroLinePen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSubGridVisible;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAntialiasedSubGrid,<sp/>mAntialiasedZeroLine;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSubGridPen,<sp/>mZeroLinePen;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>QCPAxis<sp/>*mParentAxis;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawGridLines(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSubGridLines(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPAxis;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085" refid="class_q_c_p_axis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="2086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">AxisType</ref><sp/>axisType<sp/>READ<sp/>axisType)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPAxisRect*<sp/>axisRect<sp/>READ<sp/>axisRect)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">ScaleType</ref><sp/>scaleType<sp/>READ<sp/>scaleType<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1adef29cae617af4f519f6c40d1a866ca6" kindref="member">setScaleType</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_axis_1a3505ed8a93bd2e349d858d84996bf767" kindref="member">scaleTypeChanged</ref>)</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range<sp/>READ<sp/>range<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>)</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeReversed<sp/>READ<sp/>rangeReversed<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a2172fdb196b1a0dc3f40992fcad8e9e1" kindref="member">setRangeReversed</ref>)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QSharedPointer&lt;QCPAxisTicker&gt;<sp/><ref refid="class_q_c_p_axis_1a7b7a27151be8235059e1294f73ecf615" kindref="member">ticker</ref><sp/>READ<sp/><ref refid="class_q_c_p_axis_1a7b7a27151be8235059e1294f73ecf615" kindref="member">ticker</ref><sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a4ee03fcd2c74d05cd1a419b9af5cfbdc" kindref="member">setTicker</ref>)</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ticks<sp/>READ<sp/>ticks<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1ac891409315bc379e3b1abdb162c1a011" kindref="member">setTicks</ref>)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tickLabels<sp/>READ<sp/>tickLabels<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a04ba16e1f6f78d70f938519576ed32c8" kindref="member">setTickLabels</ref>)</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLabelPadding<sp/>READ<sp/>tickLabelPadding<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1af302c479af9dbc2e9f0e44e07c0012ee" kindref="member">setTickLabelPadding</ref>)</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>tickLabelFont<sp/>READ<sp/>tickLabelFont<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a2b8690c4e8dbc39d9185d2b398ce7a6c" kindref="member">setTickLabelFont</ref>)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>tickLabelColor<sp/>READ<sp/>tickLabelColor<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a395e445c3fe496b935bee7b911ecfd1c" kindref="member">setTickLabelColor</ref>)</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickLabelRotation<sp/>READ<sp/>tickLabelRotation<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a1bddd4413df8a576b7ad4b067fb33375" kindref="member">setTickLabelRotation</ref>)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9" kindref="member">LabelSide</ref><sp/>tickLabelSide<sp/>READ<sp/>tickLabelSide<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a13ec644fc6e22715744c92c6dfa4f0fa" kindref="member">setTickLabelSide</ref>)</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>numberFormat<sp/>READ<sp/>numberFormat<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1ae585a54dc2aac662e90a2ca82f002590" kindref="member">setNumberFormat</ref>)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberPrecision<sp/>READ<sp/>numberPrecision<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a21dc8023ad7500382ad9574b48137e63" kindref="member">setNumberPrecision</ref>)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QVector&lt;double&gt;<sp/>tickVector<sp/>READ<sp/>tickVector)</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QVector&lt;QString&gt;<sp/>tickVectorLabels<sp/>READ<sp/>tickVectorLabels)</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthIn<sp/>READ<sp/>tickLengthIn<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1afae1a37a99611366275a51204d991739" kindref="member">setTickLengthIn</ref>)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthOut<sp/>READ<sp/>tickLengthOut<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a3b8a0debd1ffedd2c22d0592dfbb4e62" kindref="member">setTickLengthOut</ref>)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subTicks<sp/>READ<sp/>subTicks<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1afa0ce8d4d0015ed23dcde01f8bc30106" kindref="member">setSubTicks</ref>)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthIn<sp/>READ<sp/>subTickLengthIn<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1ac46fa2a993a9f5789540977610acf1de" kindref="member">setSubTickLengthIn</ref>)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthOut<sp/>READ<sp/>subTickLengthOut<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a4c6dfc3963492ed72a77724012df5f23" kindref="member">setSubTickLengthOut</ref>)</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>basePen<sp/>READ<sp/>basePen<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a778d45fb71b3c7ab3bb7079e18b058e4" kindref="member">setBasePen</ref>)</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>tickPen<sp/>READ<sp/>tickPen<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1ad80923bcc1c5da4c4db602c5325e797e" kindref="member">setTickPen</ref>)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>subTickPen<sp/>READ<sp/>subTickPen<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1aede4028ae7516bd51a60618a8233f9cf" kindref="member">setSubTickPen</ref>)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>labelFont<sp/>READ<sp/>labelFont<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a71ac1a47f7547e490a8c4311d1433cf3" kindref="member">setLabelFont</ref>)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>labelColor<sp/>READ<sp/>labelColor<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a6c906fe56d75f0122335b9f79b999608" kindref="member">setLabelColor</ref>)</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>label<sp/>READ<sp/>label<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a33bcc382c111c9f31bb0687352a2dea4" kindref="member">setLabel</ref>)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelPadding<sp/>READ<sp/>labelPadding<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a4391192a766e5d20cfe5cbc17607a7a2" kindref="member">setLabelPadding</ref>)</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding<sp/>READ<sp/>padding<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a5691441cb3de9e9844855d339c0db279" kindref="member">setPadding</ref>)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>READ<sp/>offset<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a04a652603cbe50eba9969ee6d68873c3" kindref="member">setOffset</ref>)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/>Q_PROPERTY(SelectableParts<sp/>selectedParts<sp/>READ<sp/>selectedParts<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1ab9d7a69277dcbed9119b3c1f25ca19c3" kindref="member">setSelectedParts</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_axis_1a62b598abeee7174a05f9d542cc85b1f5" kindref="member">selectionChanged</ref>)</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/>Q_PROPERTY(SelectableParts<sp/>selectableParts<sp/>READ<sp/>selectableParts<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a513f9b9e326c505d9bec54880031b085" kindref="member">setSelectableParts</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_axis_1aa5ff1fd851139028a3bb4efcb31de9fc" kindref="member">selectableChanged</ref>)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>selectedTickLabelFont<sp/>READ<sp/>selectedTickLabelFont<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a845ccb560b7bc5281098a5be494145f6" kindref="member">setSelectedTickLabelFont</ref>)</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>selectedLabelFont<sp/>READ<sp/>selectedLabelFont<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a02ec2a75d4d8401eaab834fbc6803d30" kindref="member">setSelectedLabelFont</ref>)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>selectedTickLabelColor<sp/>READ<sp/>selectedTickLabelColor<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a9bdbf5e63ab15187f3a1de9440129227" kindref="member">setSelectedTickLabelColor</ref>)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>selectedLabelColor<sp/>READ<sp/>selectedLabelColor<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a5d502dec597c634f491fdd73d151c72d" kindref="member">setSelectedLabelColor</ref>)</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedBasePen<sp/>READ<sp/>selectedBasePen<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1aeb917a909215605b95ef2be843de1ee8" kindref="member">setSelectedBasePen</ref>)</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedTickPen<sp/>READ<sp/>selectedTickPen<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a8360502685eb782edbf04019c9345cdc" kindref="member">setSelectedTickPen</ref>)</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedSubTickPen<sp/>READ<sp/>selectedSubTickPen<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a2a00a7166600155eac26843132eb9576" kindref="member">setSelectedSubTickPen</ref>)</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>lowerEnding<sp/>READ<sp/>lowerEnding<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a08af1c72db9ae4dc8cb8a973d44405ab" kindref="member">setLowerEnding</ref>)</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>upperEnding<sp/>READ<sp/>upperEnding<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_1a69119b892fc306f651763596685aa377" kindref="member">setUpperEnding</ref>)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPGrid*<sp/><ref refid="class_q_c_p_axis_1a63f1dd2df663680d2a8d06c19592dd63" kindref="member">grid</ref><sp/>READ<sp/><ref refid="class_q_c_p_axis_1a63f1dd2df663680d2a8d06c19592dd63" kindref="member">grid</ref>)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2138" refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">AxisType</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">atLeft</ref><sp/><sp/><sp/><sp/>=<sp/>0x01<sp/><sp/></highlight></codeline>
<codeline lineno="2139" refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">atRight</ref><sp/><sp/>=<sp/>0x02<sp/><sp/></highlight></codeline>
<codeline lineno="2140" refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">atTop</ref><sp/><sp/><sp/><sp/>=<sp/>0x04<sp/><sp/></highlight></codeline>
<codeline lineno="2141" refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">atBottom</ref><sp/>=<sp/>0x08<sp/><sp/></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>Q_ENUMS(AxisType)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>Q_FLAGS(AxisTypes)</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(AxisTypes,<sp/>AxisType)</highlight></codeline>
<codeline lineno="2151" refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9" kindref="member">LabelSide</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">lsInside</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2152" refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">lsOutside</ref><sp/><sp/></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/>Q_ENUMS(LabelSide)</highlight></codeline>
<codeline lineno="2159" refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">ScaleType</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2160" refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref><sp/></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>Q_ENUMS(ScaleType)</highlight></codeline>
<codeline lineno="2167" refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">SelectablePart</ref><sp/>{<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fae0df8123a5528d5ccf87cb7794f971ea" kindref="member">spNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2168" refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">spAxis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x001<sp/><sp/></highlight></codeline>
<codeline lineno="2169" refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa584e0a3dc4d064880647619f4bd4e771" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa584e0a3dc4d064880647619f4bd4e771" kindref="member">spTickLabels</ref><sp/>=<sp/>0x002<sp/><sp/></highlight></codeline>
<codeline lineno="2170" refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa851e0600e0d08b4f5fee9361e3fedabd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa851e0600e0d08b4f5fee9361e3fedabd" kindref="member">spAxisLabel</ref><sp/><sp/>=<sp/>0x004<sp/><sp/></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>Q_ENUMS(SelectablePart)</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>Q_FLAGS(SelectableParts)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(SelectableParts,<sp/>SelectablePart)</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*parent,<sp/>AxisType<sp/>type);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis" kindref="compound">~QCPAxis</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>AxisType<sp/>axisType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAxisType;<sp/>}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/>QCPAxisRect<sp/>*axisRect()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAxisRect;<sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/>ScaleType<sp/>scaleType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScaleType;<sp/>}</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>range()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRange;<sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeReversed()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeReversed;<sp/>}</highlight></codeline>
<codeline lineno="2185" refid="class_q_c_p_axis_1a7b7a27151be8235059e1294f73ecf615" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPAxisTicker&gt;<sp/><ref refid="class_q_c_p_axis_1a7b7a27151be8235059e1294f73ecf615" kindref="member">ticker</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicker;<sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ticks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicks;<sp/>}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tickLabels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabels;<sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLabelPadding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/>QFont<sp/>tickLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>QColor<sp/>tickLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickLabelRotation()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>LabelSide<sp/>tickLabelSide()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>QString<sp/>numberFormat()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberPrecision()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNumberPrecision;<sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>tickVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickVector;<sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>tickVectorLabels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickVectorLabels;<sp/>}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthIn()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthOut()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subTicks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTicks;<sp/>}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthIn()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthOut()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>QPen<sp/>basePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBasePen;<sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>QPen<sp/>tickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickPen;<sp/>}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>QPen<sp/>subTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickPen;<sp/>}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>QFont<sp/>labelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/>QColor<sp/>labelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>QString<sp/>label()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabel;<sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelPadding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPadding;<sp/>}</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectedParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedParts;<sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectableParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectableParts;<sp/>}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedTickLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedTickLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedBasePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBasePen;<sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickPen;<sp/>}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedSubTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedSubTickPen;<sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/>QCPLineEnding<sp/>lowerEnding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/>QCPLineEnding<sp/>upperEnding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2222" refid="class_q_c_p_axis_1a63f1dd2df663680d2a8d06c19592dd63" refkind="member"><highlight class="normal"><sp/><sp/>QCPGrid<sp/>*<ref refid="class_q_c_p_axis_1a63f1dd2df663680d2a8d06c19592dd63" kindref="member">grid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGrid;<sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>type);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size,<sp/>Qt::AlignmentFlag<sp/>alignment);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeLower(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeUpper(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeReversed(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicker(QSharedPointer&lt;QCPAxisTicker&gt;<sp/>ticker);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabels(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelSide(LabelSide<sp/>side);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumberFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;formatCode);</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumberPrecision(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLength(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside=0);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLengthIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLengthOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTicks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLength(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside=0);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLengthIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLengthOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOffset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedBasePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedSubTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectableParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPAxis::SelectableParts<sp/>&amp;selectableParts);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPAxis::SelectableParts<sp/>&amp;selectedParts);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLowerEnding(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;ending);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUpperEnding(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;ending);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274" refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" refkind="member"><highlight class="normal"><sp/><sp/>Qt::Orientation<sp/><ref refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" kindref="member">orientation</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOrientation;<sp/>}</highlight></codeline>
<codeline lineno="2275" refid="class_q_c_p_axis_1a45c45bed7e5666683b8d56afa66fa51f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a45c45bed7e5666683b8d56afa66fa51f" kindref="member">pixelOrientation</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rangeReversed()<sp/>!=<sp/>(<ref refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" kindref="member">orientation</ref>()==Qt::Vertical)<sp/>?<sp/>-1<sp/>:<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scaleRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scaleRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScaleRatio(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*otherAxis,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio=1.0);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescale(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisiblePlottables=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pixelToCoord(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coordToPixel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/>SelectablePart<sp/>getPartAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>plottables()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>graphs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>items()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AxisType<sp/>marginSideToAxisType(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side);</highlight></codeline>
<codeline lineno="2289" refid="class_q_c_p_axis_1a9a68b3e45f1b1e33d4d807822342516c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Qt::Orientation<sp/><ref refid="class_q_c_p_axis_1a9a68b3e45f1b1e33d4d807822342516c" kindref="member">orientation</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">AxisType</ref><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type==<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">atBottom</ref><sp/>||<sp/>type==<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">atTop</ref><sp/>?<sp/>Qt::Horizontal<sp/>:<sp/>Qt::Vertical;<sp/>}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AxisType<sp/>opposite(AxisType<sp/>type);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2292"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="2293" refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;newRange);</highlight></codeline>
<codeline lineno="2294" refid="class_q_c_p_axis_1aac8576288e8e31f16186124bc10dd10d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aac8576288e8e31f16186124bc10dd10d" kindref="member">rangeChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;newRange,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;oldRange);</highlight></codeline>
<codeline lineno="2295" refid="class_q_c_p_axis_1a3505ed8a93bd2e349d858d84996bf767" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a3505ed8a93bd2e349d858d84996bf767" kindref="member">scaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>scaleType);</highlight></codeline>
<codeline lineno="2296" refid="class_q_c_p_axis_1a62b598abeee7174a05f9d542cc85b1f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a62b598abeee7174a05f9d542cc85b1f5" kindref="member">selectionChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPAxis::SelectableParts<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="2297" refid="class_q_c_p_axis_1aa5ff1fd851139028a3bb4efcb31de9fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aa5ff1fd851139028a3bb4efcb31de9fc" kindref="member">selectableChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPAxis::SelectableParts<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>base:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">AxisType</ref><sp/>mAxisType;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/>QCPAxisRect<sp/>*mAxisRect;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>mOffset;<sp/>//<sp/>in<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mPadding;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>Qt::Orientation<sp/>mOrientation;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>mSelectableParts,<sp/>mSelectedParts;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>QPen<sp/>mBasePen,<sp/>mSelectedBasePen;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//QCPLineEnding<sp/>mLowerEnding,<sp/>mUpperEnding;<sp/>//<sp/>in<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>label:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>mLabelPadding;<sp/>//<sp/>in<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>QString<sp/>mLabel;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>QFont<sp/>mLabelFont,<sp/>mSelectedLabelFont;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/>QColor<sp/>mLabelColor,<sp/>mSelectedLabelColor;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>labels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>mTickLabelPadding;<sp/>//<sp/>in<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTickLabels;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>mTickLabelRotation;<sp/>//<sp/>in<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>QFont<sp/>mTickLabelFont,<sp/>mSelectedTickLabelFont;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>QColor<sp/>mTickLabelColor,<sp/>mSelectedTickLabelColor;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumberPrecision;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/>QLatin1Char<sp/>mNumberFormatChar;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mNumberBeautifulPowers;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bool<sp/>mNumberMultiplyCross;<sp/>//<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ticks<sp/>and<sp/>subticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTicks;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSubTicks;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>mTickLengthIn,<sp/>mTickLengthOut,<sp/>mSubTickLengthIn,<sp/>mSubTickLengthOut;<sp/>//<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/>QPen<sp/>mTickPen,<sp/>mSelectedTickPen;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/>QPen<sp/>mSubTickPen,<sp/>mSelectedSubTickPen;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>and<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mRange;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeReversed;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">ScaleType</ref><sp/>mScaleType;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/>QCPGrid<sp/>*mGrid;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_painter_private" kindref="compound">QCPAxisPainterPrivate</ref><sp/>*mAxisPainter;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPAxisTicker&gt;<sp/>mTicker;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>mTickVector;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>mTickVectorLabels;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>mSubTickVector;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mCachedMarginValid;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCachedMargin;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDragging;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mDragStartRange;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>mAADragBackup,<sp/>mNotAADragBackup;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>calculateMargin();</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mouse<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a61bc07cda6193a3fa6b5aa198fc4e4fa" kindref="member">mousePressEvent</ref>(QMouseEvent<sp/>*event,<sp/>const<sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ac5a269609e6177737faabdc46434d8c7" kindref="member">mouseMoveEvent</ref>(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a780bee321fc6476e5fc49c4980291a01" kindref="member">mouseReleaseEvent</ref>(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aa850f195d7cc470c53809d0fff5e444d" kindref="member">wheelEvent</ref>(QWheelEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupTickVectors();</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/>QPen<sp/>getBasePen()<sp/>const;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>QPen<sp/>getTickPen()<sp/>const;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/>QPen<sp/>getSubTickPen()<sp/>const;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/>QFont<sp/>getTickLabelFont()<sp/>const;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/>QFont<sp/>getLabelFont()<sp/>const;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/>QColor<sp/>getTickLabelColor()<sp/>const;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/>QColor<sp/>getLabelColor()<sp/>const;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2375"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>)</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPGrid;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAxisRect;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2382"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>::SelectableParts)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>::AxisTypes)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>::<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">AxisType</ref>)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>::<ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9" kindref="member">LabelSide</ref>)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>::<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">ScaleType</ref>)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis</ref>::<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">SelectablePart</ref>)</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390" refid="class_q_c_p_axis_painter_private" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_q_c_p_axis_painter_private_1a0f14aa5c4aa83dbcd68984a7c73bf94f" kindref="member">QCPAxisPainterPrivate</ref></highlight></codeline>
<codeline lineno="2391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1a0f14aa5c4aa83dbcd68984a7c73bf94f" kindref="member">QCPAxisPainterPrivate</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1a0f14aa5c4aa83dbcd68984a7c73bf94f" kindref="member">~QCPAxisPainterPrivate</ref>();</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size();</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearCache();</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>QRect<sp/>axisSelectionBox()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAxisSelectionBox;<sp/>}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>QRect<sp/>tickLabelsSelectionBox()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelsSelectionBox;<sp/>}</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/>QRect<sp/>labelSelectionBox()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelSelectionBox;<sp/>}</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>QPen<sp/>basePen;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>lowerEnding,<sp/>upperEnding;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelPadding;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/>QFont<sp/>labelFont;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/>QColor<sp/>labelColor;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>QString<sp/>label;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLabelPadding;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickLabelRotation;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9" kindref="member">QCPAxis::LabelSide</ref><sp/>tickLabelSide;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>substituteExponent;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>numberMultiplyCross;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthIn,<sp/>tickLengthOut,<sp/>subTickLengthIn,<sp/>subTickLengthOut;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>QPen<sp/>tickPen,<sp/>subTickPen;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>QFont<sp/>tickLabelFont;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/>QColor<sp/>tickLabelColor;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>QRect<sp/>axisRect,<sp/>viewportRect;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;<sp/></highlight><highlight class="comment">//<sp/>directly<sp/>accessed<sp/>by<sp/>QCPAxis<sp/>setters/getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>abbreviateDecimalPowers;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversedEndings;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>subTickPositions;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>tickPositions;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>tickLabels;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2431" refid="struct_q_c_p_axis_painter_private_1_1_cached_label" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_q_c_p_axis_painter_private_1_1_cached_label" kindref="compound">CachedLabel</ref></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>offset;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>QPixmap<sp/>pixmap;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="2436" refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" kindref="compound">TickLabelData</ref></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>basePart,<sp/>expPart,<sp/>suffixPart;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>baseBounds,<sp/>expBounds,<sp/>suffixBounds,<sp/>totalBounds,<sp/>rotatedTotalBounds;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>QFont<sp/>baseFont,<sp/>expFont;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>QByteArray<sp/>mLabelParameterHash;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>whether<sp/>mLabelCache<sp/>needs<sp/>to<sp/>be<sp/>cleared<sp/>due<sp/>to<sp/>changed<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/>QCache&lt;QString,<sp/>CachedLabel&gt;<sp/>mLabelCache;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/>QRect<sp/>mAxisSelectionBox,<sp/>mTickLabelsSelectionBox,<sp/>mLabelSelectionBox;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QByteArray<sp/>generateLabelParameterHash()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>placeTickLabel(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distanceToAxis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/>QSize<sp/>*tickLabelsSize);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawTickLabel(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" kindref="compound">TickLabelData</ref><sp/>&amp;labelData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" kindref="compound">TickLabelData</ref><sp/>getTickLabelData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>getTickLabelDrawOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" kindref="compound">TickLabelData</ref><sp/>&amp;labelData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getMaxTickLabelSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/>QSize<sp/>*tickLabelsSize)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/axis/axis.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/scatterstyle.h&apos;<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7275<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462" refid="class_q_c_p_scatter_style" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle</ref></highlight></codeline>
<codeline lineno="2463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2474" refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46" kindref="member">ScatterProperty</ref><sp/>{<sp/><ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46a5891be10bea382fad6c20f7737a2dd90" kindref="member">spNone</ref><sp/><sp/>=<sp/>0x00<sp/><sp/></highlight></codeline>
<codeline lineno="2475" refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46aa04d012e7c03e455db2b68fdd55c2a04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46aa04d012e7c03e455db2b68fdd55c2a04" kindref="member">spPen</ref><sp/><sp/><sp/>=<sp/>0x01<sp/><sp/></highlight></codeline>
<codeline lineno="2476" refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46af0499b1fc04de2dcc7e47ff0ef75c904" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46af0499b1fc04de2dcc7e47ff0ef75c904" kindref="member">spBrush</ref><sp/>=<sp/>0x02<sp/><sp/></highlight></codeline>
<codeline lineno="2477" refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46a553ae95798ace9a328c7cd62045260b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46a553ae95798ace9a328c7cd62045260b0" kindref="member">spSize</ref><sp/><sp/>=<sp/>0x04<sp/><sp/></highlight></codeline>
<codeline lineno="2478" refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46a19c224563adb42c55fb8b7ae6904411b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46a19c224563adb42c55fb8b7ae6904411b" kindref="member">spShape</ref><sp/>=<sp/>0x08<sp/><sp/></highlight></codeline>
<codeline lineno="2479" refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46af62509c0409467f387234274762e6f69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46af62509c0409467f387234274762e6f69" kindref="member">spAll</ref><sp/><sp/><sp/>=<sp/>0xFF<sp/><sp/></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/>Q_ENUMS(ScatterProperty)</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>Q_FLAGS(ScatterProperties)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(ScatterProperties,<sp/>ScatterProperty)</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2492" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349" kindref="member">ScatterShape</ref><sp/>{<sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349abd144c291ca274f77053ec68cab6c022" kindref="member">ssNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2493" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a06e15a735b79093a1d999c0374fa3aa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a06e15a735b79093a1d999c0374fa3aa1" kindref="member">ssDot</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2494" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a9eacd60f059dc3ef71bf249f515a6fe4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a9eacd60f059dc3ef71bf249f515a6fe4" kindref="member">ssCross</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2495" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a2d7f1d3c1a148b9d9d17f2fd9cae5eb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a2d7f1d3c1a148b9d9d17f2fd9cae5eb7" kindref="member">ssPlus</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2496" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7c92a110880d0ef2170dff3a5b4f7779" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7c92a110880d0ef2170dff3a5b4f7779" kindref="member">ssCircle</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2497" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a281fe1434696dcbab3aa6b9ccfbb09e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a281fe1434696dcbab3aa6b9ccfbb09e9" kindref="member">ssDisc</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2498" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a279e48703ddc9f1cf4a61d3e2817ab3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a279e48703ddc9f1cf4a61d3e2817ab3c" kindref="member">ssSquare</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2499" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a4fc5929df1b2dad0a3cb2ef2c8b6e633" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a4fc5929df1b2dad0a3cb2ef2c8b6e633" kindref="member">ssDiamond</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2500" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6047a2d64e41f1d6ce54445d595d442f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6047a2d64e41f1d6ce54445d595d442f" kindref="member">ssStar</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2501" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a74a8d4eff1d97b57c53a60d0003453c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a74a8d4eff1d97b57c53a60d0003453c3" kindref="member">ssTriangle</ref><sp/><sp/></highlight></codeline>
<codeline lineno="2502" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6156274d21d8b4115197567d3ea2d9a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6156274d21d8b4115197567d3ea2d9a8" kindref="member">ssTriangleInverted</ref><sp/></highlight></codeline>
<codeline lineno="2503" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7081310936c200c6c78e34c172f72d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7081310936c200c6c78e34c172f72d07" kindref="member">ssCrossSquare</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2504" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a5aa8e9db545e5404482fec774768ee25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a5aa8e9db545e5404482fec774768ee25" kindref="member">ssPlusSquare</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2505" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a524613ba5d1c4eaa1541d74cf339d283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a524613ba5d1c4eaa1541d74cf339d283" kindref="member">ssCrossCircle</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2506" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6fa151d01f1694c9ff9922da686dc535" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6fa151d01f1694c9ff9922da686dc535" kindref="member">ssPlusCircle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2507" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349ada3b2988ece38c121922a4b5007eb08d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349ada3b2988ece38c121922a4b5007eb08d" kindref="member">ssPeace</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2508" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" kindref="member">ssPixmap</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2509" refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a15d9bcfd9de94edda949006529f9219d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a15d9bcfd9de94edda949006529f9219d" kindref="member">ssCustom</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>Q_ENUMS(ScatterShape)</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>();</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size=6);</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;fill,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath<sp/>&amp;customPath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush=Qt::NoBrush,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size=6);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSize;<sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>ScatterShape<sp/>shape()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mShape;<sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>QPixmap<sp/>pixmap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPixmap;<sp/>}</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/>QPainterPath<sp/>customPath()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCustomPath;<sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFromOther(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle<sp/>&amp;other,<sp/>ScatterProperties<sp/>properties);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSize(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setShape(ScatterShape<sp/>shape);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPixmap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCustomPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath<sp/>&amp;customPath);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539" refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" kindref="member">isNone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mShape<sp/>==<sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349abd144c291ca274f77053ec68cab6c022" kindref="member">ssNone</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2540" refid="class_q_c_p_scatter_style_1a47077eb6450fe9a788f833e4ec1b1d5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a47077eb6450fe9a788f833e4ec1b1d5a" kindref="member">isPenDefined</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPenDefined;<sp/>}</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undefinePen();</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyTo(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;defaultPen)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawShape(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawShape(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mSize;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/>ScatterShape<sp/>mShape;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mPixmap;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/>QPainterPath<sp/>mCustomPath;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mPenDefined;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2558"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPScatterStyle,<sp/>Q_MOVABLE_TYPE);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCPScatterStyle::ScatterProperties)</highlight></codeline>
<codeline lineno="2560"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46" kindref="member">QCPScatterStyle::ScatterProperty</ref>)</highlight></codeline>
<codeline lineno="2561"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349" kindref="member">QCPScatterStyle::ScatterShape</ref>)</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/scatterstyle.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/datacontainer.h&apos;<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>34070<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2575" refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.sortKey()<sp/>&lt;<sp/>b.sortKey();<sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2578" refid="class_q_c_p_data_container" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer</ref><sp/></highlight><highlight class="comment">//<sp/>no<sp/>QCP_LIB_DECL,<sp/>template<sp/>class<sp/>ends<sp/>up<sp/>in<sp/>header<sp/>(cpp<sp/>included<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QVector&lt;DataType&gt;::const_iterator<sp/>const_iterator;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QVector&lt;DataType&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2584" refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer</ref>();</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587" refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mData.size()-mPreallocSize;<sp/>}</highlight></codeline>
<codeline lineno="2588" refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoSqueeze()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAutoSqueeze;<sp/>}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592" refid="class_q_c_p_data_container_1a233f866760a78950d2a393c1a4bc54b5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a233f866760a78950d2a393c1a4bc54b5" kindref="member">setAutoSqueeze</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595" refid="class_q_c_p_data_container_1ae7042bd534fc3ce7befa2ce3f790b5bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1ae7042bd534fc3ce7befa2ce3f790b5bf" kindref="member">set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer&lt;DataType&gt;</ref><sp/>&amp;data);</highlight></codeline>
<codeline lineno="2596" refid="class_q_c_p_data_container_1aff99fffbb26597a354c4bc8312596ab2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aff99fffbb26597a354c4bc8312596ab2" kindref="member">set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;DataType&gt;<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2597" refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer&lt;DataType&gt;</ref><sp/>&amp;data);</highlight></codeline>
<codeline lineno="2598" refid="class_q_c_p_data_container_1a51d2a4c9ce4baf5e950b767d26673972" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a51d2a4c9ce4baf5e950b767d26673972" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;DataType&gt;<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2599" refid="class_q_c_p_data_container_1a715e8e9972466804954a2f8fbd5288b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a715e8e9972466804954a2f8fbd5288b7" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data);</highlight></codeline>
<codeline lineno="2600" refid="class_q_c_p_data_container_1aa7f74cbce304b0369e1626c3798e1eda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aa7f74cbce304b0369e1626c3798e1eda" kindref="member">removeBefore</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey);</highlight></codeline>
<codeline lineno="2601" refid="class_q_c_p_data_container_1abbe5d87ffc10b5aeffa5bb42cf03aa3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1abbe5d87ffc10b5aeffa5bb42cf03aa3c" kindref="member">removeAfter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey);</highlight></codeline>
<codeline lineno="2602" refid="class_q_c_p_data_container_1ae5f569a120648b167efa78835f12fd38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1ae5f569a120648b167efa78835f12fd38" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKeyFrom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKeyTo);</highlight></codeline>
<codeline lineno="2603" refid="class_q_c_p_data_container_1a2dbded7f0732bacf9db48fdfbbb620bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a2dbded7f0732bacf9db48fdfbbb620bc" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey);</highlight></codeline>
<codeline lineno="2604" refid="class_q_c_p_data_container_1a7e2b29736c6fd761649bda1a54ba967f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a7e2b29736c6fd761649bda1a54ba967f" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2605" refid="class_q_c_p_data_container_1a75da92e33063b63d6da5014683591d45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a75da92e33063b63d6da5014683591d45" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="2606" refid="class_q_c_p_data_container_1a82fcc511def22287fc62579d0706387c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a82fcc511def22287fc62579d0706387c" kindref="member">squeeze</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preAllocation=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>postAllocation=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2608" refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mData.constBegin()+mPreallocSize;<sp/>}</highlight></codeline>
<codeline lineno="2609" refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mData.constEnd();<sp/>}</highlight></codeline>
<codeline lineno="2610" refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mData.begin()+mPreallocSize;<sp/>}</highlight></codeline>
<codeline lineno="2611" refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mData.end();<sp/>}</highlight></codeline>
<codeline lineno="2612" refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" kindref="member">findBegin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2613" refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" kindref="member">findEnd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2614" refid="class_q_c_p_data_container_1ac0d5f1babb70699e4732026af1ae12db" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="class_q_c_p_data_container_1ac0d5f1babb70699e4732026af1ae12db" kindref="member">at</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()+qBound(0,<sp/>index,<sp/><ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>());<sp/>}</highlight></codeline>
<codeline lineno="2615" refid="class_q_c_p_data_container_1aba6e1a93c21ccc56a432b4a02c9d0ed2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_data_container_1aba6e1a93c21ccc56a432b4a02c9d0ed2" kindref="member">keyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>signDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>);</highlight></codeline>
<codeline lineno="2616" refid="class_q_c_p_data_container_1a35a102dc2424d1228fc374d9313efbe9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_data_container_1a35a102dc2424d1228fc374d9313efbe9" kindref="member">valueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>signDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;inKeyRange=<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>());</highlight></codeline>
<codeline lineno="2617" refid="class_q_c_p_data_container_1aece90eeb2ba8d3c46d3d94023630fbc7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/><ref refid="class_q_c_p_data_container_1aece90eeb2ba8d3c46d3d94023630fbc7" kindref="member">dataRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(0,<sp/><ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>());<sp/>}</highlight></codeline>
<codeline lineno="2618" refid="class_q_c_p_data_container_1aa1b36f5ae86a5a5a0b92141d3a0945c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aa1b36f5ae86a5a5a0b92141d3a0945c4" kindref="member">limitIteratorsToDataRange</ref>(const_iterator<sp/>&amp;<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>,<sp/>const_iterator<sp/>&amp;<ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;<ref refid="class_q_c_p_data_container_1aece90eeb2ba8d3c46d3d94023630fbc7" kindref="member">dataRange</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAutoSqueeze;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>memebers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>QVector&lt;DataType&gt;<sp/>mData;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mPreallocSize;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mPreallocIteration;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preallocateGrow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimumPreallocSize);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>performAutoSqueeze();</highlight></codeline>
<codeline lineno="2632"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>implementation<sp/>in<sp/>header<sp/>since<sp/>it<sp/>is<sp/>a<sp/>class<sp/>template:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2771" refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" refkind="member"><highlight class="normal"><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer&lt;DataType&gt;::QCPDataContainer</ref>()<sp/>:</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/>mAutoSqueeze(true),</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>mPreallocSize(0),</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/>mPreallocIteration(0)</highlight></codeline>
<codeline lineno="2775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2787" refid="class_q_c_p_data_container_1a233f866760a78950d2a393c1a4bc54b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a233f866760a78950d2a393c1a4bc54b5" kindref="member">QCPDataContainer&lt;DataType&gt;::setAutoSqueeze</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="2788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSqueeze<sp/>!=<sp/>enabled)</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/>mAutoSqueeze<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSqueeze)</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>performAutoSqueeze();</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2804" refid="class_q_c_p_data_container_1ae7042bd534fc3ce7befa2ce3f790b5bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1ae7042bd534fc3ce7befa2ce3f790b5bf" kindref="member">QCPDataContainer&lt;DataType&gt;::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer&lt;DataType&gt;</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_container_1a7e2b29736c6fd761649bda1a54ba967f" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" kindref="member">add</ref>(data);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2820" refid="class_q_c_p_data_container_1aff99fffbb26597a354c4bc8312596ab2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1ae7042bd534fc3ce7befa2ce3f790b5bf" kindref="member">QCPDataContainer&lt;DataType&gt;::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;DataType&gt;<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted)</highlight></codeline>
<codeline lineno="2821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>mData<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/>mPreallocSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/>mPreallocIteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!alreadySorted)</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_data_container_1a75da92e33063b63d6da5014683591d45" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="2827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2836" refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" kindref="member">QCPDataContainer&lt;DataType&gt;::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1af86c0c63719f92c360ff67cc06c6fe6f" kindref="member">QCPDataContainer&lt;DataType&gt;</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="2837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>data.<ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldSize<sp/>=<sp/><ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldSize<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>(*<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>(),<sp/>*(data.<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()-1)))<sp/></highlight><highlight class="comment">//<sp/>prepend<sp/>if<sp/>new<sp/>data<sp/>keys<sp/>are<sp/>all<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>existing<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPreallocSize<sp/>&lt;<sp/>n)</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preallocateGrow(n);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/>mPreallocSize<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(data.<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>(),<sp/>data.<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>need<sp/>to<sp/>prepend,<sp/>so<sp/>append<sp/>and<sp/>merge<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>mData.resize(mData.size()+n);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(data.<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>(),<sp/>data.<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()-n);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldSize<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>(*(<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()-n-1),<sp/>*(<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()-n)))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>appended<sp/>range<sp/>keys<sp/>aren&apos;t<sp/>all<sp/>greater<sp/>than<sp/>existing<sp/>ones,<sp/>merge<sp/>the<sp/>two<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::inplace_merge(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()-n,<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2868" refid="class_q_c_p_data_container_1a51d2a4c9ce4baf5e950b767d26673972" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" kindref="member">QCPDataContainer&lt;DataType&gt;::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;DataType&gt;<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted)</highlight></codeline>
<codeline lineno="2869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.isEmpty())</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_data_container_1ae7042bd534fc3ce7befa2ce3f790b5bf" kindref="member">set</ref>(data,<sp/>alreadySorted);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>data.size();</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldSize<sp/>=<sp/><ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alreadySorted<sp/>&amp;&amp;<sp/>oldSize<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>(*<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>(),<sp/>*(data.constEnd()-1)))<sp/></highlight><highlight class="comment">//<sp/>prepend<sp/>if<sp/>new<sp/>data<sp/>is<sp/>sorted<sp/>and<sp/>keys<sp/>are<sp/>all<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>existing<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPreallocSize<sp/>&lt;<sp/>n)</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preallocateGrow(n);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/>mPreallocSize<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(data.constBegin(),<sp/>data.constEnd(),<sp/><ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>need<sp/>to<sp/>prepend,<sp/>so<sp/>append<sp/>and<sp/>then<sp/>sort<sp/>and<sp/>merge<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/>mData.resize(mData.size()+n);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(data.constBegin(),<sp/>data.constEnd(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()-n);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!alreadySorted)<sp/></highlight><highlight class="comment">//<sp/>sort<sp/>appended<sp/>subrange<sp/>if<sp/>it<sp/>wasn&apos;t<sp/>already<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(<ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()-n,<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldSize<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>(*(<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()-n-1),<sp/>*(<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()-n)))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>appended<sp/>range<sp/>keys<sp/>aren&apos;t<sp/>all<sp/>greater<sp/>than<sp/>existing<sp/>ones,<sp/>merge<sp/>the<sp/>two<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::inplace_merge(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()-n,<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2905" refid="class_q_c_p_data_container_1a715e8e9972466804954a2f8fbd5288b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a42b98bd994307ccd163a43d576f91ad9" kindref="member">QCPDataContainer&lt;DataType&gt;::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data)</highlight></codeline>
<codeline lineno="2906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>()<sp/>||<sp/>!<ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>(data,<sp/>*(<ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>()-1)))<sp/></highlight><highlight class="comment">//<sp/>quickly<sp/>handle<sp/>appends<sp/>if<sp/>new<sp/>data<sp/>key<sp/>is<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>existing<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/>mData.append(data);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>(data,<sp/>*<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()))<sp/><sp/></highlight><highlight class="comment">//<sp/>quickly<sp/>handle<sp/>prepends<sp/>using<sp/>preallocated<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPreallocSize<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preallocateGrow(1);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>--mPreallocSize;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>()<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>inserts,<sp/>maintaining<sp/>sorted<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>insertionPoint<sp/>=<sp/>std::lower_bound(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>data,<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>mData.insert(insertionPoint,<sp/>data);</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2929" refid="class_q_c_p_data_container_1aa7f74cbce304b0369e1626c3798e1eda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aa7f74cbce304b0369e1626c3798e1eda" kindref="member">QCPDataContainer&lt;DataType&gt;::removeBefore</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey)</highlight></codeline>
<codeline lineno="2930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>itEnd<sp/>=<sp/>std::lower_bound(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>DataType::fromSortKey(sortKey),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/>mPreallocSize<sp/>+=<sp/>int(itEnd-it);<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>actually<sp/>delete,<sp/>just<sp/>add<sp/>it<sp/>to<sp/>the<sp/>preallocated<sp/>block<sp/>(if<sp/>it<sp/>gets<sp/>too<sp/>large,<sp/>squeeze<sp/>will<sp/>take<sp/>care<sp/>of<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSqueeze)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>performAutoSqueeze();</highlight></codeline>
<codeline lineno="2936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2944" refid="class_q_c_p_data_container_1abbe5d87ffc10b5aeffa5bb42cf03aa3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1abbe5d87ffc10b5aeffa5bb42cf03aa3c" kindref="member">QCPDataContainer&lt;DataType&gt;::removeAfter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>it<sp/>=<sp/>std::upper_bound(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>DataType::fromSortKey(sortKey),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/>mData.erase(it,<sp/>itEnd);<sp/></highlight><highlight class="comment">//<sp/>typically<sp/>adds<sp/>it<sp/>to<sp/>the<sp/>postallocated<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSqueeze)</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>performAutoSqueeze();</highlight></codeline>
<codeline lineno="2951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2961" refid="class_q_c_p_data_container_1ae5f569a120648b167efa78835f12fd38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1ae5f569a120648b167efa78835f12fd38" kindref="member">QCPDataContainer&lt;DataType&gt;::remove</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKeyFrom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKeyTo)</highlight></codeline>
<codeline lineno="2962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortKeyFrom<sp/>&gt;=<sp/>sortKeyTo<sp/>||<sp/><ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>it<sp/>=<sp/>std::lower_bound(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>DataType::fromSortKey(sortKeyFrom),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::iterator<sp/>itEnd<sp/>=<sp/>std::upper_bound(it,<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>DataType::fromSortKey(sortKeyTo),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/>mData.erase(it,<sp/>itEnd);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSqueeze)</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>performAutoSqueeze();</highlight></codeline>
<codeline lineno="2971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2983" refid="class_q_c_p_data_container_1a2dbded7f0732bacf9db48fdfbbb620bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1ae5f569a120648b167efa78835f12fd38" kindref="member">QCPDataContainer&lt;DataType&gt;::remove</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey)</highlight></codeline>
<codeline lineno="2984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>QCPDataContainer::iterator<sp/>it<sp/>=<sp/>std::lower_bound(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>DataType::fromSortKey(sortKey),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>()<sp/>&amp;&amp;<sp/>it-&gt;sortKey()<sp/>==<sp/>sortKey)</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>())</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++mPreallocSize;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>actually<sp/>delete,<sp/>just<sp/>add<sp/>it<sp/>to<sp/>the<sp/>preallocated<sp/>block<sp/>(if<sp/>it<sp/>gets<sp/>too<sp/>large,<sp/>squeeze<sp/>will<sp/>take<sp/>care<sp/>of<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mData.erase(it);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSqueeze)</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/>performAutoSqueeze();</highlight></codeline>
<codeline lineno="2995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3003" refid="class_q_c_p_data_container_1a7e2b29736c6fd761649bda1a54ba967f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a7e2b29736c6fd761649bda1a54ba967f" kindref="member">QCPDataContainer&lt;DataType&gt;::clear</ref>()</highlight></codeline>
<codeline lineno="3004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/>mData.clear();</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>mPreallocIteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>mPreallocSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3022" refid="class_q_c_p_data_container_1a75da92e33063b63d6da5014683591d45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a75da92e33063b63d6da5014683591d45" kindref="member">QCPDataContainer&lt;DataType&gt;::sort</ref>()</highlight></codeline>
<codeline lineno="3023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>std::sort(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3038" refid="class_q_c_p_data_container_1a82fcc511def22287fc62579d0706387c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1a82fcc511def22287fc62579d0706387c" kindref="member">QCPDataContainer&lt;DataType&gt;::squeeze</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preAllocation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>postAllocation)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preAllocation)</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPreallocSize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>(),<sp/>mData.begin());</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mData.resize(<ref refid="class_q_c_p_data_container_1a8e9b262c739672e13472d0d45b720258" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPreallocSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>mPreallocIteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(postAllocation)</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>mData.squeeze();</highlight></codeline>
<codeline lineno="3052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3070" refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/><ref refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" kindref="member">QCPDataContainer&lt;DataType&gt;::findBegin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3071"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>();</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/>std::lower_bound(<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>(),<sp/>DataType::fromSortKey(sortKey),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expandedRange<sp/>&amp;&amp;<sp/>it<sp/>!=<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>())<sp/></highlight><highlight class="comment">//<sp/>also<sp/>covers<sp/>it<sp/>==<sp/>constEnd<sp/>case,<sp/>and<sp/>we<sp/>know<sp/>--constEnd<sp/>is<sp/>valid<sp/>because<sp/>mData<sp/>isn&apos;t<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>--it;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3097" refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/><ref refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" kindref="member">QCPDataContainer&lt;DataType&gt;::findEnd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3098"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>();</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/>std::upper_bound(<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>(),<sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>(),<sp/>DataType::fromSortKey(sortKey),<sp/><ref refid="class_q_c_p_data_container_1a74c5e06728cb6fa778a25d9ec0c4bd36" kindref="member">qcpLessThanSortKey&lt;DataType&gt;</ref>);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expandedRange<sp/>&amp;&amp;<sp/>it<sp/>!=<sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>())</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3124" refid="class_q_c_p_data_container_1aba6e1a93c21ccc56a432b4a02c9d0ed2" refkind="member"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_data_container_1aba6e1a93c21ccc56a432b4a02c9d0ed2" kindref="member">QCPDataContainer&lt;DataType&gt;::keyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>signDomain)</highlight></codeline>
<codeline lineno="3125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>();</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>();</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signDomain<sp/>==<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>be<sp/>anywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DataType::sortKeyIsMainKey())<sp/></highlight><highlight class="comment">//<sp/>if<sp/>DataType<sp/>is<sp/>sorted<sp/>by<sp/>main<sp/>key<sp/>(e.g.<sp/>QCPGraph,<sp/>but<sp/>not<sp/>QCPCurve),<sp/>use<sp/>faster<sp/>algorithm<sp/>by<sp/>finding<sp/>just<sp/>first<sp/>and<sp/>last<sp/>key<sp/>with<sp/>non-NaN<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)<sp/></highlight><highlight class="comment">//<sp/>find<sp/>first<sp/>non-nan<sp/>going<sp/>up<sp/>from<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(it-&gt;mainValue()))</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>it-&gt;mainKey();</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>itEnd;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>())<sp/></highlight><highlight class="comment">//<sp/>find<sp/>first<sp/>non-nan<sp/>going<sp/>down<sp/>from<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--it;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(it-&gt;mainValue()))</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>it-&gt;mainKey();</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>DataType<sp/>is<sp/>not<sp/>sorted<sp/>by<sp/>main<sp/>key,<sp/>go<sp/>through<sp/>all<sp/>data<sp/>points<sp/>and<sp/>accordingly<sp/>expand<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(it-&gt;mainValue()))</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it-&gt;mainKey();</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>range.lower<sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>range.upper<sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signDomain<sp/>==<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a2d18af0bc58f6528d1e82ce699fe4829" kindref="member">QCP::sdNegative</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>negative<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(it-&gt;mainValue()))</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it-&gt;mainKey();</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&lt;<sp/>range.lower<sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&gt;<sp/>range.upper<sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signDomain<sp/>==<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a584784b75fb816abcc627cf743bb699f" kindref="member">QCP::sdPositive</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>positive<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(it-&gt;mainValue()))</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it-&gt;mainKey();</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&lt;<sp/>range.lower<sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&gt;<sp/>range.upper<sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3247" refid="class_q_c_p_data_container_1a35a102dc2424d1228fc374d9313efbe9" refkind="member"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_data_container_1a35a102dc2424d1228fc374d9313efbe9" kindref="member">QCPDataContainer&lt;DataType&gt;::valueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>signDomain,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;inKeyRange)</highlight></codeline>
<codeline lineno="3248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_data_container_1a7bdebfccd2f9f84bf032882f9d6b00a8" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restrictKeyRange<sp/>=<sp/>inKeyRange<sp/>!=<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>current;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>itBegin<sp/>=<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>();</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_data_container_1aa7cc0ad035a00421ba5810fe673c5cb8" kindref="member">constEnd</ref>();</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DataType::sortKeyIsMainKey()<sp/>&amp;&amp;<sp/>restrictKeyRange)</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/>itBegin<sp/>=<sp/><ref refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" kindref="member">findBegin</ref>(inKeyRange.lower,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" kindref="member">findEnd</ref>(inKeyRange.upper,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signDomain<sp/>==<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>be<sp/>anywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/>itBegin;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it)</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restrictKeyRange<sp/>&amp;&amp;<sp/>(it-&gt;mainKey()<sp/>&lt;<sp/>inKeyRange.lower<sp/>||<sp/>it-&gt;mainKey()<sp/>&gt;<sp/>inKeyRange.upper))</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it-&gt;valueRange();</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current.lower<sp/>&lt;<sp/>range.lower<sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>!qIsNaN(current.lower))</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>current.lower;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current.upper<sp/>&gt;<sp/>range.upper<sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>!qIsNaN(current.upper))</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>current.upper;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signDomain<sp/>==<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a2d18af0bc58f6528d1e82ce699fe4829" kindref="member">QCP::sdNegative</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>negative<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/>itBegin;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it)</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restrictKeyRange<sp/>&amp;&amp;<sp/>(it-&gt;mainKey()<sp/>&lt;<sp/>inKeyRange.lower<sp/>||<sp/>it-&gt;mainKey()<sp/>&gt;<sp/>inKeyRange.upper))</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it-&gt;valueRange();</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current.lower<sp/>&lt;<sp/>range.lower<sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current.lower<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>!qIsNaN(current.lower))</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>current.lower;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current.upper<sp/>&gt;<sp/>range.upper<sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current.upper<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>!qIsNaN(current.upper))</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>current.upper;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signDomain<sp/>==<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a584784b75fb816abcc627cf743bb699f" kindref="member">QCP::sdPositive</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>positive<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/>itBegin;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restrictKeyRange<sp/>&amp;&amp;<sp/>(it-&gt;mainKey()<sp/>&lt;<sp/>inKeyRange.lower<sp/>||<sp/>it-&gt;mainKey()<sp/>&gt;<sp/>inKeyRange.upper))</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it-&gt;valueRange();</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current.lower<sp/>&lt;<sp/>range.lower<sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current.lower<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!qIsNaN(current.lower))</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.lower<sp/>=<sp/>current.lower;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current.upper<sp/>&gt;<sp/>range.upper<sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current.upper<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!qIsNaN(current.upper))</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>=<sp/>current.upper;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3335" refid="class_q_c_p_data_container_1aa1b36f5ae86a5a5a0b92141d3a0945c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_container_1aa1b36f5ae86a5a5a0b92141d3a0945c4" kindref="member">QCPDataContainer&lt;DataType&gt;::limitIteratorsToDataRange</ref>(const_iterator<sp/>&amp;<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>,<sp/>const_iterator<sp/>&amp;<ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;<ref refid="class_q_c_p_data_container_1aece90eeb2ba8d3c46d3d94023630fbc7" kindref="member">dataRange</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3336"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>iteratorRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref>-<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref>-<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()));</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>iteratorRange<sp/>=<sp/>iteratorRange.<ref refid="class_q_c_p_data_range_1a93529421d12fdd3a8bdb2b8061936352" kindref="member">bounded</ref>(<ref refid="class_q_c_p_data_container_1aece90eeb2ba8d3c46d3d94023630fbc7" kindref="member">dataRange</ref>.bounded(this-&gt;dataRange()));</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_container_1a58c6f18e40003df1759ef571b485d720" kindref="member">begin</ref><sp/>=<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()+iteratorRange.begin();</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_container_1a3c7d450cdad10302e6102f7fe064223c" kindref="member">end</ref><sp/>=<sp/><ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>()+iteratorRange.end();</highlight></codeline>
<codeline lineno="3341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::preallocateGrow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimumPreallocSize)</highlight></codeline>
<codeline lineno="3354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimumPreallocSize<sp/>&lt;=<sp/>mPreallocSize)</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newPreallocSize<sp/>=<sp/>minimumPreallocSize;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/>newPreallocSize<sp/>+=<sp/>(1u&lt;&lt;qBound(4,<sp/>mPreallocIteration+4,<sp/>15))<sp/>-<sp/>12;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>4<sp/>up<sp/>to<sp/>32768-12<sp/>preallocation,<sp/>doubling<sp/>in<sp/>each<sp/>intermediate<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/>++mPreallocIteration;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeDifference<sp/>=<sp/>newPreallocSize-mPreallocSize;</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/>mData.resize(mData.size()+sizeDifference);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/>std::copy_backward(mData.begin()+mPreallocSize,<sp/>mData.end()-sizeDifference,<sp/>mData.end());</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/>mPreallocSize<sp/>=<sp/>newPreallocSize;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::performAutoSqueeze()</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalAlloc<sp/>=<sp/>mData.capacity();</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>postAllocSize<sp/>=<sp/>totalAlloc-mData.size();</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usedSize<sp/>=<sp/>size();</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shrinkPostAllocation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shrinkPreAllocation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalAlloc<sp/>&gt;<sp/>650000)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>allocation<sp/>is<sp/>larger,<sp/>shrink<sp/>earlier<sp/>with<sp/>respect<sp/>to<sp/>total<sp/>used<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/>shrinkPostAllocation<sp/>=<sp/>postAllocSize<sp/>&gt;<sp/>usedSize*1.5;<sp/></highlight><highlight class="comment">//<sp/>QVector<sp/>grow<sp/>strategy<sp/>is<sp/>2^n<sp/>for<sp/>static<sp/>data.<sp/>Watch<sp/>out<sp/>not<sp/>to<sp/>oscillate!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/>shrinkPreAllocation<sp/>=<sp/>mPreallocSize*10<sp/>&gt;<sp/>usedSize;</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalAlloc<sp/>&gt;<sp/>1000)<sp/></highlight><highlight class="comment">//<sp/>below<sp/>10<sp/>MiB<sp/>raw<sp/>data<sp/>be<sp/>generous<sp/>with<sp/>preallocated<sp/>memory,<sp/>below<sp/>1k<sp/>points<sp/>don&apos;t<sp/>even<sp/>bother</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/>shrinkPostAllocation<sp/>=<sp/>postAllocSize<sp/>&gt;<sp/>usedSize*5;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/>shrinkPreAllocation<sp/>=<sp/>mPreallocSize<sp/>&gt;<sp/>usedSize*1.5;<sp/></highlight><highlight class="comment">//<sp/>preallocation<sp/>can<sp/>grow<sp/>into<sp/>postallocation,<sp/>so<sp/>can<sp/>be<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shrinkPreAllocation<sp/>||<sp/>shrinkPostAllocation)</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/>squeeze(shrinkPreAllocation,<sp/>shrinkPostAllocation);</highlight></codeline>
<codeline lineno="3402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/datacontainer.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottable.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>8461<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411" refid="class_q_c_p_selection_decorator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" kindref="member">QCPSelectionDecorator</ref></highlight></codeline>
<codeline lineno="3412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" kindref="member">QCPSelectionDecorator</ref>();</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" kindref="member">~QCPSelectionDecorator</ref>();</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>scatterStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScatterStyle;<sp/>}</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/>QCPScatterStyle::ScatterProperties<sp/>usedScatterProperties()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mUsedScatterProperties;<sp/>}</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1ac2c8192e1e294aa3a4a7f32a859e3d76" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1aa74b626be518ea17055f918d423c8c2d" kindref="member">setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" kindref="member">setScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>&amp;scatterStyle,<sp/>QCPScatterStyle::ScatterProperties<sp/>usedProperties=<ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46aa04d012e7c03e455db2b68fdd55c2a04" kindref="member">QCPScatterStyle::spPen</ref>);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1a808c1607cd4e83869c04986e332455c0" kindref="member">setUsedScatterProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle::ScatterProperties<sp/>&amp;properties);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1a75098893f7d08660ea449206810679d7" kindref="member">applyPen</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1a225544527d51b49546b70d0e6d655a34" kindref="member">applyBrush</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/><ref refid="class_q_c_p_selection_decorator_1a1277b373248896bc70e8cc1de96da9fa" kindref="member">getFinalScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>&amp;unselectedStyle)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1a467a8d5cfcab27e862a17c797ac27b8a" kindref="member">copyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" kindref="member">QCPSelectionDecorator</ref><sp/>*other);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_1a4f8eb49e277063845391e803ae23054a" kindref="member">drawDecoration</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>selection);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>mScatterStyle;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/>QCPScatterStyle::ScatterProperties<sp/>mUsedScatterProperties;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/>QCPAbstractPlottable<sp/>*mPlottable;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registerWithPlottable(QCPAbstractPlottable<sp/>*plottable);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" kindref="member">QCPSelectionDecorator</ref>)</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPAbstractPlottable;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3455"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref>*)</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3458" refid="class_q_c_p_abstract_plottable" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="3459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>name<sp/>READ<sp/>name<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" kindref="member">setName</ref>)</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedFill<sp/>READ<sp/>antialiasedFill<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a089d6b5577120239b55c39ed27c39536" kindref="member">setAntialiasedFill</ref>)</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedScatters<sp/>READ<sp/>antialiasedScatters<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" kindref="member">setAntialiasedScatters</ref>)</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brush<sp/>READ<sp/>brush<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref>)</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPAxis*<sp/>keyAxis<sp/>READ<sp/>keyAxis<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a8524fa2994c63c0913ebd9bb2ffa3920" kindref="member">setKeyAxis</ref>)</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPAxis*<sp/>valueAxis<sp/>READ<sp/>valueAxis<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a71626a07367e241ec62ad2c34baf21cb" kindref="member">setValueAxis</ref>)</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable<sp/>READ<sp/>selectable<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1ac238d6e910f976f1f30d41c2bca44ac3" kindref="member">setSelectable</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_abstract_plottable_1a663b1a44123c8340ac041a29d1e2c973" kindref="member">selectableChanged</ref>)</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" kindref="member">selection</ref><sp/>READ<sp/><ref refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" kindref="member">selection</ref><sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a219bc5403a9d85d3129165ec3f5ae436" kindref="member">setSelection</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" kindref="member">selectionChanged</ref>)</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref>*<sp/><ref refid="class_q_c_p_abstract_plottable_1a7861518e47ca0c6a0c386032c2db075e" kindref="member">selectionDecorator</ref><sp/>READ<sp/><ref refid="class_q_c_p_abstract_plottable_1a7861518e47ca0c6a0c386032c2db075e" kindref="member">selectionDecorator</ref><sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_plottable_1a20e266ad646f8c4a7e4631040510e5d9" kindref="member">setSelectionDecorator</ref>)</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref>(QCPAxis<sp/>*keyAxis,<sp/>QCPAxis<sp/>*valueAxis);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">~QCPAbstractPlottable</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/>QString<sp/>name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;<sp/>}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedFill()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedFill;<sp/>}</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedScatters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedScatters;<sp/>}</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>QCPAxis<sp/>*keyAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mKeyAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/>QCPAxis<sp/>*valueAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValueAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectable;<sp/>}</highlight></codeline>
<codeline lineno="3486" refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" kindref="member">selected</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!mSelection.isEmpty();<sp/>}</highlight></codeline>
<codeline lineno="3487" refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" kindref="member">selection</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelection;<sp/>}</highlight></codeline>
<codeline lineno="3488" refid="class_q_c_p_abstract_plottable_1a7861518e47ca0c6a0c386032c2db075e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref><sp/>*<ref refid="class_q_c_p_abstract_plottable_1a7861518e47ca0c6a0c386032c2db075e" kindref="member">selectionDecorator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectionDecorator;<sp/>}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" kindref="member">setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a089d6b5577120239b55c39ed27c39536" kindref="member">setAntialiasedFill</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" kindref="member">setAntialiasedScatters</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a8524fa2994c63c0913ebd9bb2ffa3920" kindref="member">setKeyAxis</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a71626a07367e241ec62ad2c34baf21cb" kindref="member">setValueAxis</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis);</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ac238d6e910f976f1f30d41c2bca44ac3" kindref="member">setSelectable</ref>(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable);</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a219bc5403a9d85d3129165ec3f5ae436" kindref="member">setSelection</ref>(<ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a20e266ad646f8c4a7e4631040510e5d9" kindref="member">setSelectionDecorator</ref>(<ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref><sp/>*decorator);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3503" refid="class_q_c_p_abstract_plottable_1a8e4964b629802ce50e1427c7fb21d35b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a8e4964b629802ce50e1427c7fb21d35b" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>introduced<sp/>in<sp/>QCPLayerable<sp/>as<sp/>non-pure,<sp/>but<sp/>we<sp/>want<sp/>to<sp/>force<sp/>reimplementation<sp/>for<sp/>plottables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504" refid="class_q_c_p_abstract_plottable_1a53c8b30779771f2c743104e652e74ab1" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref><sp/>*<ref refid="class_q_c_p_abstract_plottable_1a53c8b30779771f2c743104e652e74ab1" kindref="member">interface1D</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3505" refid="class_q_c_p_abstract_plottable_1a56b4d9000f4de0de86c566c84eb05a21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_abstract_plottable_1a56b4d9000f4de0de86c566c84eb05a21" kindref="member">getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>inSignDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3506" refid="class_q_c_p_abstract_plottable_1aa81c95aec08d86cdd5407e48b83ab186" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_abstract_plottable_1aa81c95aec08d86cdd5407e48b83ab186" kindref="member">getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>inSignDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;inKeyRange=<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" kindref="member">coordsToPixels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" kindref="member">coordsToPixels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" kindref="member">pixelsToCoords</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" kindref="member">pixelsToCoords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a1491c4a606bccd2d09e65e11b79eb882" kindref="member">rescaleAxes</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" kindref="member">rescaleKeyAxis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a714eaf36b12434cd71846215504db82e" kindref="member">rescaleValueAxis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inKeyRange=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" kindref="member">addToLegend</ref>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*legend);</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" kindref="member">addToLegend</ref>();</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ac95fb2604d9106d0852ad9ceb326fe8c" kindref="member">removeFromLegend</ref>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*legend)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ac95fb2604d9106d0852ad9ceb326fe8c" kindref="member">removeFromLegend</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3521"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="3522" refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" kindref="member">selectionChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" kindref="member">selected</ref>);</highlight></codeline>
<codeline lineno="3523" refid="class_q_c_p_abstract_plottable_1a787a9c39421059006891744b731fa473" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a787a9c39421059006891744b731fa473" kindref="member">selectionChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>&amp;<ref refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="3524" refid="class_q_c_p_abstract_plottable_1a663b1a44123c8340ac041a29d1e2c973" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a663b1a44123c8340ac041a29d1e2c973" kindref="member">selectableChanged</ref>(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>QString<sp/>mName;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAntialiasedFill,<sp/>mAntialiasedScatters;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPAxis&gt;<sp/>mKeyAxis,<sp/>mValueAxis;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>mSelectable;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>mSelection;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref><sp/>*mSelectionDecorator;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QRect<sp/>clipRect()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::Interaction<sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyFillAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyScattersAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const;</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref>)</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAxis;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPPlottableLegendItem;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottable.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/item.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>9425<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568" refid="class_q_c_p_item_anchor" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_anchor_1a32573023c6fa65b4496f1f995e5bfa5f" kindref="member">QCPItemAnchor</ref></highlight></codeline>
<codeline lineno="3569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor_1a32573023c6fa65b4496f1f995e5bfa5f" kindref="member">QCPItemAnchor</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*parentItem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId=-1);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1a32573023c6fa65b4496f1f995e5bfa5f" kindref="member">~QCPItemAnchor</ref>();</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/>QString<sp/>name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;<sp/>}</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_q_c_p_item_anchor_1a06dcfb7220d26eee93eef56ae66582cb" kindref="member">pixelPosition</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/>QString<sp/>mName;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*mParentItem;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mAnchorId;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/>QSet&lt;QCPItemPosition*&gt;<sp/>mChildrenX,<sp/>mChildrenY;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3590" refid="class_q_c_p_item_anchor_1ab04819cd5bc6dc607a68413828313675" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPItemPosition<sp/>*<ref refid="class_q_c_p_item_anchor_1ab04819cd5bc6dc607a68413828313675" kindref="member">toQCPItemPosition</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChildX(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>*<sp/>pos);<sp/></highlight><highlight class="comment">//<sp/>called<sp/>from<sp/>pos<sp/>when<sp/>this<sp/>anchor<sp/>is<sp/>set<sp/>as<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeChildX(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*pos);<sp/></highlight><highlight class="comment">//<sp/>called<sp/>from<sp/>pos<sp/>when<sp/>its<sp/>parent<sp/>anchor<sp/>is<sp/>reset<sp/>or<sp/>pos<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChildY(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>*<sp/>pos);<sp/></highlight><highlight class="comment">//<sp/>called<sp/>from<sp/>pos<sp/>when<sp/>this<sp/>anchor<sp/>is<sp/>set<sp/>as<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeChildY(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*pos);<sp/></highlight><highlight class="comment">//<sp/>called<sp/>from<sp/>pos<sp/>when<sp/>its<sp/>parent<sp/>anchor<sp/>is<sp/>reset<sp/>or<sp/>pos<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref>)</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>;</highlight></codeline>
<codeline lineno="3602"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight></codeline>
<codeline lineno="3606" refid="class_q_c_p_item_position" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_position_1a6519a552bd9766354644ec24d1f26622" kindref="member">QCPItemPosition</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1a32573023c6fa65b4496f1f995e5bfa5f" kindref="member">QCPItemAnchor</ref></highlight></codeline>
<codeline lineno="3607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3616" refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" kindref="member">PositionType</ref><sp/>{<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3617" refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ac7d6aa89ceacb39658b0d6da061c789a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ac7d6aa89ceacb39658b0d6da061c789a" kindref="member">ptViewportRatio</ref><sp/><sp/></highlight></codeline>
<codeline lineno="3620" refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref><sp/><sp/></highlight></codeline>
<codeline lineno="3623" refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/>Q_ENUMS(PositionType)</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*parentItem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position" kindref="compound">~QCPItemPosition</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3631" refid="class_q_c_p_item_position_1abc1276e2ef603e459a9e48e75966bf8f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" kindref="member">PositionType</ref><sp/><ref refid="class_q_c_p_item_position_1abc1276e2ef603e459a9e48e75966bf8f" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeX();<sp/>}</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/>PositionType<sp/>typeX()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPositionTypeX;<sp/>}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/>PositionType<sp/>typeY()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPositionTypeY;<sp/>}</highlight></codeline>
<codeline lineno="3634" refid="class_q_c_p_item_position_1a0a87f9dce1af6cc9b510785991bcf1c6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor_1a32573023c6fa65b4496f1f995e5bfa5f" kindref="member">QCPItemAnchor</ref><sp/>*<ref refid="class_q_c_p_item_position_1a0a87f9dce1af6cc9b510785991bcf1c6" kindref="member">parentAnchor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parentAnchorX();<sp/>}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*parentAnchorX()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentAnchorX;<sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*parentAnchorY()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentAnchorY;<sp/>}</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mKey;<sp/>}</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValue;<sp/>}</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>QPointF<sp/>coords()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(mKey,<sp/>mValue);<sp/>}</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/>QCPAxis<sp/>*keyAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mKeyAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/>QCPAxis<sp/>*valueAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValueAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/>QCPAxisRect<sp/>*axisRect()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>pixelPosition()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setType(PositionType<sp/>type);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTypeX(PositionType<sp/>type);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTypeY(PositionType<sp/>type);</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParentAnchor(QCPItemAnchor<sp/>*parentAnchor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPixelPosition=false);</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParentAnchorX(QCPItemAnchor<sp/>*parentAnchor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPixelPosition=false);</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParentAnchorY(QCPItemAnchor<sp/>*parentAnchor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPixelPosition=false);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCoords(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCoords(const<sp/>QPointF<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAxes(QCPAxis*<sp/>keyAxis,<sp/>QCPAxis*<sp/>valueAxis);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAxisRect(QCPAxisRect<sp/>*axisRect);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPixelPosition(const<sp/>QPointF<sp/>&amp;pixelPosition);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3658"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>PositionType<sp/>mPositionTypeX,<sp/>mPositionTypeY;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPAxis&gt;<sp/>mKeyAxis,<sp/>mValueAxis;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPAxisRect&gt;<sp/>mAxisRect;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mKey,<sp/>mValue;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*mParentAnchorX,<sp/>*mParentAnchorY;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667" refid="class_q_c_p_item_position_1a0d2c5b823c99207eda710a37a4bb1dbf" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_item_position_1a6519a552bd9766354644ec24d1f26622" kindref="member">QCPItemPosition</ref><sp/>*<ref refid="class_q_c_p_item_position_1a0d2c5b823c99207eda710a37a4bb1dbf" kindref="member">toQCPItemPosition</ref>()<sp/>Q_DECL_OVERRIDE<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>)</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3672"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" kindref="member">QCPItemPosition::PositionType</ref>)</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676" refid="class_q_c_p_abstract_item" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="3677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clipToAxisRect<sp/>READ<sp/>clipToAxisRect<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_item_1a39e05b9d4176b9accafc746d16ca6a06" kindref="member">setClipToAxisRect</ref>)</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPAxisRect*<sp/>clipAxisRect<sp/>READ<sp/>clipAxisRect<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_item_1a7dc75fcbcd10206fe0b75d757ea7a347" kindref="member">setClipAxisRect</ref>)</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable<sp/>READ<sp/>selectable<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_item_1a8a8e32a55bc478b849756a78c2d87fd2" kindref="member">setSelectable</ref><sp/>NOTIFY<sp/>selectableChanged)</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/>READ<sp/>selected<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_abstract_item_1aa5cffb034fc65dbb91c77e02c1c14251" kindref="member">selectionChanged</ref>)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">~QCPAbstractItem</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clipToAxisRect()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mClipToAxisRect;<sp/>}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/>QCPAxisRect<sp/>*clipAxisRect()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectable;<sp/>}</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelected;<sp/>}</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a39e05b9d4176b9accafc746d16ca6a06" kindref="member">setClipToAxisRect</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clip);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a7dc75fcbcd10206fe0b75d757ea7a347" kindref="member">setClipAxisRect</ref>(QCPAxisRect<sp/>*rect);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a8a8e32a55bc478b849756a78c2d87fd2" kindref="member">setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3702" refid="class_q_c_p_abstract_item_1ac75a4bdcba0ce51ae22eacebb16a9dcd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1ac75a4bdcba0ce51ae22eacebb16a9dcd" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3705" refid="class_q_c_p_abstract_item_1a709f655ac3f7f22d452714134662b454" refkind="member"><highlight class="normal"><sp/><sp/>QList&lt;<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>*&gt;<sp/><ref refid="class_q_c_p_abstract_item_1a709f655ac3f7f22d452714134662b454" kindref="member">positions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPositions;<sp/>}</highlight></codeline>
<codeline lineno="3706" refid="class_q_c_p_abstract_item_1a81d1ecfea3368b836cf9675a0045e659" refkind="member"><highlight class="normal"><sp/><sp/>QList&lt;QCPItemAnchor*&gt;<sp/><ref refid="class_q_c_p_abstract_item_1a81d1ecfea3368b836cf9675a0045e659" kindref="member">anchors</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAnchors;<sp/>}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*position(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*anchor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasAnchor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3711"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="3712" refid="class_q_c_p_abstract_item_1aa5cffb034fc65dbb91c77e02c1c14251" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1aa5cffb034fc65dbb91c77e02c1c14251" kindref="member">selectionChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectableChanged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mClipToAxisRect;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPAxisRect&gt;<sp/>mClipAxisRect;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/>QList&lt;QCPItemPosition*&gt;<sp/>mPositions;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/>QList&lt;QCPItemAnchor*&gt;<sp/>mAnchors;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSelectable,<sp/>mSelected;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/>virtual<sp/>QRect<sp/>clipRect()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/>virtual<sp/>QPointF<sp/>anchorPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/>const;</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectDistance(const<sp/>QRectF<sp/>&amp;rect,<sp/>const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filledRect)<sp/>const;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*createPosition(const<sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*createAnchor(const<sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId);</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3740"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref>)</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPItemAnchor;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/item.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/core.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>19304<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753" refid="class_q_custom_plot" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_custom_plot_1a3c1c171f620ef0ea4ae3dbb2e6a0209a" kindref="member">QCustomPlot</ref><sp/>:<sp/>public<sp/>QWidget</highlight></codeline>
<codeline lineno="3754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QRect<sp/>viewport<sp/>READ<sp/>viewport<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>)</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPixmap<sp/>background<sp/>READ<sp/>background<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a130358592cfca353ff3cf5571b49fb00" kindref="member">setBackground</ref>)</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backgroundScaled<sp/>READ<sp/>backgroundScaled<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a36f0fa1317325dc7b7efea615ee2de1f" kindref="member">setBackgroundScaled</ref>)</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::AspectRatioMode<sp/>backgroundScaledMode<sp/>READ<sp/>backgroundScaledMode<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a4c0eb4865b7949f62e1cb97db04a3de0" kindref="member">setBackgroundScaledMode</ref>)</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>*<sp/><ref refid="class_q_custom_plot_1af1a1f1f571237deb7c2bd34a5e9f018f" kindref="member">plotLayout</ref><sp/>READ<sp/><ref refid="class_q_custom_plot_1af1a1f1f571237deb7c2bd34a5e9f018f" kindref="member">plotLayout</ref>)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoAddPlottableToLegend<sp/>READ<sp/>autoAddPlottableToLegend<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1ad8858410c2db47b7104040a3aa61c3fc" kindref="member">setAutoAddPlottableToLegend</ref>)</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectionTolerance<sp/>READ<sp/>selectionTolerance<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a4dc31241d7b09680950e19e5f971ed93" kindref="member">setSelectionTolerance</ref>)</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noAntialiasingOnDrag<sp/>READ<sp/>noAntialiasingOnDrag<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a775bdcb6329d44701aeaa6135b0e5265" kindref="member">setNoAntialiasingOnDrag</ref>)</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::KeyboardModifier<sp/>multiSelectModifier<sp/>READ<sp/>multiSelectModifier<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a8fc96e3b5138a06759a2a90c166df516" kindref="member">setMultiSelectModifier</ref>)</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openGl<sp/>READ<sp/>openGl<sp/>WRITE<sp/><ref refid="class_q_custom_plot_1a7db1adc09016329f3aef7c60da935789" kindref="member">setOpenGl</ref>)</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3774" refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7" kindref="member">LayerInsertMode</ref><sp/>{<sp/><ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7aee39cf650cd24e68552da0b697ce4a93" kindref="member">limBelow</ref><sp/><sp/></highlight></codeline>
<codeline lineno="3775" refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7a062b0b7825650b432a713c0df6742d41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7a062b0b7825650b432a713c0df6742d41" kindref="member">limAbove</ref><sp/></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/>Q_ENUMS(LayerInsertMode)</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3784" refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39" kindref="member">RefreshPriority</ref><sp/>{<sp/><ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39aa6eda645ccf1a60635df3e8b71ea6ae2" kindref="member">rpImmediateRefresh</ref><sp/></highlight></codeline>
<codeline lineno="3785" refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39acd6f1e590ea775d1ddee666428077f3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39acd6f1e590ea775d1ddee666428077f3e" kindref="member">rpQueuedRefresh</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3786" refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a49666a5854a68dbcca8b277b03331260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a49666a5854a68dbcca8b277b03331260" kindref="member">rpRefreshHint</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3787" refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a019650c6ddf308f97e811fbfff207a8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a019650c6ddf308f97e811fbfff207a8f" kindref="member">rpQueuedReplot</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>Q_ENUMS(RefreshPriority)</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>(QWidget<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot" kindref="compound">~QCustomPlot</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>QRect<sp/>viewport()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mViewport;<sp/>}</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bufferDevicePixelRatio()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBufferDevicePixelRatio;<sp/>}</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/>QPixmap<sp/>background()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundPixmap;<sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backgroundScaled()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundScaled;<sp/>}</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>backgroundScaledMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundScaledMode;<sp/>}</highlight></codeline>
<codeline lineno="3800" refid="class_q_custom_plot_1af1a1f1f571237deb7c2bd34a5e9f018f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref><sp/>*<ref refid="class_q_custom_plot_1af1a1f1f571237deb7c2bd34a5e9f018f" kindref="member">plotLayout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPlotLayout;<sp/>}</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>antialiasedElements()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedElements;<sp/>}</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>notAntialiasedElements()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNotAntialiasedElements;<sp/>}</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoAddPlottableToLegend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAutoAddPlottableToLegend;<sp/>}</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::Interactions<sp/>interactions()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInteractions;<sp/>}</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectionTolerance()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectionTolerance;<sp/>}</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noAntialiasingOnDrag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNoAntialiasingOnDrag;<sp/>}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/>QCP::PlottingHints<sp/>plottingHints()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPlottingHints;<sp/>}</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/>Qt::KeyboardModifier<sp/>multiSelectModifier()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMultiSelectModifier;<sp/>}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" kindref="member">QCP::SelectionRectMode</ref><sp/>selectionRectMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectionRectMode;<sp/>}</highlight></codeline>
<codeline lineno="3810" refid="class_q_custom_plot_1ad7df2bcbba307e644db383b449e31efd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref><sp/>*<ref refid="class_q_custom_plot_1ad7df2bcbba307e644db383b449e31efd" kindref="member">selectionRect</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectionRect;<sp/>}</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openGl()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOpenGl;<sp/>}</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setViewport(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBufferDevicePixelRatio(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm);</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>mode=Qt::KeepAspectRatioByExpanding);</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackgroundScaled(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackgroundScaledMode(Qt::AspectRatioMode<sp/>mode);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasedElements(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::AntialiasedElements<sp/>&amp;antialiasedElements);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasedElement(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref><sp/>antialiasedElement,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNotAntialiasedElements(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::AntialiasedElements<sp/>&amp;notAntialiasedElements);</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNotAntialiasedElement(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref><sp/>notAntialiasedElement,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAutoAddPlottableToLegend(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInteractions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::Interactions<sp/>&amp;interactions);</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInteraction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>&amp;interaction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectionTolerance(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNoAntialiasingOnDrag(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPlottingHints(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::PlottingHints<sp/>&amp;hints);</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPlottingHint(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" kindref="member">QCP::PlottingHint</ref><sp/>hint,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMultiSelectModifier(Qt::KeyboardModifier<sp/>modifier);</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectionRectMode(<ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" kindref="member">QCP::SelectionRectMode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectionRect(<ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref><sp/>*selectionRect);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOpenGl(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multisampling=16);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>plottable<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable();</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removePlottable(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable);</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removePlottable(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clearPlottables();</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plottableCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>selectedPlottables()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PlottableType&gt;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>PlottableType<sp/>*plottableAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dataIndex=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottableAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dataIndex=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPlottable(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specialized<sp/>interface<sp/>for<sp/>QCPGraph:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*graph(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*graph()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*addGraph(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeGraph(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*graph);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeGraph(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clearGraphs();</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>graphCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>selectedGraphs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>item<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeItem(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeItem(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clearItems();</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>selectedItems()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ItemType&gt;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>ItemType<sp/>*itemAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*itemAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasItem(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>layer<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*currentLayer()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setCurrentLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setCurrentLayer(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*otherLayer=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>LayerInsertMode<sp/>insertMode=limAbove);</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeLayer(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer);</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>moveLayer(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer,<sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*otherLayer,<sp/>LayerInsertMode<sp/>insertMode=limAbove);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>rect/layout<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axisRectCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>*<sp/>axisRect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index=0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxisRect*&gt;<sp/>axisRects()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*<sp/>layoutElementAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>*<sp/>axisRectAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescaleAxes(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisiblePlottables=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>selectedAxes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>QList&lt;QCPLegend*&gt;<sp/>selectedLegends()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectAll();</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>savePdf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height=0,<sp/><ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2f" kindref="member">QCP::ExportPen</ref><sp/>exportPen=<ref refid="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2fa50d3657dba3fb90560b93a823cb0a6e8" kindref="member">QCP::epAllowCosmetic</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pdfCreator=QString(),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pdfTitle=QString());</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>savePng(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height=0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale=1.0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality=-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution=96,<sp/><ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">QCP::ResolutionUnit</ref><sp/>resolutionUnit=<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" kindref="member">QCP::ruDotsPerInch</ref>);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saveJpg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height=0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale=1.0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality=-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution=96,<sp/><ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">QCP::ResolutionUnit</ref><sp/>resolutionUnit=<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" kindref="member">QCP::ruDotsPerInch</ref>);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saveBmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height=0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale=1.0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution=96,<sp/><ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">QCP::ResolutionUnit</ref><sp/>resolutionUnit=<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" kindref="member">QCP::ruDotsPerInch</ref>);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saveRastered(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality=-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution=96,<sp/><ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" kindref="member">QCP::ResolutionUnit</ref><sp/>resolutionUnit=<ref refid="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" kindref="member">QCP::ruDotsPerInch</ref>);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/>QPixmap<sp/>toPixmap(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height=0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale=1.0);</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toPainter(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height=0);</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>replot(<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39" kindref="member">QCustomPlot::RefreshPriority</ref><sp/>refreshPriority=<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a49666a5854a68dbcca8b277b03331260" kindref="member">QCustomPlot::rpRefreshHint</ref>);</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>replotTime(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>average=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3907" refid="class_q_custom_plot_1a968b5ac86c181a49bba78c2b62a80cb3" refkind="member"><highlight class="normal"><sp/><sp/>QCPAxis<sp/>*<ref refid="class_q_custom_plot_1a968b5ac86c181a49bba78c2b62a80cb3" kindref="member">xAxis</ref>,<sp/>*<ref refid="class_q_custom_plot_1af6fea5679725b152c14facd920b19367" kindref="member">yAxis</ref>,<sp/>*<ref refid="class_q_custom_plot_1ada41599f22cad901c030f3dcbdd82fd9" kindref="member">xAxis2</ref>,<sp/>*<ref refid="class_q_custom_plot_1af13fdc5bce7d0fabd640f13ba805c0b7" kindref="member">yAxis2</ref>;</highlight></codeline>
<codeline lineno="3908" refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" refkind="member"><highlight class="normal"><sp/><sp/>QCPLegend<sp/>*<ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">legend</ref>;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3910"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="3911" refid="class_q_custom_plot_1a9b232142c64fcf273a953ee08e5b90e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a9b232142c64fcf273a953ee08e5b90e9" kindref="member">mouseDoubleClick</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3912" refid="class_q_custom_plot_1aca75bf9afb5dd19349c375de2a87a051" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1aca75bf9afb5dd19349c375de2a87a051" kindref="member">mousePress</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3913" refid="class_q_custom_plot_1a742ca4f94688bed2a685fd8a56ce5704" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a742ca4f94688bed2a685fd8a56ce5704" kindref="member">mouseMove</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3914" refid="class_q_custom_plot_1ac8dc0ee6bb98e923c00b4ebafbe6134d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac8dc0ee6bb98e923c00b4ebafbe6134d" kindref="member">mouseRelease</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3915" refid="class_q_custom_plot_1ac80a14206f99304a91d2aa55775ec3ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac80a14206f99304a91d2aa55775ec3ff" kindref="member">mouseWheel</ref>(QWheelEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3917" refid="class_q_custom_plot_1af5fe78b8bc9e4e96df921612837fd4fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1af5fe78b8bc9e4e96df921612837fd4fd" kindref="member">plottableClick</ref>(QCPAbstractPlottable<sp/>*<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">plottable</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndex,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3918" refid="class_q_custom_plot_1a86a3ab7263c9c4e008e70d6c5fce9fbd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a86a3ab7263c9c4e008e70d6c5fce9fbd" kindref="member">plottableDoubleClick</ref>(QCPAbstractPlottable<sp/>*<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">plottable</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndex,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3919" refid="class_q_custom_plot_1ae16b51f52d2b7aebbc7e3e74e6ff2e4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ae16b51f52d2b7aebbc7e3e74e6ff2e4b" kindref="member">itemClick</ref>(QCPAbstractItem<sp/>*<ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3920" refid="class_q_custom_plot_1ac83aa9f5a3e9bb3efc9cdc763dcd42a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac83aa9f5a3e9bb3efc9cdc763dcd42a6" kindref="member">itemDoubleClick</ref>(QCPAbstractItem<sp/>*<ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3921" refid="class_q_custom_plot_1abf635f8b56ab5c16d5de9f358543e82b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1abf635f8b56ab5c16d5de9f358543e82b" kindref="member">axisClick</ref>(QCPAxis<sp/>*axis,<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref><sp/>part,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3922" refid="class_q_custom_plot_1a6df35357460181a72da3e93d600f5256" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6df35357460181a72da3e93d600f5256" kindref="member">axisDoubleClick</ref>(QCPAxis<sp/>*axis,<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref><sp/>part,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3923" refid="class_q_custom_plot_1a79cff0baafbca10a3aaf694d2d3b9ab3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a79cff0baafbca10a3aaf694d2d3b9ab3" kindref="member">legendClick</ref>(QCPLegend<sp/>*<ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">legend</ref>,<sp/><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*<ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3924" refid="class_q_custom_plot_1a0250f835c044521df1619b132288bca7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a0250f835c044521df1619b132288bca7" kindref="member">legendDoubleClick</ref>(QCPLegend<sp/>*<ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">legend</ref>,<sp/><sp/><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*<ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3926" refid="class_q_custom_plot_1a500c64a109bc773c973ad274f2fa4190" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a500c64a109bc773c973ad274f2fa4190" kindref="member">selectionChangedByUser</ref>();</highlight></codeline>
<codeline lineno="3927" refid="class_q_custom_plot_1a0cd30e29b73efd6afe096e44bc5956f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a0cd30e29b73efd6afe096e44bc5956f5" kindref="member">beforeReplot</ref>();</highlight></codeline>
<codeline lineno="3928" refid="class_q_custom_plot_1aa3a37a057f64a7587436dabe98c592e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1aa3a37a057f64a7587436dabe98c592e9" kindref="member">afterLayout</ref>();</highlight></codeline>
<codeline lineno="3929" refid="class_q_custom_plot_1a6f4fa624af060bc5919c5f266cf426a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6f4fa624af060bc5919c5f266cf426a0" kindref="member">afterReplot</ref>();</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/>QRect<sp/>mViewport;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mBufferDevicePixelRatio;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref><sp/>*mPlotLayout;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAutoAddPlottableToLegend;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>mPlottables;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>mGraphs;<sp/></highlight><highlight class="comment">//<sp/>extra<sp/>list<sp/>of<sp/>plottables<sp/>also<sp/>in<sp/>mPlottables<sp/>that<sp/>are<sp/>of<sp/>type<sp/>QCPGraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>mItems;</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayer*&gt;<sp/>mLayers;</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>mAntialiasedElements,<sp/>mNotAntialiasedElements;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>QCP::Interactions<sp/>mInteractions;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mSelectionTolerance;</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mNoAntialiasingOnDrag;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBackgroundBrush;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mBackgroundPixmap;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mScaledBackgroundPixmap;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mBackgroundScaled;</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>mBackgroundScaledMode;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/>QCPLayer<sp/>*mCurrentLayer;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/>QCP::PlottingHints<sp/>mPlottingHints;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/>Qt::KeyboardModifier<sp/>mMultiSelectModifier;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" kindref="member">QCP::SelectionRectMode</ref><sp/>mSelectionRectMode;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref><sp/>*mSelectionRect;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mOpenGl;</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>QList&lt;QSharedPointer&lt;QCPAbstractPaintBuffer&gt;<sp/>&gt;<sp/>mPaintBuffers;</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/>QPoint<sp/>mMousePressPos;</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mMouseHasMoved;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPLayerable&gt;<sp/>mMouseEventLayerable;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPLayerable&gt;<sp/>mMouseSignalLayerable;</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>QVariant<sp/>mMouseEventLayerableDetails;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>QVariant<sp/>mMouseSignalLayerableDetails;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mReplotting;</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mReplotQueued;</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mReplotTime,<sp/>mReplotTimeAverage;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mOpenGlMultisamples;</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>mOpenGlAntialiasedElementsBackup;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mOpenGlCacheLabelsBackup;</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCP_OPENGL_FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QOpenGLContext&gt;<sp/>mGlContext;</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QSurface&gt;<sp/>mGlSurface;</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QOpenGLPaintDevice&gt;<sp/>mGlPaintDevice;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QSize<sp/>minimumSizeHint()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/>virtual<sp/>QSize<sp/>sizeHint()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintEvent(QPaintEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resizeEvent(QResizeEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseDoubleClickEvent(QMouseEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mousePressEvent(QMouseEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseMoveEvent(QMouseEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseReleaseEvent(QMouseEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wheelEvent(QWheelEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter);</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLayout();</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>axisRemoved(QCPAxis<sp/>*axis);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>legendRemoved(QCPLegend<sp/>*<ref refid="class_q_custom_plot_1a73da53368aa4c2db3d874cf0db50d140" kindref="member">legend</ref>);</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processRectSelection(QRect<sp/>rect,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processRectZoom(QRect<sp/>rect,<sp/>QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processPointSelection(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registerPlottable(QCPAbstractPlottable<sp/>*<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">plottable</ref>);</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registerGraph(QCPGraph<sp/>*<ref refid="class_q_custom_plot_1a6ecae130f684b25276fb47bd3a5875c6" kindref="member">graph</ref>);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registerItem(QCPAbstractItem*<sp/><ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLayerIndices()<sp/>const;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*layerableAt(const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*selectionDetails=</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>const;</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/>QList&lt;<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>*&gt;<sp/>layerableListAt(const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QList&lt;QVariant&gt;<sp/>*selectionDetails=</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>const;</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawBackground(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter);</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupPaintBuffers();</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_paint_buffer" kindref="compound">QCPAbstractPaintBuffer</ref><sp/>*createPaintBuffer();</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ad452b582348c8e99462d83fe1cd0279b" kindref="member">hasInvalidatedPaintBuffers</ref>();</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setupOpenGl();</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeOpenGl();</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAxis;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLayer;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAxisRect;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAbstractPlottable;</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPGraph;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAbstractItem;</highlight></codeline>
<codeline lineno="4018"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4019"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_custom_plot_1a3c1c171f620ef0ea4ae3dbb2e6a0209a" kindref="member">QCustomPlot</ref>::<ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7" kindref="member">LayerInsertMode</ref>)</highlight></codeline>
<codeline lineno="4020"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_custom_plot_1a3c1c171f620ef0ea4ae3dbb2e6a0209a" kindref="member">QCustomPlot</ref>::<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39" kindref="member">RefreshPriority</ref>)</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementation<sp/>of<sp/>template<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal">template&lt;class<sp/>PlottableType&gt;</highlight></codeline>
<codeline lineno="4044" refid="class_q_custom_plot_1a545c0e63e13a4fbac3d5acbd8a03ef6f" refkind="member"><highlight class="normal">PlottableType<sp/>*<ref refid="class_q_custom_plot_1a3c1c171f620ef0ea4ae3dbb2e6a0209a" kindref="member">QCustomPlot</ref>::<ref refid="class_q_custom_plot_1a545c0e63e13a4fbac3d5acbd8a03ef6f" kindref="member">plottableAt</ref>(const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dataIndex)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4045"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/>PlottableType<sp/>*resultPlottable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/>QVariant<sp/>resultDetails;</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resultDistance<sp/>=<sp/>mSelectionTolerance;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>regard<sp/>clicks<sp/>with<sp/>distances<sp/>smaller<sp/>than<sp/>mSelectionTolerance<sp/>as<sp/>selections,<sp/>so<sp/>initialize<sp/>with<sp/>that<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(QCPAbstractPlottable<sp/>*<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">plottable</ref>,<sp/>mPlottables)</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/>PlottableType<sp/>*currentPlottable<sp/>=<sp/>qobject_cast&lt;PlottableType*&gt;(<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">plottable</ref>);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!currentPlottable<sp/>||<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!currentPlottable-&gt;selectable()))<sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>have<sp/>also<sp/>passed<sp/>onlySelectable<sp/>to<sp/>the<sp/>selectTest<sp/>function,<sp/>but<sp/>checking<sp/>here<sp/>is<sp/>faster,<sp/>because<sp/>we<sp/>have<sp/>access<sp/>to<sp/>QCPAbstractPlottable::selectable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentPlottable-&gt;clipRect().contains(pos.toPoint()))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>consider<sp/>clicks<sp/>where<sp/>the<sp/>plottable<sp/>is<sp/>actually<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVariant<sp/>details;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistance<sp/>=<sp/>currentPlottable-&gt;selectTest(pos,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>dataIndex<sp/>?<sp/>&amp;details<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistance<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>currentDistance<sp/>&lt;<sp/>resultDistance)</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultPlottable<sp/>=<sp/>currentPlottable;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultDetails<sp/>=<sp/>details;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resultPlottable<sp/>&amp;&amp;<sp/>dataIndex)</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>sel<sp/>=<sp/>resultDetails.value&lt;<ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref>&gt;();</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sel.<ref refid="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dataIndex<sp/>=<sp/>sel.<ref refid="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad" kindref="member">dataRange</ref>(0).begin();</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultPlottable;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ItemType&gt;</highlight></codeline>
<codeline lineno="4091" refid="class_q_custom_plot_1a89f7565773c5d59347a7f2262a737844" refkind="member"><highlight class="normal">ItemType<sp/>*<ref refid="class_q_custom_plot_1a89f7565773c5d59347a7f2262a737844" kindref="member">QCustomPlot::itemAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4092"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/>ItemType<sp/>*resultItem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resultDistance<sp/>=<sp/>mSelectionTolerance;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>regard<sp/>clicks<sp/>with<sp/>distances<sp/>smaller<sp/>than<sp/>mSelectionTolerance<sp/>as<sp/>selections,<sp/>so<sp/>initialize<sp/>with<sp/>that<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(QCPAbstractItem<sp/>*<ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>,<sp/>mItems)</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemType<sp/>*currentItem<sp/>=<sp/>qobject_cast&lt;ItemType*&gt;(<ref refid="class_q_custom_plot_1ac042f2e78edd228ccf2f26b7fe215239" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!currentItem<sp/>||<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!currentItem-&gt;selectable()))<sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>have<sp/>also<sp/>passed<sp/>onlySelectable<sp/>to<sp/>the<sp/>selectTest<sp/>function,<sp/>but<sp/>checking<sp/>here<sp/>is<sp/>faster,<sp/>because<sp/>we<sp/>have<sp/>access<sp/>to<sp/>QCPAbstractItem::selectable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!currentItem-&gt;clipToAxisRect()<sp/>||<sp/>currentItem-&gt;clipRect().contains(pos.toPoint()))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>consider<sp/>clicks<sp/>inside<sp/>axis<sp/>cliprect<sp/>of<sp/>the<sp/>item<sp/>if<sp/>actually<sp/>clipped<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistance<sp/>=<sp/>currentItem-&gt;selectTest(pos,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistance<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>currentDistance<sp/>&lt;<sp/>resultDistance)</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultItem<sp/>=<sp/>currentItem;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultItem;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/core.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottable1d.h&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>25638<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123" refid="class_q_c_p_plottable_interface1_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref></highlight></codeline>
<codeline lineno="4124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">~QCPPlottableInterface1D</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>pure<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4128" refid="class_q_c_p_plottable_interface1_d_1adf4ce17d263b506df80d0ac37e497432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1adf4ce17d263b506df80d0ac37e497432" kindref="member">dataCount</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4129" refid="class_q_c_p_plottable_interface1_d_1a572ed2583cb6a2bb590a265c3fc2b004" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1a572ed2583cb6a2bb590a265c3fc2b004" kindref="member">dataMainKey</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4130" refid="class_q_c_p_plottable_interface1_d_1aa21351ab3d6edbcf8d95f9c377e5003b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1aa21351ab3d6edbcf8d95f9c377e5003b" kindref="member">dataSortKey</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4131" refid="class_q_c_p_plottable_interface1_d_1a17f6fbd78e004b6f3c8257fea50f9808" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1a17f6fbd78e004b6f3c8257fea50f9808" kindref="member">dataMainValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4132" refid="class_q_c_p_plottable_interface1_d_1af9a720ace6499337406a5e65d4823f57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_plottable_interface1_d_1af9a720ace6499337406a5e65d4823f57" kindref="member">dataValueRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4133" refid="class_q_c_p_plottable_interface1_d_1a35fd032c6e5226ff7b50e0f37c57922b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_q_c_p_plottable_interface1_d_1a35fd032c6e5226ff7b50e0f37c57922b" kindref="member">dataPixelPosition</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4134" refid="class_q_c_p_plottable_interface1_d_1acec8492c49e051aaec5ca5267900a98e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1acec8492c49e051aaec5ca5267900a98e" kindref="member">sortKeyIsMainKey</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4135" refid="class_q_c_p_plottable_interface1_d_1a05874ade11a735bb290bb96ccf7fdac1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_plottable_interface1_d_1a05874ade11a735bb290bb96ccf7fdac1" kindref="member">selectTestRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4136" refid="class_q_c_p_plottable_interface1_d_1ac8f224af7f2afeed46d82368344d8d9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1ac8f224af7f2afeed46d82368344d8d9e" kindref="member">findBegin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4137" refid="class_q_c_p_plottable_interface1_d_1a2a6f8cad846ea18d3ab46a95047de681" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d_1a2a6f8cad846ea18d3ab46a95047de681" kindref="member">findEnd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4141" refid="class_q_c_p_abstract_plottable1_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref><sp/></highlight><highlight class="comment">//<sp/>no<sp/>QCP_LIB_DECL,<sp/>template<sp/>class<sp/>ends<sp/>up<sp/>in<sp/>header<sp/>(cpp<sp/>included<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>Q_OBJECT<sp/>macro<sp/>due<sp/>to<sp/>template<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4146" refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>(QCPAxis<sp/>*keyAxis,<sp/>QCPAxis<sp/>*valueAxis);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">~QCPAbstractPlottable1D</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>methods<sp/>of<sp/>1d<sp/>plottable<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150" refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" kindref="member">dataCount</ref>()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4151" refid="class_q_c_p_abstract_plottable1_d_1aeb156ebf5d3c8de906b428be30733ad8" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1aeb156ebf5d3c8de906b428be30733ad8" kindref="member">dataMainKey</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4152" refid="class_q_c_p_abstract_plottable1_d_1aa8277da921b009bce474437d50b4a2d8" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1aa8277da921b009bce474437d50b4a2d8" kindref="member">dataSortKey</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4153" refid="class_q_c_p_abstract_plottable1_d_1a6be0f657ba85a1688336d76ad649ecf2" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a6be0f657ba85a1688336d76ad649ecf2" kindref="member">dataMainValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4154" refid="class_q_c_p_abstract_plottable1_d_1a55f937ba6a63e56e57f0b1a6e85a333a" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a55f937ba6a63e56e57f0b1a6e85a333a" kindref="member">dataValueRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4155" refid="class_q_c_p_abstract_plottable1_d_1a6ca0699a6af5f25a7565de7c50ce13b2" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>QPointF<sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a6ca0699a6af5f25a7565de7c50ce13b2" kindref="member">dataPixelPosition</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4156" refid="class_q_c_p_abstract_plottable1_d_1afe0d56e39cc076032922f059b304c092" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1afe0d56e39cc076032922f059b304c092" kindref="member">sortKeyIsMainKey</ref>()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4157" refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" kindref="member">selectTestRect</ref>(const<sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4158" refid="class_q_c_p_abstract_plottable1_d_1ad0b46d25cde3d035b180fb8f10c056e6" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ad0b46d25cde3d035b180fb8f10c056e6" kindref="member">findBegin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=true)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4159" refid="class_q_c_p_abstract_plottable1_d_1a6e3ba20c9160d7361e58070390d10b1a" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a6e3ba20c9160d7361e58070390d10b1a" kindref="member">findEnd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=true)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4162" refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261" kindref="member">selectTest</ref>(const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4163" refid="class_q_c_p_abstract_plottable1_d_1acb01f095cfb292f2cce2257e074554c4" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref><sp/>*<ref refid="class_q_c_p_abstract_plottable1_d_1acb01f095cfb292f2cce2257e074554c4" kindref="member">interface1D</ref>()<sp/>Q_DECL_OVERRIDE<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPDataContainer&lt;DataType&gt;<sp/>&gt;<sp/>mDataContainer;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>helpers<sp/>for<sp/>subclasses:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4170" refid="class_q_c_p_abstract_plottable1_d_1ae890e62ce403c54f575c73b9529f1af8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ae890e62ce403c54f575c73b9529f1af8" kindref="member">getDataSegments</ref>(QList&lt;QCPDataRange&gt;<sp/>&amp;selectedSegments,<sp/>QList&lt;QCPDataRange&gt;<sp/>&amp;unselectedSegments)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4171" refid="class_q_c_p_abstract_plottable1_d_1a7adc6c3cccebb5341f11e0c2b7d54206" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a7adc6c3cccebb5341f11e0c2b7d54206" kindref="member">drawPolyline</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>&amp;lineData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>)</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"></highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>implementation<sp/>in<sp/>header<sp/>since<sp/>it<sp/>is<sp/>a<sp/>class<sp/>template:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4228"><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4367" refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" refkind="member"><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::QCPAbstractPlottable1D</ref>(QCPAxis<sp/>*keyAxis,<sp/>QCPAxis<sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis),</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/>mDataContainer(new<sp/><ref refid="class_q_c_p_data_container" kindref="compound">QCPDataContainer</ref>&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="4370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal">QCPAbstractPlottable1D&lt;DataType&gt;::~QCPAbstractPlottable1D()</highlight></codeline>
<codeline lineno="4375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4382" refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::dataCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4383"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer-&gt;size();</highlight></codeline>
<codeline lineno="4385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4391" refid="class_q_c_p_abstract_plottable1_d_1aeb156ebf5d3c8de906b428be30733ad8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1aeb156ebf5d3c8de906b428be30733ad8" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::dataMainKey</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4392"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>mDataContainer-&gt;size())</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mDataContainer-&gt;constBegin()+index)-&gt;mainKey();</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4407" refid="class_q_c_p_abstract_plottable1_d_1aa8277da921b009bce474437d50b4a2d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1aa8277da921b009bce474437d50b4a2d8" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::dataSortKey</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4408"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>mDataContainer-&gt;size())</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mDataContainer-&gt;constBegin()+index)-&gt;sortKey();</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4423" refid="class_q_c_p_abstract_plottable1_d_1a6be0f657ba85a1688336d76ad649ecf2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a6be0f657ba85a1688336d76ad649ecf2" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::dataMainValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>mDataContainer-&gt;size())</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mDataContainer-&gt;constBegin()+index)-&gt;mainValue();</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4439" refid="class_q_c_p_abstract_plottable1_d_1a55f937ba6a63e56e57f0b1a6e85a333a" refkind="member"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a55f937ba6a63e56e57f0b1a6e85a333a" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::dataValueRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4440"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>mDataContainer-&gt;size())</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mDataContainer-&gt;constBegin()+index)-&gt;valueRange();</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4455" refid="class_q_c_p_abstract_plottable1_d_1a6ca0699a6af5f25a7565de7c50ce13b2" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a6ca0699a6af5f25a7565de7c50ce13b2" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::dataPixelPosition</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4456"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>mDataContainer-&gt;size())</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it<sp/>=<sp/>mDataContainer-&gt;constBegin()+index;</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" kindref="member">coordsToPixels</ref>(it-&gt;mainKey(),<sp/>it-&gt;mainValue());</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4472" refid="class_q_c_p_abstract_plottable1_d_1afe0d56e39cc076032922f059b304c092" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1afe0d56e39cc076032922f059b304c092" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::sortKeyIsMainKey</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4473"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataType::sortKeyIsMainKey();</highlight></codeline>
<codeline lineno="4475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4485" refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" refkind="member"><highlight class="normal"><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::selectTestRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4486"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>result;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((onlySelectable<sp/>&amp;&amp;<sp/>mSelectable<sp/>==<sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa64628e338a2dd1e6f0dc84dec0b63fe" kindref="member">QCP::stNone</ref>)<sp/>||<sp/>mDataContainer-&gt;isEmpty())</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mKeyAxis<sp/>||<sp/>!mValueAxis)</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>rect<sp/>given<sp/>in<sp/>pixels<sp/>to<sp/>ranges<sp/>given<sp/>in<sp/>plot<sp/>coordinates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key1,<sp/>value1,<sp/>key2,<sp/>value2;</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" kindref="member">pixelsToCoords</ref>(rect.topLeft(),<sp/>key1,<sp/>value1);</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" kindref="member">pixelsToCoords</ref>(rect.bottomRight(),<sp/>key2,<sp/>value2);</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>keyRange(key1,<sp/>key2);<sp/></highlight><highlight class="comment">//<sp/>QCPRange<sp/>normalizes<sp/>internally<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>care<sp/>about<sp/>whether<sp/>key1<sp/>&lt;<sp/>key2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>valueRange(value1,<sp/>value2);</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>begin<sp/>=<sp/>mDataContainer-&gt;constBegin();</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>end<sp/>=<sp/>mDataContainer-&gt;constEnd();</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DataType::sortKeyIsMainKey())<sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>assume<sp/>that<sp/>data<sp/>is<sp/>sorted<sp/>by<sp/>main<sp/>key,<sp/>so<sp/>can<sp/>reduce<sp/>the<sp/>searched<sp/>key<sp/>interval:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>mDataContainer-&gt;<ref refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" kindref="member">findBegin</ref>(keyRange.lower,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>mDataContainer-&gt;<ref refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" kindref="member">findEnd</ref>(keyRange.upper,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>==<sp/>end)</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentSegmentBegin<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>means<sp/>we&apos;re<sp/>currently<sp/>not<sp/>in<sp/>a<sp/>segment<sp/>that&apos;s<sp/>contained<sp/>in<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it=begin;<sp/>it!=end;<sp/>++it)</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentSegmentBegin<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueRange.<ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(it-&gt;mainValue())<sp/>&amp;&amp;<sp/>keyRange.<ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(it-&gt;mainKey()))<sp/></highlight><highlight class="comment">//<sp/>start<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentSegmentBegin<sp/>=<sp/>int(it-mDataContainer-&gt;constBegin());</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valueRange.<ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(it-&gt;mainValue())<sp/>||<sp/>!keyRange.<ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(it-&gt;mainKey()))<sp/></highlight><highlight class="comment">//<sp/>segment<sp/>just<sp/>ended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f" kindref="member">addDataRange</ref>(<ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(currentSegmentBegin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(it-mDataContainer-&gt;constBegin())),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentSegmentBegin<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>potential<sp/>last<sp/>segment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentSegmentBegin<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f" kindref="member">addDataRange</ref>(<ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(currentSegmentBegin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(end-mDataContainer-&gt;<ref refid="class_q_c_p_data_container_1afcfa138af53d0c8c78953a71d7960ae3" kindref="member">constBegin</ref>())),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/>result.<ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">simplify</ref>();</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4534" refid="class_q_c_p_abstract_plottable1_d_1ad0b46d25cde3d035b180fb8f10c056e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ad0b46d25cde3d035b180fb8f10c056e6" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::findBegin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4535"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(mDataContainer-&gt;findBegin(sortKey,<sp/>expandedRange)-mDataContainer-&gt;constBegin());</highlight></codeline>
<codeline lineno="4537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4543" refid="class_q_c_p_abstract_plottable1_d_1a6e3ba20c9160d7361e58070390d10b1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a6e3ba20c9160d7361e58070390d10b1a" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::findEnd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4544"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(mDataContainer-&gt;findEnd(sortKey,<sp/>expandedRange)-mDataContainer-&gt;constBegin());</highlight></codeline>
<codeline lineno="4546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4559" refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4560"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((onlySelectable<sp/>&amp;&amp;<sp/>mSelectable<sp/>==<sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa64628e338a2dd1e6f0dc84dec0b63fe" kindref="member">QCP::stNone</ref>)<sp/>||<sp/>mDataContainer-&gt;isEmpty())</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mKeyAxis<sp/>||<sp/>!mValueAxis)</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>selectionResult;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>(std::numeric_limits&lt;double&gt;::max)();</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minDistIndex<sp/>=<sp/>mDataContainer-&gt;size();</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>begin<sp/>=<sp/>mDataContainer-&gt;constBegin();</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>end<sp/>=<sp/>mDataContainer-&gt;constEnd();</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DataType::sortKeyIsMainKey())<sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>assume<sp/>that<sp/>data<sp/>is<sp/>sorted<sp/>by<sp/>main<sp/>key,<sp/>so<sp/>can<sp/>reduce<sp/>the<sp/>searched<sp/>key<sp/>interval:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>which<sp/>key<sp/>range<sp/>comes<sp/>into<sp/>question,<sp/>taking<sp/>selection<sp/>tolerance<sp/>around<sp/>pos<sp/>into<sp/>account:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posKeyMin,<sp/>posKeyMax,<sp/>dummy;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" kindref="member">pixelsToCoords</ref>(pos-QPointF(mParentPlot-&gt;selectionTolerance(),<sp/>mParentPlot-&gt;selectionTolerance()),<sp/>posKeyMin,<sp/>dummy);</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" kindref="member">pixelsToCoords</ref>(pos+QPointF(mParentPlot-&gt;selectionTolerance(),<sp/>mParentPlot-&gt;selectionTolerance()),<sp/>posKeyMax,<sp/>dummy);</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posKeyMin<sp/>&gt;<sp/>posKeyMax)</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(posKeyMin,<sp/>posKeyMax);</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>mDataContainer-&gt;<ref refid="class_q_c_p_data_container_1a2ad8a5399072d99a242d3a6d2d7e278a" kindref="member">findBegin</ref>(posKeyMin,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>mDataContainer-&gt;<ref refid="class_q_c_p_data_container_1afb8b8f23cc2b7234a793a25ce79fe48f" kindref="member">findEnd</ref>(posKeyMax,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>==<sp/>end)</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>keyRange(mKeyAxis-&gt;range());</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>valueRange(mValueAxis-&gt;range());</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;DataType&gt;::const_iterator<sp/>it=begin;<sp/>it!=end;<sp/>++it)</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mainKey<sp/>=<sp/>it-&gt;mainKey();</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mainValue<sp/>=<sp/>it-&gt;mainValue();</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyRange.<ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(mainKey)<sp/>&amp;&amp;<sp/>valueRange.<ref refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" kindref="member">contains</ref>(mainValue))<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>data<sp/>point<sp/>is<sp/>inside<sp/>visible<sp/>range,<sp/>for<sp/>speedup<sp/>in<sp/>cases<sp/>where<sp/>sort<sp/>key<sp/>isn&apos;t<sp/>main<sp/>key<sp/>and<sp/>we<sp/>iterate<sp/>over<sp/>all<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref>(<ref refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" kindref="member">coordsToPixels</ref>(mainKey,<sp/>mainValue)-pos).<ref refid="class_q_c_p_vector2_d_1a766585459d84cb149334fda1a498b2e5" kindref="member">lengthSquared</ref>();</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistIndex<sp/>=<sp/>int(it-mDataContainer-&gt;constBegin());</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minDistIndex<sp/>!=<sp/>mDataContainer-&gt;size())</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/>selectionResult.<ref refid="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f" kindref="member">addDataRange</ref>(<ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(minDistIndex,<sp/>minDistIndex+1),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>selectionResult.<ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">simplify</ref>();</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(details)</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/>details-&gt;setValue(selectionResult);</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"></highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4621" refid="class_q_c_p_abstract_plottable1_d_1ae890e62ce403c54f575c73b9529f1af8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ae890e62ce403c54f575c73b9529f1af8" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::getDataSegments</ref>(QList&lt;QCPDataRange&gt;<sp/>&amp;selectedSegments,<sp/>QList&lt;QCPDataRange&gt;<sp/>&amp;unselectedSegments)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4622"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/>selectedSegments.clear();</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/>unselectedSegments.clear();</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelectable<sp/>==<sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aff7a688d4d520e8e7f01be098a034a2d" kindref="member">QCP::stWhole</ref>)<sp/></highlight><highlight class="comment">//<sp/>stWhole<sp/>selection<sp/>type<sp/>draws<sp/>the<sp/>entire<sp/>plottable<sp/>with<sp/>selected<sp/>style<sp/>if<sp/>mSelection<sp/>isn&apos;t<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" kindref="member">selected</ref>())</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selectedSegments<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(0,<sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" kindref="member">dataCount</ref>());</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unselectedSegments<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(0,<sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" kindref="member">dataCount</ref>());</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>sel(<ref refid="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f" kindref="member">selection</ref>());</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/>sel.<ref refid="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4" kindref="member">simplify</ref>();</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/>selectedSegments<sp/>=<sp/>sel.<ref refid="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da" kindref="member">dataRanges</ref>();</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/>unselectedSegments<sp/>=<sp/>sel.<ref refid="class_q_c_p_data_selection_1ae8097f4e4ffee7b1b5df27c93eb365db" kindref="member">inverse</ref>(<ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>(0,<sp/><ref refid="class_q_c_p_abstract_plottable1_d_1ab5dd99e4f1621e7dbd63438e0b02984e" kindref="member">dataCount</ref>())).<ref refid="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da" kindref="member">dataRanges</ref>();</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="4651" refid="class_q_c_p_abstract_plottable1_d_1a7adc6c3cccebb5341f11e0c2b7d54206" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a7adc6c3cccebb5341f11e0c2b7d54206" kindref="member">QCPAbstractPlottable1D&lt;DataType&gt;::drawPolyline</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>&amp;lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4652"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>drawing<sp/>lines<sp/>in<sp/>plot<sp/>(instead<sp/>of<sp/>PDF),<sp/>reduce<sp/>1px<sp/>lines<sp/>to<sp/>cosmetic,<sp/>because<sp/>at<sp/>least<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Qt6<sp/>drawing<sp/>of<sp/>&quot;1px&quot;<sp/>width<sp/>lines<sp/>is<sp/>much<sp/>slower<sp/>even<sp/>though<sp/>it<sp/>has<sp/>same<sp/>appearance<sp/>apart<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>High-DPI.<sp/>In<sp/>High-DPI<sp/>cases<sp/>people<sp/>must<sp/>set<sp/>a<sp/>pen<sp/>width<sp/>slightly<sp/>larger<sp/>than<sp/>1.0<sp/>to<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>DPI<sp/>scaling<sp/>of<sp/>width,<sp/>but<sp/>of<sp/>course<sp/>with<sp/>performance<sp/>penalty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!painter-&gt;modes().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">QCPPainter::pmVectorized</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qFuzzyCompare(painter-&gt;pen().widthF(),<sp/>1.0))</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>newPen<sp/>=<sp/>painter-&gt;pen();</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/>newPen.setWidth(0);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(newPen);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>drawing<sp/>solid<sp/>line<sp/>and<sp/>not<sp/>in<sp/>PDF,<sp/>use<sp/>much<sp/>faster<sp/>line<sp/>drawing<sp/>instead<sp/>of<sp/>polyline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mParentPlot-&gt;plottingHints().testFlag(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" kindref="member">QCP::phFastPolylines</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;pen().style()<sp/>==<sp/>Qt::SolidLine<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!painter-&gt;modes().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">QCPPainter::pmVectorized</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!painter-&gt;modes().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>))</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lastIsNan<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDataSize<sp/>=<sp/>lineData.size();</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize<sp/>&amp;&amp;<sp/>(qIsNaN(lineData.at(i).y())<sp/>||<sp/>qIsNaN(lineData.at(i).x())))<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>first<sp/>point<sp/>is<sp/>not<sp/>NaN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;<sp/></highlight><highlight class="comment">//<sp/>because<sp/>drawing<sp/>works<sp/>in<sp/>1<sp/>point<sp/>retrospect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize)</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(lineData.at(i).y())<sp/>&amp;&amp;<sp/>!qIsNaN(lineData.at(i).x()))<sp/></highlight><highlight class="comment">//<sp/>NaNs<sp/>create<sp/>a<sp/>gap<sp/>in<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lastIsNan)</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(lineData.at(i-1),<sp/>lineData.at(i));</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastIsNan<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastIsNan<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDataSize<sp/>=<sp/>lineData.size();</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize)</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qIsNaN(lineData.at(i).y())<sp/>||<sp/>qIsNaN(lineData.at(i).x())<sp/>||<sp/>qIsInf(lineData.at(i).y()))<sp/></highlight><highlight class="comment">//<sp/>NaNs<sp/>create<sp/>a<sp/>gap<sp/>in<sp/>the<sp/>line.<sp/>Also<sp/>filter<sp/>Infs<sp/>which<sp/>make<sp/>drawPolyline<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData.constData()+segmentStart,<sp/>i-segmentStart);<sp/></highlight><highlight class="comment">//<sp/>i,<sp/>because<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>include<sp/>the<sp/>current<sp/>NaN<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentStart<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>last<sp/>segment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData.constData()+segmentStart,<sp/>lineDataSize-segmentStart);</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"></highlight></codeline>
<codeline lineno="4708"><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottable1d.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4710"><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/colorgradient.h&apos;<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7262<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal"></highlight></codeline>
<codeline lineno="4715" refid="class_q_c_p_color_gradient" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_color_gradient_1a96bcc490ff9dc32b22941ce00800bce0" kindref="member">QCPColorGradient</ref></highlight></codeline>
<codeline lineno="4716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4724" refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1" kindref="member">ColorInterpolation</ref><sp/>{<sp/><ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref><sp/><sp/></highlight></codeline>
<codeline lineno="4725" refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref><sp/></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>Q_ENUMS(ColorInterpolation)</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4734" refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7e" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7e" kindref="member">NanHandling</ref><sp/>{<sp/><ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea997c2713f8ffe470834e6ccdb45576f8" kindref="member">nhNone</ref><sp/></highlight></codeline>
<codeline lineno="4735" refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea8a0f1857151baf1aab0f1bc5c8a2b73f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea8a0f1857151baf1aab0f1bc5c8a2b73f" kindref="member">nhLowestColor</ref><sp/><sp/></highlight></codeline>
<codeline lineno="4736" refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea1f1fec8678f690bdb2a437661beba24e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea1f1fec8678f690bdb2a437661beba24e" kindref="member">nhHighestColor</ref><sp/></highlight></codeline>
<codeline lineno="4737" refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea6abad803991346258fe0270ba24c2172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7ea6abad803991346258fe0270ba24c2172" kindref="member">nhTransparent</ref><sp/></highlight></codeline>
<codeline lineno="4738" refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7eab2eff641b22417f165f4c1f5973aaf9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7eab2eff641b22417f165f4c1f5973aaf9b" kindref="member">nhNanColor</ref><sp/></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/>Q_ENUMS(NanHandling)</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4746" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072add11ae369a86f3b1b6205ec72e5021fb" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072" kindref="member">GradientPreset</ref><sp/>{<sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072add11ae369a86f3b1b6205ec72e5021fb" kindref="member">gpGrayscale</ref><sp/><sp/></highlight></codeline>
<codeline lineno="4747" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a4f42e534cf6cff5a29a5388094d099b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a4f42e534cf6cff5a29a5388094d099b5" kindref="member">gpHot</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4748" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072aec8c001f62c0d5cb853db5fd85309557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072aec8c001f62c0d5cb853db5fd85309557" kindref="member">gpCold</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4749" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a1bb89351b6def7d220973443fe059c62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a1bb89351b6def7d220973443fe059c62" kindref="member">gpNight</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4750" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a9e72663bf6b94b65945f7843f24e0721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a9e72663bf6b94b65945f7843f24e0721" kindref="member">gpCandy</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4751" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a382f0b07cec1a59d8a533438aea815d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a382f0b07cec1a59d8a533438aea815d2" kindref="member">gpGeography</ref><sp/></highlight></codeline>
<codeline lineno="4752" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a4297f4f9e212a819cd65e8e34567182b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a4297f4f9e212a819cd65e8e34567182b" kindref="member">gpIon</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4753" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072af1676b129f9f458ace453f280c731cf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072af1676b129f9f458ace453f280c731cf7" kindref="member">gpThermal</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4754" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072ab7414ce4e36dc3e82e0132a7f0f41b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072ab7414ce4e36dc3e82e0132a7f0f41b52" kindref="member">gpPolar</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4755" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072ad63adc100ef46f6b4a8a6deacec4642f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072ad63adc100ef46f6b4a8a6deacec4642f" kindref="member">gpSpectrum</ref><sp/><sp/></highlight></codeline>
<codeline lineno="4756" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a5f8a9e67b64c17ddfe4f069fe2b9fb02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a5f8a9e67b64c17ddfe4f069fe2b9fb02" kindref="member">gpJet</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4757" refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a30efe58407acfb67939032f70213a130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a30efe58407acfb67939032f70213a130" kindref="member">gpHues</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/>Q_ENUMS(GradientPreset)</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>();</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>(GradientPreset<sp/>preset);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levelCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLevelCount;<sp/>}</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/>QMap&lt;double,<sp/>QColor&gt;<sp/>colorStops()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColorStops;<sp/>}</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/>ColorInterpolation<sp/>colorInterpolation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColorInterpolation;<sp/>}</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/>NanHandling<sp/>nanHandling()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNanHandling;<sp/>}</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/>QColor<sp/>nanColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNanColor;<sp/>}</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>periodic()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPeriodic;<sp/>}</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLevelCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColorStops(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;double,<sp/>QColor&gt;<sp/>&amp;colorStops);</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColorStopAt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColorInterpolation(ColorInterpolation<sp/>interpolation);</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNanHandling(NanHandling<sp/>handling);</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNanColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPeriodic(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>colorize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range,<sp/>QRgb<sp/>*scanLine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndexFactor=1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logarithmic=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>colorize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alpha,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range,<sp/>QRgb<sp/>*scanLine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndexFactor=1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logarithmic=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/>QRgb<sp/>color(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logarithmic=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadPreset(GradientPreset<sp/>preset);</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearColorStops();</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/>QCPColorGradient<sp/>inverted()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4791"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLevelCount;</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/>QMap&lt;double,<sp/>QColor&gt;<sp/>mColorStops;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/>ColorInterpolation<sp/>mColorInterpolation;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/>NanHandling<sp/>mNanHandling;</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/>QColor<sp/>mNanColor;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mPeriodic;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/>QVector&lt;QRgb&gt;<sp/>mColorBuffer;<sp/></highlight><highlight class="comment">//<sp/>have<sp/>colors<sp/>premultiplied<sp/>with<sp/>alpha<sp/>(for<sp/>usage<sp/>with<sp/>QImage::Format_ARGB32_Premultiplied)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mColorBufferInvalidated;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stopsUseAlpha()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateColorBuffer();</highlight></codeline>
<codeline lineno="4807"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4808"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1" kindref="member">QCPColorGradient::ColorInterpolation</ref>)</highlight></codeline>
<codeline lineno="4809"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_color_gradient_1afd38ab8d2cceef9cd98eef88408ccb7e" kindref="member">QCPColorGradient::NanHandling</ref>)</highlight></codeline>
<codeline lineno="4810"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072" kindref="member">QCPColorGradient::GradientPreset</ref>)</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"></highlight></codeline>
<codeline lineno="4812"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/colorgradient.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4813"><highlight class="normal"></highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/selectiondecorator-bracket.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4458<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"></highlight></codeline>
<codeline lineno="4818" refid="class_q_c_p_selection_decorator_bracket" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_selection_decorator_bracket_1ad2cfbff98cc055311810ba357f6eef1b" kindref="member">QCPSelectionDecoratorBracket</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" kindref="member">QCPSelectionDecorator</ref></highlight></codeline>
<codeline lineno="4819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4829" refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336e" kindref="member">BracketStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336eaa10a8d25d409b09256a13220a4d74f81" kindref="member">bsSquareBracket</ref><sp/></highlight></codeline>
<codeline lineno="4830" refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336eafa8ad19b1822c9c03fbe5e9ff8eeeea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336eafa8ad19b1822c9c03fbe5e9ff8eeeea2" kindref="member">bsHalfEllipse</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4831" refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336ea7cab0f2f406e293094a7a1e4903f6e8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336ea7cab0f2f406e293094a7a1e4903f6e8c" kindref="member">bsEllipse</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4832" refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336ea86eb6ae27e6296576fdc46d13c840530" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336ea86eb6ae27e6296576fdc46d13c840530" kindref="member">bsPlus</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4833" refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336ea5a627cacdaa30ce434371d6a034b991d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336ea5a627cacdaa30ce434371d6a034b991d" kindref="member">bsUserStyle</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/>Q_ENUMS(BracketStyle)</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_selection_decorator_bracket" kindref="compound">QCPSelectionDecoratorBracket</ref>();</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_selection_decorator_bracket" kindref="compound">~QCPSelectionDecoratorBracket</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/>QPen<sp/>bracketPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBracketPen;<sp/>}</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/>QBrush<sp/>bracketBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBracketBrush;<sp/>}</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bracketWidth()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBracketWidth;<sp/>}</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bracketHeight()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBracketHeight;<sp/>}</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/>BracketStyle<sp/>bracketStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBracketStyle;<sp/>}</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tangentToData()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTangentToData;<sp/>}</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tangentAverage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTangentAverage;<sp/>}</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBracketPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBracketBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBracketWidth(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBracketHeight(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBracketStyle(BracketStyle<sp/>style);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTangentToData(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTangentAverage(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointCount);</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawBracket(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawDecoration(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>selection)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/>QPen<sp/>mBracketPen;</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBracketBrush;</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBracketWidth;</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBracketHeight;</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/>BracketStyle<sp/>mBracketStyle;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTangentToData;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mTangentAverage;</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTangentAngle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref><sp/>*interface1d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/>QPointF<sp/>getPixelCoordinates(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref><sp/>*interface1d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndex)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4878"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4879"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_selection_decorator_bracket_1aa6d18517ec0553575bbef0de4252336e" kindref="member">QCPSelectionDecoratorBracket::BracketStyle</ref>)</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/selectiondecorator-bracket.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"></highlight></codeline>
<codeline lineno="4883"><highlight class="normal"></highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/layoutelements/layoutelement-axisrect.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7529<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight></codeline>
<codeline lineno="4887" refid="class_q_c_p_axis_rect" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" kindref="member">QCPAxisRect</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" kindref="member">QCPLayoutElement</ref></highlight></codeline>
<codeline lineno="4888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPixmap<sp/>background<sp/>READ<sp/>background<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">setBackground</ref>)</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backgroundScaled<sp/>READ<sp/>backgroundScaled<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_rect_1ae6d36c3e0e968ffb991170a018e7b503" kindref="member">setBackgroundScaled</ref>)</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::AspectRatioMode<sp/>backgroundScaledMode<sp/>READ<sp/>backgroundScaledMode<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_rect_1a5ef77ea829c9de7ba248e473f48f7305" kindref="member">setBackgroundScaledMode</ref>)</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::Orientations<sp/>rangeDrag<sp/>READ<sp/>rangeDrag<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_rect_1ae6aef2f7211ba6097c925dcd26008418" kindref="member">setRangeDrag</ref>)</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::Orientations<sp/>rangeZoom<sp/>READ<sp/>rangeZoom<sp/>WRITE<sp/><ref refid="class_q_c_p_axis_rect_1a7960a9d222f1c31d558b064b60f86a31" kindref="member">setRangeZoom</ref>)</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" kindref="member">QCPAxisRect</ref>(QCustomPlot<sp/>*parentPlot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setupDefaultAxes=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" kindref="member">~QCPAxisRect</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/>QPixmap<sp/>background()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundPixmap;<sp/>}</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/>QBrush<sp/>backgroundBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundBrush;<sp/>}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backgroundScaled()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundScaled;<sp/>}</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>backgroundScaledMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundScaledMode;<sp/>}</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/>Qt::Orientations<sp/>rangeDrag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeDrag;<sp/>}</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/>Qt::Orientations<sp/>rangeZoom()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeZoom;<sp/>}</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a6d7c22cfc54fac7a3d6ef80b133a8574" kindref="member">rangeDragAxis</ref>(Qt::Orientation<sp/>orientation);</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a679c63f2b8daccfe6ec5110dce3dd3b6" kindref="member">rangeZoomAxis</ref>(Qt::Orientation<sp/>orientation);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1aae5f99a044ca911685a306f01b7ff941" kindref="member">rangeDragAxes</ref>(Qt::Orientation<sp/>orientation);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a86aac0f435f209d60dacd22cda10c104" kindref="member">rangeZoomAxes</ref>(Qt::Orientation<sp/>orientation);</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae4e6c4d143aacc88d2d3c56f117c2fe1" kindref="member">rangeZoomFactor</ref>(Qt::Orientation<sp/>orientation);</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm);</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>mode=Qt::KeepAspectRatioByExpanding);</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae6d36c3e0e968ffb991170a018e7b503" kindref="member">setBackgroundScaled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled);</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a5ef77ea829c9de7ba248e473f48f7305" kindref="member">setBackgroundScaledMode</ref>(Qt::AspectRatioMode<sp/>mode);</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae6aef2f7211ba6097c925dcd26008418" kindref="member">setRangeDrag</ref>(Qt::Orientations<sp/>orientations);</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a7960a9d222f1c31d558b064b60f86a31" kindref="member">setRangeZoom</ref>(Qt::Orientations<sp/>orientations);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a648cce336bd99daac4a5ca3e5743775d" kindref="member">setRangeDragAxes</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*horizontal,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*vertical);</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a648cce336bd99daac4a5ca3e5743775d" kindref="member">setRangeDragAxes</ref>(QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a8db4722cb93e9c4a6f0d91150c200867" kindref="member">axes</ref>);</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a648cce336bd99daac4a5ca3e5743775d" kindref="member">setRangeDragAxes</ref>(QList&lt;QCPAxis*&gt;<sp/>horizontal,<sp/>QList&lt;QCPAxis*&gt;<sp/>vertical);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a9442cca2aa358405f39a64d51eca13d2" kindref="member">setRangeZoomAxes</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*horizontal,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*vertical);</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a9442cca2aa358405f39a64d51eca13d2" kindref="member">setRangeZoomAxes</ref>(QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a8db4722cb93e9c4a6f0d91150c200867" kindref="member">axes</ref>);</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a9442cca2aa358405f39a64d51eca13d2" kindref="member">setRangeZoomAxes</ref>(QList&lt;QCPAxis*&gt;<sp/>horizontal,<sp/>QList&lt;QCPAxis*&gt;<sp/>vertical);</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a895d7ac745ea614e04056244b3c138ac" kindref="member">setRangeZoomFactor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>horizontalFactor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verticalFactor);</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a895d7ac745ea614e04056244b3c138ac" kindref="member">setRangeZoomFactor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a85b321acec0f694d8b5fdeafdbff3133" kindref="member">axisCount</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a583ae4f6d78b601b732183f6cabecbe1" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index=0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a8db4722cb93e9c4a6f0d91150c200867" kindref="member">axes</ref>(QCPAxis::AxisTypes<sp/>types)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a8db4722cb93e9c4a6f0d91150c200867" kindref="member">axes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a2a845ee60eac7a8d5e71718c5e77c274" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a583ae4f6d78b601b732183f6cabecbe1" kindref="member">axis</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a792e1f3d9cb1591fca135bb0de9b81fc" kindref="member">addAxes</ref>(QCPAxis::AxisTypes<sp/>types);</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a03c39cd9704f0d36fb6cf980cdddcbaa" kindref="member">removeAxis</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a583ae4f6d78b601b732183f6cabecbe1" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="4939" refid="class_q_c_p_axis_rect_1a949f803466619924c7018df4b511ae10" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a949f803466619924c7018df4b511ae10" kindref="member">insetLayout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInsetLayout;<sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>zoom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;pixelRect);</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>zoom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;pixelRect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPAxis*&gt;<sp/>&amp;affectedAxes);</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupFullAxesBox(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connectRanges=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>plottables()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>graphs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>items()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read-only<sp/>interface<sp/>imitating<sp/>a<sp/>QRect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4949" refid="class_q_c_p_axis_rect_1afb4a3de02046b20b9310bdb8fca781c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1afb4a3de02046b20b9310bdb8fca781c3" kindref="member">left</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.left();<sp/>}</highlight></codeline>
<codeline lineno="4950" refid="class_q_c_p_axis_rect_1a3f819d4a1b2193723d1fdafc573eea10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a3f819d4a1b2193723d1fdafc573eea10" kindref="member">right</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.right();<sp/>}</highlight></codeline>
<codeline lineno="4951" refid="class_q_c_p_axis_rect_1a45dbad181cbb9f09d068dbb76c817c95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a45dbad181cbb9f09d068dbb76c817c95" kindref="member">top</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.top();<sp/>}</highlight></codeline>
<codeline lineno="4952" refid="class_q_c_p_axis_rect_1acefdf1abaa8a8ab681e906cc2be9581e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1acefdf1abaa8a8ab681e906cc2be9581e" kindref="member">bottom</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.bottom();<sp/>}</highlight></codeline>
<codeline lineno="4953" refid="class_q_c_p_axis_rect_1a204645398a4f9d0b0189385c7c2cfb91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a204645398a4f9d0b0189385c7c2cfb91" kindref="member">width</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.width();<sp/>}</highlight></codeline>
<codeline lineno="4954" refid="class_q_c_p_axis_rect_1acc4377809e79d9a089ab790f39429b0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1acc4377809e79d9a089ab790f39429b0d" kindref="member">height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.height();<sp/>}</highlight></codeline>
<codeline lineno="4955" refid="class_q_c_p_axis_rect_1a7a8289346eb612f422c704f8b75cf479" refkind="member"><highlight class="normal"><sp/><sp/>QSize<sp/><ref refid="class_q_c_p_axis_rect_1a7a8289346eb612f422c704f8b75cf479" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.size();<sp/>}</highlight></codeline>
<codeline lineno="4956" refid="class_q_c_p_axis_rect_1a5a847b3ddeca3abec38d3838fefb0dbd" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_axis_rect_1a5a847b3ddeca3abec38d3838fefb0dbd" kindref="member">topLeft</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.topLeft();<sp/>}</highlight></codeline>
<codeline lineno="4957" refid="class_q_c_p_axis_rect_1a7aa221967549ba71b98c465bf8234758" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_axis_rect_1a7aa221967549ba71b98c465bf8234758" kindref="member">topRight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.topRight();<sp/>}</highlight></codeline>
<codeline lineno="4958" refid="class_q_c_p_axis_rect_1ab15d4311d6535ccd7af504dc0e2b98c6" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_axis_rect_1ab15d4311d6535ccd7af504dc0e2b98c6" kindref="member">bottomLeft</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.bottomLeft();<sp/>}</highlight></codeline>
<codeline lineno="4959" refid="class_q_c_p_axis_rect_1a36dac884ec8fa3a3a2f3842ca7b7d32d" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_axis_rect_1a36dac884ec8fa3a3a2f3842ca7b7d32d" kindref="member">bottomRight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.bottomRight();<sp/>}</highlight></codeline>
<codeline lineno="4960" refid="class_q_c_p_axis_rect_1ade3aef874bafcec6dd16174fba44c0b1" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_axis_rect_1ade3aef874bafcec6dd16174fba44c0b1" kindref="member">center</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.center();<sp/>}</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(UpdatePhase<sp/>phase)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>elements(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"></highlight></codeline>
<codeline lineno="4966"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBackgroundBrush;</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mBackgroundPixmap;</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mScaledBackgroundPixmap;</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mBackgroundScaled;</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>mBackgroundScaledMode;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref><sp/>*mInsetLayout;</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/>Qt::Orientations<sp/>mRangeDrag,<sp/>mRangeZoom;</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/>QList&lt;QPointer&lt;QCPAxis&gt;<sp/>&gt;<sp/>mRangeDragHorzAxis,<sp/>mRangeDragVertAxis;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/>QList&lt;QPointer&lt;QCPAxis&gt;<sp/>&gt;<sp/>mRangeZoomHorzAxis,<sp/>mRangeZoomVertAxis;</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRangeZoomFactorHorz,<sp/>mRangeZoomFactorVert;</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/>QList&lt;QCPRange&gt;<sp/>mDragStartHorzRange,<sp/>mDragStartVertRange;</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>mAADragBackup,<sp/>mNotAADragBackup;</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDragging;</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/>QHash&lt;QCPAxis::AxisType,<sp/>QList&lt;QCPAxis*&gt;<sp/>&gt;<sp/>mAxes;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>calculateAutoMargin(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layoutChanged()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mousePressEvent(QMouseEvent<sp/>*event,<sp/>const<sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseMoveEvent(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseReleaseEvent(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wheelEvent(QWheelEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawBackground(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAxesOffset(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>::AxisType<sp/>type);</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5000"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>)</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/layoutelements/layoutelement-axisrect.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5008"><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/layoutelements/layoutelement-legend.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>10425<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"></highlight></codeline>
<codeline lineno="5013" refid="class_q_c_p_abstract_legend_item" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" kindref="member">QCPAbstractLegendItem</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" kindref="member">QCPLayoutElement</ref></highlight></codeline>
<codeline lineno="5014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPLegend*<sp/>parentLegend<sp/>READ<sp/>parentLegend)</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>font<sp/>READ<sp/>font<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_legend_item_1a409c53455d8112f71d70c0c43eb10265" kindref="member">setFont</ref>)</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>textColor<sp/>READ<sp/>textColor<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_legend_item_1a6ebace6aaffaedcdab2d74e88acc2d1e" kindref="member">setTextColor</ref>)</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>selectedFont<sp/>READ<sp/>selectedFont<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_legend_item_1a91db5aee48617a9d3206e61376807365" kindref="member">setSelectedFont</ref>)</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>selectedTextColor<sp/>READ<sp/>selectedTextColor<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_legend_item_1a4d01d008ee1a5bfe9905b0397a421936" kindref="member">setSelectedTextColor</ref>)</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable<sp/>READ<sp/>selectable<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_legend_item_1a9913ef48730551b696e7f98a2391c599" kindref="member">setSelectable</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_abstract_legend_item_1a7cb61fdfbaf69c590bacb8f9e7099d9e" kindref="member">selectionChanged</ref>)</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/>READ<sp/>selected<sp/>WRITE<sp/><ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">setSelected</ref><sp/>NOTIFY<sp/>selectableChanged)</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" kindref="member">QCPAbstractLegendItem</ref>(QCPLegend<sp/>*parent);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/>QCPLegend<sp/>*parentLegend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParentLegend;<sp/>}</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/>QFont<sp/>font()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFont;<sp/>}</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/>QColor<sp/>textColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTextColor;<sp/>}</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedFont;<sp/>}</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedTextColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTextColor;<sp/>}</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectable;<sp/>}</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelected;<sp/>}</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a409c53455d8112f71d70c0c43eb10265" kindref="member">setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a6ebace6aaffaedcdab2d74e88acc2d1e" kindref="member">setTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a91db5aee48617a9d3206e61376807365" kindref="member">setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a4d01d008ee1a5bfe9905b0397a421936" kindref="member">setSelectedTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a9913ef48730551b696e7f98a2391c599" kindref="member">setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable);</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a206879d493749c3fb1494850bff40e7e" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5048"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="5049" refid="class_q_c_p_abstract_legend_item_1a7cb61fdfbaf69c590bacb8f9e7099d9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a7cb61fdfbaf69c590bacb8f9e7099d9e" kindref="member">selectionChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectableChanged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5052"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/>QCPLegend<sp/>*mParentLegend;</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/>QFont<sp/>mFont;</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/>QColor<sp/>mTextColor;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/>QFont<sp/>mSelectedFont;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/>QColor<sp/>mSelectedTextColor;</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSelectable,<sp/>mSelected;</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/>virtual<sp/>QRect<sp/>clipRect()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5070"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" kindref="member">QCPAbstractLegendItem</ref>)</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"></highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight></codeline>
<codeline lineno="5077" refid="class_q_c_p_plottable_legend_item" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_plottable_legend_item_1ac1072591fe409d3dabad51b23ee4d6c5" kindref="member">QCPPlottableLegendItem</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" kindref="member">QCPAbstractLegendItem</ref></highlight></codeline>
<codeline lineno="5078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_plottable_legend_item_1ac1072591fe409d3dabad51b23ee4d6c5" kindref="member">QCPPlottableLegendItem</ref>(QCPLegend<sp/>*parent,<sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable);</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPlottable;<sp/>}</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5086"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*mPlottable;</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QSize<sp/><ref refid="class_q_c_p_plottable_legend_item_1a8b543f3ac32b2fe59326e01c1101b3b8" kindref="member">minimumOuterSizeHint</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/>QPen<sp/>getIconBorderPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/>QColor<sp/>getTextColor()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/>QFont<sp/>getFont()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5098"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"></highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight></codeline>
<codeline lineno="5101" refid="class_q_c_p_legend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1ab2a4c1587dc8aed4c41c509c8d8d2a64" kindref="member">QCPLayoutGrid</ref></highlight></codeline>
<codeline lineno="5102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>borderPen<sp/>READ<sp/>borderPen<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a866a9e3f5267de7430a6c7f26a61db9f" kindref="member">setBorderPen</ref>)</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brush<sp/>READ<sp/>brush<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a497bbcd38baa3598c08e2b3f48103f23" kindref="member">setBrush</ref>)</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>font<sp/>READ<sp/>font<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1aa4cda8499e3cb0f3be415edc02984c73" kindref="member">setFont</ref>)</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>textColor<sp/>READ<sp/>textColor<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1ae1eb239ff4a4632fe1b6c3e668d845c6" kindref="member">setTextColor</ref>)</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QSize<sp/>iconSize<sp/>READ<sp/>iconSize<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a8b0740cce488bf7010da6beda6898984" kindref="member">setIconSize</ref>)</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iconTextPadding<sp/>READ<sp/>iconTextPadding<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a62973bd69d5155e8ea3141366e8968f6" kindref="member">setIconTextPadding</ref>)</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>iconBorderPen<sp/>READ<sp/>iconBorderPen<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a2f2c93d18a651f4ff294bb3f026f49b8" kindref="member">setIconBorderPen</ref>)</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/>Q_PROPERTY(SelectableParts<sp/>selectableParts<sp/>READ<sp/>selectableParts<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" kindref="member">selectionChanged</ref>)</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/>Q_PROPERTY(SelectableParts<sp/>selectedParts<sp/>READ<sp/>selectedParts<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref><sp/>NOTIFY<sp/>selectableChanged)</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedBorderPen<sp/>READ<sp/>selectedBorderPen<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" kindref="member">setSelectedBorderPen</ref>)</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedIconBorderPen<sp/>READ<sp/>selectedIconBorderPen<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1ade93aabe9bcccaf9cf46cec22c658027" kindref="member">setSelectedIconBorderPen</ref>)</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>selectedBrush<sp/>READ<sp/>selectedBrush<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" kindref="member">setSelectedBrush</ref>)</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>selectedFont<sp/>READ<sp/>selectedFont<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1ab580a01c3c0a239374ed66c29edf5ad2" kindref="member">setSelectedFont</ref>)</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>selectedTextColor<sp/>READ<sp/>selectedTextColor<sp/>WRITE<sp/><ref refid="class_q_c_p_legend_1a7674dfc7a1f30e1abd1018c0ed45e0bc" kindref="member">setSelectedTextColor</ref>)</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5126" refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" kindref="member">SelectablePart</ref><sp/>{<sp/><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a378201c07d500af7126e3ec91652eed7" kindref="member">spNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x000<sp/></highlight></codeline>
<codeline lineno="5127" refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref><sp/><sp/>=<sp/>0x001<sp/></highlight></codeline>
<codeline lineno="5128" refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x002<sp/></highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/>Q_ENUMS(SelectablePart)</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/>Q_FLAGS(SelectableParts)</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(SelectableParts,<sp/>SelectablePart)</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>();</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend" kindref="compound">~QCPLegend</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/>QPen<sp/>borderPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBorderPen;<sp/>}</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/>QFont<sp/>font()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFont;<sp/>}</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/>QColor<sp/>textColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTextColor;<sp/>}</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/>QSize<sp/>iconSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIconSize;<sp/>}</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iconTextPadding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIconTextPadding;<sp/>}</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/>QPen<sp/>iconBorderPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIconBorderPen;<sp/>}</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectableParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectableParts;<sp/>}</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectedParts()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedBorderPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBorderPen;<sp/>}</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedIconBorderPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedIconBorderPen;<sp/>}</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/>QBrush<sp/>selectedBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBrush;<sp/>}</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedFont;<sp/>}</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedTextColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTextColor;<sp/>}</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBorderPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTextColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setIconSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size);</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setIconSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setIconTextPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setIconBorderPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectableParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectableParts<sp/>&amp;selectableParts);</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectableParts<sp/>&amp;selectedParts);</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedBorderPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedIconBorderPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTextColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/>QCPAbstractLegendItem<sp/>*item(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const;</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/>QCPPlottableLegendItem<sp/>*itemWithPlottable(const<sp/>QCPAbstractPlottable<sp/>*plottable)<sp/>const;</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemCount()<sp/>const;</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasItem(QCPAbstractLegendItem<sp/>*item)<sp/>const;</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasItemWithPlottable(const<sp/>QCPAbstractPlottable<sp/>*plottable)<sp/>const;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addItem(QCPAbstractLegendItem<sp/>*item);</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeItem(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeItem(QCPAbstractLegendItem<sp/>*item);</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearItems();</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractLegendItem*&gt;<sp/>selectedItems()<sp/>const;</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5185"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="5186" refid="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend</ref>::SelectableParts<sp/>parts);</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectableChanged(<ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend</ref>::SelectableParts<sp/>parts);</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5189"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/>QPen<sp/>mBorderPen,<sp/>mIconBorderPen;</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/>QFont<sp/>mFont;</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/>QColor<sp/>mTextColor;</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/>QSize<sp/>mIconSize;</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mIconTextPadding;</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>mSelectedParts,<sp/>mSelectableParts;</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/>QPen<sp/>mSelectedBorderPen,<sp/>mSelectedIconBorderPen;</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/>QBrush<sp/>mSelectedBrush;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/>QFont<sp/>mSelectedFont;</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>QColor<sp/>mSelectedTextColor;</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parentPlotInitialized(QCustomPlot<sp/>*parentPlot)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::Interaction<sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/>QPen<sp/>getBorderPen()<sp/>const;</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/>QBrush<sp/>getBrush()<sp/>const;</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5216"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend</ref>)</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPAbstractLegendItem;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5222"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(<ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend</ref>::SelectableParts)</highlight></codeline>
<codeline lineno="5223"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend</ref>::<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" kindref="member">SelectablePart</ref>)</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/layoutelements/layoutelement-legend.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"></highlight></codeline>
<codeline lineno="5228"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/layoutelements/layoutelement-textelement.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>5359<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"></highlight></codeline>
<codeline lineno="5231" refid="class_q_c_p_text_element" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" kindref="member">QCPLayoutElement</ref></highlight></codeline>
<codeline lineno="5232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>text<sp/>READ<sp/>text<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1ac44b81e69e719b879eb2feecb33557e2" kindref="member">setText</ref>)</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>font<sp/>READ<sp/>font<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" kindref="member">setFont</ref>)</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>textColor<sp/>READ<sp/>textColor<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" kindref="member">setTextColor</ref>)</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>selectedFont<sp/>READ<sp/>selectedFont<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1a0a2397a3c4ede519e16ab3e991904065" kindref="member">setSelectedFont</ref>)</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>selectedTextColor<sp/>READ<sp/>selectedTextColor<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1abaec200cae70a0eade53583defc0476d" kindref="member">setSelectedTextColor</ref>)</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable<sp/>READ<sp/>selectable<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" kindref="member">setSelectable</ref><sp/>NOTIFY<sp/>selectableChanged)</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/>READ<sp/>selected<sp/>WRITE<sp/><ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_text_element_1a49f45b87ee9c1fe866c2cdd12af17a9a" kindref="member">selectionChanged</ref>)</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref>(QCustomPlot<sp/>*parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text);</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref>(QCustomPlot<sp/>*parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointSize);</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref>(QCustomPlot<sp/>*parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fontFamily,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointSize);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref>(QCustomPlot<sp/>*parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/>QString<sp/>text()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mText;<sp/>}</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textFlags()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTextFlags;<sp/>}</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/>QFont<sp/>font()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFont;<sp/>}</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/>QColor<sp/>textColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTextColor;<sp/>}</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedFont;<sp/>}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedTextColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTextColor;<sp/>}</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectable;<sp/>}</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelected;<sp/>}</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1ac44b81e69e719b879eb2feecb33557e2" kindref="member">setText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text);</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1ab908f437f552020888a3ad8cf8242605" kindref="member">setTextFlags</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a09b3241769528fa87cb4bf35c97defad" kindref="member">setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a4f3b8361c3ffb3f84346954929ce93ba" kindref="member">setTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a0a2397a3c4ede519e16ab3e991904065" kindref="member">setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1abaec200cae70a0eade53583defc0476d" kindref="member">setSelectedTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a3c5f9b1897a036b16495ed3fb8371c55" kindref="member">setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1aba5521f9fb22a5f3d2f09ab37d4a1751" kindref="member">setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a29e95d6cfd9e28772ce6a8890a2c8889" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1ad7b2c98355e3d2f912574b74fcee0574" kindref="member">mousePressEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1acfcbaf9b1da18745e72726aafb39c855" kindref="member">mouseReleaseEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a2272ff775ab385f612e9fd39773de7c0" kindref="member">mouseDoubleClickEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5276"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="5277" refid="class_q_c_p_text_element_1a49f45b87ee9c1fe866c2cdd12af17a9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a49f45b87ee9c1fe866c2cdd12af17a9a" kindref="member">selectionChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectableChanged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable);</highlight></codeline>
<codeline lineno="5279" refid="class_q_c_p_text_element_1ad2246a0e701c0655623f048737298334" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1ad2246a0e701c0655623f048737298334" kindref="member">clicked</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="5280" refid="class_q_c_p_text_element_1a9c6fd27ae8a7c3a02df7a6bbd3509e40" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_text_element_1a9c6fd27ae8a7c3a02df7a6bbd3509e40" kindref="member">doubleClicked</ref>(QMouseEvent<sp/>*event);</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5282"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/>QString<sp/>mText;</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mTextFlags;</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/>QFont<sp/>mFont;</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/>QColor<sp/>mTextColor;</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/>QFont<sp/>mSelectedFont;</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/>QColor<sp/>mSelectedTextColor;</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/>QRect<sp/>mTextBoundingRect;</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSelectable,<sp/>mSelected;</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QSize<sp/><ref refid="class_q_c_p_text_element_1a47b8541f55ff520c557e0f27461f109e" kindref="member">minimumOuterSizeHint</ref>()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/>virtual<sp/>QSize<sp/><ref refid="class_q_c_p_text_element_1ae82475b50c10a5b3314d996d50ae536b" kindref="member">maximumOuterSizeHint</ref>()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/>QFont<sp/>mainFont()<sp/>const;</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/>QColor<sp/>mainTextColor()<sp/>const;</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5306"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_text_element_1ae1de18bdb1e7ba959f132018dd9a0258" kindref="member">QCPTextElement</ref>)</highlight></codeline>
<codeline lineno="5308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"></highlight></codeline>
<codeline lineno="5311"><highlight class="normal"></highlight></codeline>
<codeline lineno="5312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/layoutelements/layoutelement-textelement.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5313"><highlight class="normal"></highlight></codeline>
<codeline lineno="5314"><highlight class="normal"></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/layoutelements/layoutelement-colorscale.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>5939<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5317"><highlight class="normal"></highlight></codeline>
<codeline lineno="5318"><highlight class="normal"></highlight></codeline>
<codeline lineno="5319" refid="class_q_c_p_color_scale_axis_rect_private" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1ad3b242f75dd2b33581364a4e668a80db" kindref="member">QCPColorScaleAxisRectPrivate</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" kindref="member">QCPAxisRect</ref></highlight></codeline>
<codeline lineno="5320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1ad3b242f75dd2b33581364a4e668a80db" kindref="member">QCPColorScaleAxisRectPrivate</ref>(QCPColorScale<sp/>*parentColorScale);</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/>QCPColorScale<sp/>*mParentColorScale;</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/>QImage<sp/>mGradientImage;</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mGradientImageInvalidated;</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>re-using<sp/>some<sp/>methods<sp/>of<sp/>QCPAxisRect<sp/>to<sp/>make<sp/>them<sp/>available<sp/>to<sp/>friend<sp/>class<sp/>QCPColorScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">QCPAxisRect::calculateAutoMargin;</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1aa9a7c807eaa4666870ac94aa6abc4dde" kindref="member">QCPAxisRect::mousePressEvent</ref>;</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1a9cd27ad8c5cfb49aefd9dbb30def4beb" kindref="member">QCPAxisRect::mouseMoveEvent</ref>;</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1a6c89b988d3a0b93c0878f0ebdb5037f4" kindref="member">QCPAxisRect::mouseReleaseEvent</ref>;</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1a93eeaa0c127d6d6fe8171b2455080262" kindref="member">QCPAxisRect::wheelEvent</ref>;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1add049d464b9ef2ccdc638adc4ccb4aca" kindref="member">QCPAxisRect::update</ref>;</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateGradientImage();</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>axisSelectionChanged(QCPAxis::SelectableParts<sp/>selectedParts);</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>axisSelectableChanged(QCPAxis::SelectableParts<sp/>selectableParts);</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPColorScale;</highlight></codeline>
<codeline lineno="5340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal"></highlight></codeline>
<codeline lineno="5343" refid="class_q_c_p_color_scale" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_color_scale_1aa8debce1be38b54287c04d4f584394b4" kindref="member">QCPColorScale</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" kindref="member">QCPLayoutElement</ref></highlight></codeline>
<codeline lineno="5344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type<sp/>READ<sp/>type<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1a1bf9bdb291927c422dd66b404b206f1f" kindref="member">setType</ref>)</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>dataRange<sp/>READ<sp/>dataRange<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" kindref="member">setDataRange</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_color_scale_1a685717490a6aa83c5e711a4f34e837f9" kindref="member">dataRangeChanged</ref>)</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>dataScaleType<sp/>READ<sp/>dataScaleType<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1aeb6107d67dd7325145b2498abae67fc3" kindref="member">setDataScaleType</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_color_scale_1a61558b962f7791ff2f15a565dcf60181" kindref="member">dataScaleTypeChanged</ref>)</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>gradient<sp/>READ<sp/>gradient<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1a1f29583bb6f1e7f473b62fb712be3940" kindref="member">setGradient</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_color_scale_1a5e5f8c5626242c8f7308bfab74d3d989" kindref="member">gradientChanged</ref>)</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>label<sp/>READ<sp/>label<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1aee124ae8396320cacf8276e9a0fbb8ce" kindref="member">setLabel</ref>)</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barWidth<sp/>READ<sp/>barWidth<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1ab9dcc0c1cd583477496209b1413bcb99" kindref="member">setBarWidth</ref>)</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeDrag<sp/>READ<sp/>rangeDrag<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1a21c51a55e4fd581b6feadca9ee5b38d5" kindref="member">setRangeDrag</ref>)</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeZoom<sp/>READ<sp/>rangeZoom<sp/>WRITE<sp/><ref refid="class_q_c_p_color_scale_1a96bd60fb6317ad6821841b539c93eeeb" kindref="member">setRangeZoom</ref>)</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1aa8debce1be38b54287c04d4f584394b4" kindref="member">QCPColorScale</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1aa8debce1be38b54287c04d4f584394b4" kindref="member">~QCPColorScale</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5361" refid="class_q_c_p_color_scale_1a39bdbdb3b212602a5a57f9f3ea444190" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_color_scale_1a39bdbdb3b212602a5a57f9f3ea444190" kindref="member">axis</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColorAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mType;<sp/>}</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/>QCPRange<sp/>dataRange()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataRange;<sp/>}</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>dataScaleType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataScaleType;<sp/>}</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/>QCPColorGradient<sp/>gradient()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGradient;<sp/>}</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/>QString<sp/>label()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barWidth<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBarWidth;<sp/>}</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeDrag()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeZoom()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setType(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type);</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDataRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;dataRange);</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDataScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>scaleType);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setGradient(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPColorGradient<sp/>&amp;gradient);</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBarWidth(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeDrag(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeZoom(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>QList&lt;QCPColorMap*&gt;<sp/>colorMaps()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescaleDataRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisibleMaps);</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(UpdatePhase<sp/>phase)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5388"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="5389" refid="class_q_c_p_color_scale_1a685717490a6aa83c5e711a4f34e837f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a685717490a6aa83c5e711a4f34e837f9" kindref="member">dataRangeChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;newRange);</highlight></codeline>
<codeline lineno="5390" refid="class_q_c_p_color_scale_1a61558b962f7791ff2f15a565dcf60181" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a61558b962f7791ff2f15a565dcf60181" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>scaleType);</highlight></codeline>
<codeline lineno="5391" refid="class_q_c_p_color_scale_1a5e5f8c5626242c8f7308bfab74d3d989" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a5e5f8c5626242c8f7308bfab74d3d989" kindref="member">gradientChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;newGradient);</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"></highlight></codeline>
<codeline lineno="5393"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>mType;</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mDataRange;</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>mDataScaleType;</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>mGradient;</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBarWidth;</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPColorScaleAxisRectPrivate&gt;<sp/>mAxisRect;</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPAxis&gt;<sp/>mColorAxis;</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a91f633b97ffcd57fdf8cd814974c20e6" kindref="member">mousePressEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a3b2bd79725aefaf2630fc76e90939442" kindref="member">mouseMoveEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a6a35dd39ab4e5cb2d7b29ebb4d5b61b0" kindref="member">mouseReleaseEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a63cf19be184f6670c9495ad3a9a1baeb" kindref="member">wheelEvent</ref>(QWheelEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_color_scale_1aa8debce1be38b54287c04d4f584394b4" kindref="member">QCPColorScale</ref>)</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPColorScaleAxisRectPrivate;</highlight></codeline>
<codeline lineno="5417"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"></highlight></codeline>
<codeline lineno="5419"><highlight class="normal"></highlight></codeline>
<codeline lineno="5420"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/layoutelements/layoutelement-colorscale.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight></codeline>
<codeline lineno="5422"><highlight class="normal"></highlight></codeline>
<codeline lineno="5423"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-graph.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5424"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>9316<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5425"><highlight class="normal"></highlight></codeline>
<codeline lineno="5426" refid="class_q_c_p_graph_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_graph_data_1ac43f7499383d2fa2ffb7a4ad43f76c7c" kindref="member">QCPGraphData</ref></highlight></codeline>
<codeline lineno="5427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_data_1ac43f7499383d2fa2ffb7a4ad43f76c7c" kindref="member">QCPGraphData</ref>();</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_data_1ac43f7499383d2fa2ffb7a4ad43f76c7c" kindref="member">QCPGraphData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5432" refid="class_q_c_p_graph_data_1a5e0f37ea101eeec245d8c32a2206b204" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1a5e0f37ea101eeec245d8c32a2206b204" kindref="member">sortKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5433" refid="class_q_c_p_graph_data_1a4646eac7f7a48970ea0fc5153aab0e77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1ac43f7499383d2fa2ffb7a4ad43f76c7c" kindref="member">QCPGraphData</ref><sp/><ref refid="class_q_c_p_graph_data_1a4646eac7f7a48970ea0fc5153aab0e77" kindref="member">fromSortKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1a5e0f37ea101eeec245d8c32a2206b204" kindref="member">sortKey</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1ac43f7499383d2fa2ffb7a4ad43f76c7c" kindref="member">QCPGraphData</ref>(<ref refid="class_q_c_p_graph_data_1a5e0f37ea101eeec245d8c32a2206b204" kindref="member">sortKey</ref>,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="5434" refid="class_q_c_p_graph_data_1a61da5d975de269a23d98ad18bc4f4ab3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1a61da5d975de269a23d98ad18bc4f4ab3" kindref="member">sortKeyIsMainKey</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5436" refid="class_q_c_p_graph_data_1a72fdaf738f679ef93bea3d552ba42d1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1a72fdaf738f679ef93bea3d552ba42d1b" kindref="member">mainKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5437" refid="class_q_c_p_graph_data_1a1b1e440a430a4a83d9a3f6f247510f27" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_data_1a1b1e440a430a4a83d9a3f6f247510f27" kindref="member">mainValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5439" refid="class_q_c_p_graph_data_1a2f8dd30360356f66cc418a170a9f3792" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_graph_data_1a2f8dd30360356f66cc418a170a9f3792" kindref="member">valueRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(value,<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/>value;</highlight></codeline>
<codeline lineno="5442"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5443"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPGraphData,<sp/>Q_PRIMITIVE_TYPE);</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"></highlight></codeline>
<codeline lineno="5445"><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;QCPGraphData&gt;<sp/>QCPGraphDataContainer;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"></highlight></codeline>
<codeline lineno="5457" refid="class_q_c_p_graph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" kindref="member">QCPGraph</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>&lt;QCPGraphData&gt;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref><sp/>lineStyle<sp/>READ<sp/>lineStyle<sp/>WRITE<sp/><ref refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" kindref="member">setLineStyle</ref>)</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>scatterStyle<sp/>READ<sp/>scatterStyle<sp/>WRITE<sp/><ref refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">setScatterStyle</ref>)</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scatterSkip<sp/>READ<sp/>scatterSkip<sp/>WRITE<sp/><ref refid="class_q_c_p_graph_1a17cebd3196f434258abb82ba6dc443f2" kindref="member">setScatterSkip</ref>)</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" kindref="member">QCPGraph</ref>*<sp/>channelFillGraph<sp/>READ<sp/>channelFillGraph<sp/>WRITE<sp/><ref refid="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" kindref="member">setChannelFillGraph</ref>)</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adaptiveSampling<sp/>READ<sp/>adaptiveSampling<sp/>WRITE<sp/><ref refid="class_q_c_p_graph_1ab468cd600160f327836aa0644291e64c" kindref="member">setAdaptiveSampling</ref>)</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5473" refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5475" refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" kindref="member">lsLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5476" refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" kindref="member">lsStepLeft</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5477" refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" kindref="member">lsStepRight</ref><sp/><sp/></highlight></codeline>
<codeline lineno="5478" refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" kindref="member">lsStepCenter</ref><sp/></highlight></codeline>
<codeline lineno="5479" refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" kindref="member">lsImpulse</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/>Q_ENUMS(LineStyle)</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph" kindref="compound">~QCPGraph</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5487" refid="class_q_c_p_graph_1a141aa31a1f19bbd0ce60f55eaeb9ea60" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPGraphDataContainer&gt;<sp/><ref refid="class_q_c_p_graph_1a141aa31a1f19bbd0ce60f55eaeb9ea60" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/>LineStyle<sp/>lineStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineStyle;<sp/>}</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>scatterStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScatterStyle;<sp/>}</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scatterSkip()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScatterSkip;<sp/>}</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/>QCPGraph<sp/>*channelFillGraph()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mChannelFillGraph.data();<sp/>}</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adaptiveSampling()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAdaptiveSampling;<sp/>}</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPGraphDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineStyle(LineStyle<sp/>ls);</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScatterStyle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle<sp/>&amp;style);</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScatterSkip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip);</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setChannelFillGraph(QCPGraph<sp/>*targetGraph);</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAdaptiveSampling(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth,<sp/>const<sp/>QCPRange<sp/>&amp;inKeyRange=QCPRange())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5512"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/>LineStyle<sp/>mLineStyle;</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>mScatterStyle;</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mScatterSkip;</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPGraph&gt;<sp/>mChannelFillGraph;</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAdaptiveSampling;</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(QCPPainter<sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawFill(QCPPainter<sp/>*painter,<sp/>QVector&lt;QPointF&gt;<sp/>*lines)<sp/>const;</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawScatterPlot(QCPPainter<sp/>*painter,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>&amp;scatters,<sp/>const<sp/>QCPScatterStyle<sp/>&amp;style)<sp/>const;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLinePlot(QCPPainter<sp/>*painter,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>&amp;lines)<sp/>const;</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImpulsePlot(QCPPainter<sp/>*painter,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>&amp;lines)<sp/>const;</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getOptimizedLineData(QVector&lt;QCPGraphData&gt;<sp/>*lineData,<sp/>const<sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;begin,<sp/>const<sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;end)<sp/>const;</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getOptimizedScatterData(QVector&lt;QCPGraphData&gt;<sp/>*scatterData,<sp/>QCPGraphDataContainer::const_iterator<sp/>begin,<sp/>QCPGraphDataContainer::const_iterator<sp/>end)<sp/>const;</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVisibleDataBounds(QCPGraphDataContainer::const_iterator<sp/>&amp;begin,<sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;end,<sp/>const<sp/>QCPDataRange<sp/>&amp;rangeRestriction)<sp/>const;</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getLines(QVector&lt;QPointF&gt;<sp/>*lines,<sp/>const<sp/>QCPDataRange<sp/>&amp;dataRange)<sp/>const;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getScatters(QVector&lt;QPointF&gt;<sp/>*scatters,<sp/>const<sp/>QCPDataRange<sp/>&amp;dataRange)<sp/>const;</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>dataToLines(const<sp/>QVector&lt;QCPGraphData&gt;<sp/>&amp;data)<sp/>const;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>dataToStepLeftLines(const<sp/>QVector&lt;QCPGraphData&gt;<sp/>&amp;data)<sp/>const;</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>dataToStepRightLines(const<sp/>QVector&lt;QCPGraphData&gt;<sp/>&amp;data)<sp/>const;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>dataToStepCenterLines(const<sp/>QVector&lt;QCPGraphData&gt;<sp/>&amp;data)<sp/>const;</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>dataToImpulseLines(const<sp/>QVector&lt;QCPGraphData&gt;<sp/>&amp;data)<sp/>const;</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/>QVector&lt;QCPDataRange&gt;<sp/>getNonNanSegments(const<sp/>QVector&lt;QPointF&gt;<sp/>*lineData,<sp/>Qt::Orientation<sp/>keyOrientation)<sp/>const;</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/>QVector&lt;QPair&lt;QCPDataRange,<sp/>QCPDataRange&gt;<sp/>&gt;<sp/>getOverlappingSegments(QVector&lt;QCPDataRange&gt;<sp/>thisSegments,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>*thisData,<sp/>QVector&lt;QCPDataRange&gt;<sp/>otherSegments,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>*otherData)<sp/>const;</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>segmentsIntersect(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aLower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aUpper,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bLower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bUpper,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;bPrecedence)<sp/>const;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/>QPointF<sp/>getFillBasePoint(QPointF<sp/>matchingDataPoint)<sp/>const;</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/>const<sp/>QPolygonF<sp/>getFillPolygon(const<sp/>QVector&lt;QPointF&gt;<sp/>*lineData,<sp/>QCPDataRange<sp/>segment)<sp/>const;</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/>const<sp/>QPolygonF<sp/>getChannelFillPolygon(const<sp/>QVector&lt;QPointF&gt;<sp/>*thisData,<sp/>QCPDataRange<sp/>thisSegment,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>*otherData,<sp/>QCPDataRange<sp/>otherSegment)<sp/>const;</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findIndexBelowX(const<sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>const;</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findIndexAboveX(const<sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>const;</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findIndexBelowY(const<sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>const;</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findIndexAboveY(const<sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>const;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointDistance(const<sp/>QPointF<sp/>&amp;pixelPoint,<sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;closestData)<sp/>const;</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="5556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5557"><highlight class="normal">Q_DECLARE_METATYPE(QCPGraph::LineStyle)</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"></highlight></codeline>
<codeline lineno="5559"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-graph.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5560"><highlight class="normal"></highlight></codeline>
<codeline lineno="5561"><highlight class="normal"></highlight></codeline>
<codeline lineno="5562"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-curve.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7434<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5564"><highlight class="normal"></highlight></codeline>
<codeline lineno="5565" refid="class_q_c_p_curve_data" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData</ref></highlight></codeline>
<codeline lineno="5566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData</ref>();</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5571" refid="class_q_c_p_curve_data_1a583174f2b68e01b4d545f04571f58bd0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1a583174f2b68e01b4d545f04571f58bd0" kindref="member">sortKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="5572" refid="class_q_c_p_curve_data_1a40adf1a6ba93051c415a65298b49aa6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData</ref><sp/><ref refid="class_q_c_p_curve_data_1a40adf1a6ba93051c415a65298b49aa6e" kindref="member">fromSortKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1a583174f2b68e01b4d545f04571f58bd0" kindref="member">sortKey</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData</ref>(<ref refid="class_q_c_p_curve_data_1a583174f2b68e01b4d545f04571f58bd0" kindref="member">sortKey</ref>,<sp/>0,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="5573" refid="class_q_c_p_curve_data_1a22bb516e31f7e4b28e314a1da20f2526" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1a22bb516e31f7e4b28e314a1da20f2526" kindref="member">sortKeyIsMainKey</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5575" refid="class_q_c_p_curve_data_1ac805ffc8b4207652efb9fcc6a2cdd3e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1ac805ffc8b4207652efb9fcc6a2cdd3e8" kindref="member">mainKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5576" refid="class_q_c_p_curve_data_1a39a94131e5f62f16b256bcf8c47a3205" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data_1a39a94131e5f62f16b256bcf8c47a3205" kindref="member">mainValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5578" refid="class_q_c_p_curve_data_1acf15deffd18d400651f8384a95dad9f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_curve_data_1acf15deffd18d400651f8384a95dad9f8" kindref="member">valueRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(value,<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/>key,<sp/>value;</highlight></codeline>
<codeline lineno="5581"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5582"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPCurveData,<sp/>Q_PRIMITIVE_TYPE);</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"></highlight></codeline>
<codeline lineno="5584"><highlight class="normal"></highlight></codeline>
<codeline lineno="5595"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;QCPCurveData&gt;<sp/>QCPCurveDataContainer;</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"></highlight></codeline>
<codeline lineno="5597" refid="class_q_c_p_curve" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" kindref="member">QCPCurve</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>&lt;QCPCurveData&gt;</highlight></codeline>
<codeline lineno="5598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>scatterStyle<sp/>READ<sp/>scatterStyle<sp/>WRITE<sp/><ref refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" kindref="member">setScatterStyle</ref>)</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scatterSkip<sp/>READ<sp/>scatterSkip<sp/>WRITE<sp/><ref refid="class_q_c_p_curve_1a97dbfecd497e972d5f2162615e6da5be" kindref="member">setScatterSkip</ref>)</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref><sp/>lineStyle<sp/>READ<sp/>lineStyle<sp/>WRITE<sp/><ref refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" kindref="member">setLineStyle</ref>)</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5611" refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" kindref="member">lsNone</ref><sp/><sp/></highlight></codeline>
<codeline lineno="5612" refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" kindref="member">lsLine</ref><sp/></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/>Q_ENUMS(LineStyle)</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve" kindref="compound">QCPCurve</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve" kindref="compound">~QCPCurve</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5620" refid="class_q_c_p_curve_1a761492fd00b1ab7cb18ce23c118c6c60" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPCurveDataContainer&gt;<sp/><ref refid="class_q_c_p_curve_1a761492fd00b1ab7cb18ce23c118c6c60" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>scatterStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScatterStyle;<sp/>}</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scatterSkip()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScatterSkip;<sp/>}</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/>LineStyle<sp/>lineStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineStyle;<sp/>}</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPCurveDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScatterStyle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle<sp/>&amp;style);</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScatterSkip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip);</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineStyle(LineStyle<sp/>style);</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values);</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth,<sp/>const<sp/>QCPRange<sp/>&amp;inKeyRange=QCPRange())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5644"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>mScatterStyle;</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mScatterSkip;</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/>LineStyle<sp/>mLineStyle;</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(QCPPainter<sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawCurveLine(QCPPainter<sp/>*painter,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>&amp;lines)<sp/>const;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawScatterPlot(QCPPainter<sp/>*painter,<sp/>const<sp/>QVector&lt;QPointF&gt;<sp/>&amp;points,<sp/>const<sp/>QCPScatterStyle<sp/>&amp;style)<sp/>const;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCurveLines(QVector&lt;QPointF&gt;<sp/>*lines,<sp/>const<sp/>QCPDataRange<sp/>&amp;dataRange,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>penWidth)<sp/>const;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getScatters(QVector&lt;QPointF&gt;<sp/>*scatters,<sp/>const<sp/>QCPDataRange<sp/>&amp;dataRange,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scatterWidth)<sp/>const;</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRegion(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMin)<sp/>const;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/>QPointF<sp/>getOptimizedPoint(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>otherRegion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>otherKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>otherValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMin)<sp/>const;</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>getOptimizedCornerPoints(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMin)<sp/>const;</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mayTraverse(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion)<sp/>const;</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getTraverse(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMin,<sp/>QPointF<sp/>&amp;crossA,<sp/>QPointF<sp/>&amp;crossB)<sp/>const;</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getTraverseCornerPoints(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMin,<sp/>QVector&lt;QPointF&gt;<sp/>&amp;beforeTraverse,<sp/>QVector&lt;QPointF&gt;<sp/>&amp;afterTraverse)<sp/>const;</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointDistance(const<sp/>QPointF<sp/>&amp;pixelPoint,<sp/>QCPCurveDataContainer::const_iterator<sp/>&amp;closestData)<sp/>const;</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="5671"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5672"><highlight class="normal">Q_DECLARE_METATYPE(QCPCurve::LineStyle)</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"></highlight></codeline>
<codeline lineno="5674"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-curve.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5675"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"></highlight></codeline>
<codeline lineno="5677"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-bars.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>8955<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5679"><highlight class="normal"></highlight></codeline>
<codeline lineno="5680" refid="class_q_c_p_bars_group" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_bars_group_1aa4e043b9a22c6c5ea0f93740aca063e1" kindref="member">QCPBarsGroup</ref><sp/>:<sp/>public<sp/>QObject</highlight></codeline>
<codeline lineno="5681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6" kindref="member">SpacingType</ref><sp/>spacingType<sp/>READ<sp/>spacingType<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_group_1a2c7e2d61b10594a4555b615e1fcaf49e" kindref="member">setSpacingType</ref>)</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing<sp/>READ<sp/>spacing<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_group_1aa553d327479d72a0c3dafcc724a190e2" kindref="member">setSpacing</ref>)</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5694" refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6" kindref="member">SpacingType</ref><sp/>{<sp/><ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ab53fa3efaf14867dd0f14d41d64e42ac" kindref="member">stAbsolute</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5695" refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ae94b05c27bc985dcdd8b1e1b7f163d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ae94b05c27bc985dcdd8b1e1b7f163d26" kindref="member">stAxisRectRatio</ref><sp/></highlight></codeline>
<codeline lineno="5696" refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ad369cee6287e0a86e8c2b643a3168c54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ad369cee6287e0a86e8c2b643a3168c54" kindref="member">stPlotCoords</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/>Q_ENUMS(SpacingType)</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group" kindref="compound">~QCPBarsGroup</ref>();</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/>SpacingType<sp/>spacingType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSpacingType;<sp/>}</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSpacing;<sp/>}</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSpacingType(SpacingType<sp/>spacingType);</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSpacing(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing);</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5712" refid="class_q_c_p_bars_group_1a6e4f4e86abbec6a9342f204ef82abef8" refkind="member"><highlight class="normal"><sp/><sp/>QList&lt;QCPBars*&gt;<sp/><ref refid="class_q_c_p_bars_group_1a6e4f4e86abbec6a9342f204ef82abef8" kindref="member">bars</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBars;<sp/>}</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>*<sp/>bars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5714" refid="class_q_c_p_bars_group_1a3780ec77919cb00840207ec7a0f00dd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a3780ec77919cb00840207ec7a0f00dd5" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBars.size();<sp/>}</highlight></codeline>
<codeline lineno="5715" refid="class_q_c_p_bars_group_1aac959e79e852e8ef9aea6e0449ad000a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1aac959e79e852e8ef9aea6e0449ad000a" kindref="member">isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBars.isEmpty();<sp/>}</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="5717" refid="class_q_c_p_bars_group_1ae26da07a23553052a178fb3fae90d0dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1ae26da07a23553052a178fb3fae90d0dc" kindref="member">contains</ref>(QCPBars<sp/>*<ref refid="class_q_c_p_bars_group_1a6e4f4e86abbec6a9342f204ef82abef8" kindref="member">bars</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBars.contains(<ref refid="class_q_c_p_bars_group_1a6e4f4e86abbec6a9342f204ef82abef8" kindref="member">bars</ref>);<sp/>}</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>remove(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5722"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*mParentPlot;</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/>SpacingType<sp/>mSpacingType;</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mSpacing;</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/>QList&lt;QCPBars*&gt;<sp/>mBars;</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>registerBars(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unregisterBars(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixelOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyCoord);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getPixelSpacing(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyCoord);</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref>)</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>;</highlight></codeline>
<codeline lineno="5741"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5742"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6" kindref="member">QCPBarsGroup::SpacingType</ref>)</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"></highlight></codeline>
<codeline lineno="5745" refid="class_q_c_p_bars_data" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_bars_data_1a800794d4c5fea22eeb8bade20798496b" kindref="member">QCPBarsData</ref></highlight></codeline>
<codeline lineno="5746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_data_1a800794d4c5fea22eeb8bade20798496b" kindref="member">QCPBarsData</ref>();</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_data_1a800794d4c5fea22eeb8bade20798496b" kindref="member">QCPBarsData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5751" refid="class_q_c_p_bars_data_1a107d22d84f336bf6e3c3ad0133a5d2f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a107d22d84f336bf6e3c3ad0133a5d2f6" kindref="member">sortKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5752" refid="class_q_c_p_bars_data_1ad170d4e90498005ec319338910252ba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a800794d4c5fea22eeb8bade20798496b" kindref="member">QCPBarsData</ref><sp/><ref refid="class_q_c_p_bars_data_1ad170d4e90498005ec319338910252ba8" kindref="member">fromSortKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a107d22d84f336bf6e3c3ad0133a5d2f6" kindref="member">sortKey</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a800794d4c5fea22eeb8bade20798496b" kindref="member">QCPBarsData</ref>(<ref refid="class_q_c_p_bars_data_1a107d22d84f336bf6e3c3ad0133a5d2f6" kindref="member">sortKey</ref>,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="5753" refid="class_q_c_p_bars_data_1a2d24f70f768f0a41defa85f84868039d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a2d24f70f768f0a41defa85f84868039d" kindref="member">sortKeyIsMainKey</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5755" refid="class_q_c_p_bars_data_1a8c1d09e63b0e90a6c1fba56ddeaa8964" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a8c1d09e63b0e90a6c1fba56ddeaa8964" kindref="member">mainKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5756" refid="class_q_c_p_bars_data_1a360d975e587f9e84259aaec172efb10b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_data_1a360d975e587f9e84259aaec172efb10b" kindref="member">mainValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5758" refid="class_q_c_p_bars_data_1acf3e6479dacacd6c81eebe7d4cd62185" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_bars_data_1acf3e6479dacacd6c81eebe7d4cd62185" kindref="member">valueRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(value,<sp/>value);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>bar<sp/>base<sp/>value<sp/>isn&apos;t<sp/>held<sp/>in<sp/>each<sp/>QCPBarsData<sp/>and<sp/>thus<sp/>can&apos;t/shouldn&apos;t<sp/>be<sp/>returned<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/>value;</highlight></codeline>
<codeline lineno="5761"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5762"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPBarsData,<sp/>Q_PRIMITIVE_TYPE);</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"></highlight></codeline>
<codeline lineno="5774"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;QCPBarsData&gt;<sp/>QCPBarsDataContainer;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"></highlight></codeline>
<codeline lineno="5776" refid="class_q_c_p_bars" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" kindref="member">QCPBars</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>&lt;QCPBarsData&gt;</highlight></codeline>
<codeline lineno="5777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width<sp/>READ<sp/>width<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" kindref="member">setWidth</ref>)</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref><sp/>widthType<sp/>READ<sp/>widthType<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" kindref="member">setWidthType</ref>)</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QCPBarsGroup*<sp/>barsGroup<sp/>READ<sp/>barsGroup<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">setBarsGroup</ref>)</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseValue<sp/>READ<sp/>baseValue<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_1a574ec7eb7537566df1a28ff085d75623" kindref="member">setBaseValue</ref>)</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stackingGap<sp/>READ<sp/>stackingGap<sp/>WRITE<sp/><ref refid="class_q_c_p_bars_1aeacf7561afb1c70284b22822b57c7bb5" kindref="member">setStackingGap</ref>)</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" kindref="member">QCPBars</ref>*<sp/><ref refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" kindref="member">barBelow</ref><sp/>READ<sp/><ref refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" kindref="member">barBelow</ref>)</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" kindref="member">QCPBars</ref>*<sp/><ref refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" kindref="member">barAbove</ref><sp/>READ<sp/><ref refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" kindref="member">barAbove</ref>)</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5795" refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref><sp/>{<sp/><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649ab74315c9aa77df593c58dd25dfc0de35" kindref="member">wtAbsolute</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5796" refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649a90bc09899361ad3422ff277f7c790ffe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649a90bc09899361ad3422ff277f7c790ffe" kindref="member">wtAxisRectRatio</ref><sp/></highlight></codeline>
<codeline lineno="5797" refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" kindref="member">wtPlotCoords</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/>Q_ENUMS(WidthType)</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">~QCPBars</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWidth;<sp/>}</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/>WidthType<sp/>widthType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWidthType;<sp/>}</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/>QCPBarsGroup<sp/>*barsGroup()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBarsGroup;<sp/>}</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseValue()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBaseValue;<sp/>}</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stackingGap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mStackingGap;<sp/>}</highlight></codeline>
<codeline lineno="5810" refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" kindref="member">QCPBars</ref><sp/>*<ref refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" kindref="member">barBelow</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBarBelow.<ref refid="class_q_c_p_bars_1a7e373a534d82e18ed27b3fafd1f08fae" kindref="member">data</ref>();<sp/>}</highlight></codeline>
<codeline lineno="5811" refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" kindref="member">QCPBars</ref><sp/>*<ref refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" kindref="member">barAbove</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBarAbove.<ref refid="class_q_c_p_bars_1a7e373a534d82e18ed27b3fafd1f08fae" kindref="member">data</ref>();<sp/>}</highlight></codeline>
<codeline lineno="5812" refid="class_q_c_p_bars_1a7e373a534d82e18ed27b3fafd1f08fae" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPBarsDataContainer&gt;<sp/><ref refid="class_q_c_p_bars_1a7e373a534d82e18ed27b3fafd1f08fae" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPBarsDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWidthType(WidthType<sp/>widthType);</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBarsGroup(<ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref><sp/>*barsGroup);</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBaseValue(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseValue);</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStackingGap(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveBelow(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveAbove(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars);</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref><sp/>selectTestRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::SignDomain<sp/>inSignDomain=<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::sdBoth)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::SignDomain<sp/>inSignDomain=<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::sdBoth,<sp/>const<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;inKeyRange=<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/>virtual<sp/>QPointF<sp/>dataPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5836"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWidth;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/>WidthType<sp/>mWidthType;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref><sp/>*mBarsGroup;</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mBaseValue;</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mStackingGap;</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/>QPointer&lt;<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>&gt;<sp/>mBarBelow,<sp/>mBarAbove;</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVisibleDataBounds(QCPBarsDataContainer::const_iterator<sp/>&amp;begin,<sp/>QCPBarsDataContainer::const_iterator<sp/>&amp;end)<sp/>const;</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/>QRectF<sp/>getBarRect(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>const;</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getPixelWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;upper)<sp/>const;</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getStackedBaseValue(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positive)<sp/>const;</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>connectBars(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>*<sp/>lower,<sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>*<sp/>upper);</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>;</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref>;</highlight></codeline>
<codeline lineno="5859"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5860"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>::WidthType)</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"></highlight></codeline>
<codeline lineno="5862"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-bars.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5863"><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"></highlight></codeline>
<codeline lineno="5865"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-statisticalbox.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7522<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5867"><highlight class="normal"></highlight></codeline>
<codeline lineno="5868" refid="class_q_c_p_statistical_box_data" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_statistical_box_data_1ab96c4b93670a8dcac8a3d4080fd722ee" kindref="member">QCPStatisticalBoxData</ref></highlight></codeline>
<codeline lineno="5869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_data_1ab96c4b93670a8dcac8a3d4080fd722ee" kindref="member">QCPStatisticalBoxData</ref>();</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_data_1ab96c4b93670a8dcac8a3d4080fd722ee" kindref="member">QCPStatisticalBoxData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerQuartile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>median,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperQuartile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maximum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;&amp;<sp/>outliers=QVector&lt;double&gt;());</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5874" refid="class_q_c_p_statistical_box_data_1a168100275e85935207deec86216abc88" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1a168100275e85935207deec86216abc88" kindref="member">sortKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5875" refid="class_q_c_p_statistical_box_data_1a8c391d5a6c7cebc79b664aad9917b499" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1ab96c4b93670a8dcac8a3d4080fd722ee" kindref="member">QCPStatisticalBoxData</ref><sp/><ref refid="class_q_c_p_statistical_box_data_1a8c391d5a6c7cebc79b664aad9917b499" kindref="member">fromSortKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1a168100275e85935207deec86216abc88" kindref="member">sortKey</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1ab96c4b93670a8dcac8a3d4080fd722ee" kindref="member">QCPStatisticalBoxData</ref>(<ref refid="class_q_c_p_statistical_box_data_1a168100275e85935207deec86216abc88" kindref="member">sortKey</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="5876" refid="class_q_c_p_statistical_box_data_1ad1f57b586f3a473f6f006dc4d505159b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1ad1f57b586f3a473f6f006dc4d505159b" kindref="member">sortKeyIsMainKey</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5878" refid="class_q_c_p_statistical_box_data_1a4bbbf44f60ac5eca73c5f4135741562e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1a4bbbf44f60ac5eca73c5f4135741562e" kindref="member">mainKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="5879" refid="class_q_c_p_statistical_box_data_1a0df3cb31cfd6d48decf6173297b81746" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_data_1a0df3cb31cfd6d48decf6173297b81746" kindref="member">mainValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>median;<sp/>}</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5881" refid="class_q_c_p_statistical_box_data_1a1a2410fcf3d45fa3a1ad09e265b9bcad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_statistical_box_data_1a1a2410fcf3d45fa3a1ad09e265b9bcad" kindref="member">valueRange</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5882"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>result(minimum,<sp/>maximum);</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QVector&lt;double&gt;::const_iterator<sp/>it<sp/>=<sp/>outliers.constBegin();<sp/>it<sp/>!=<sp/>outliers.constEnd();<sp/>++it)</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref>(*it);</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/>minimum,<sp/>lowerQuartile,<sp/>median,<sp/>upperQuartile,<sp/>maximum;</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>outliers;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5892"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPStatisticalBoxData,<sp/>Q_MOVABLE_TYPE);</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"></highlight></codeline>
<codeline lineno="5894"><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;QCPStatisticalBoxData&gt;<sp/>QCPStatisticalBoxDataContainer;</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"></highlight></codeline>
<codeline lineno="5907" refid="class_q_c_p_statistical_box" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_statistical_box_1a75c2b3e7fcd0741cc981693a2ba63b27" kindref="member">QCPStatisticalBox</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>&lt;QCPStatisticalBoxData&gt;</highlight></codeline>
<codeline lineno="5908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width<sp/>READ<sp/>width<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1a0b62775bd67301b1eba5c785f2b26f14" kindref="member">setWidth</ref>)</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiskerWidth<sp/>READ<sp/>whiskerWidth<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1adf378812446bd66f34d1f7f293d991cd" kindref="member">setWhiskerWidth</ref>)</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>whiskerPen<sp/>READ<sp/>whiskerPen<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1a4a5034cb3b9b040444df05ab1684620b" kindref="member">setWhiskerPen</ref>)</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>whiskerBarPen<sp/>READ<sp/>whiskerBarPen<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1aa8d3e503897788e1abf68dc74b5f147f" kindref="member">setWhiskerBarPen</ref>)</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whiskerAntialiased<sp/>READ<sp/>whiskerAntialiased<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1a61bcd458fba002f72304d11319051843" kindref="member">setWhiskerAntialiased</ref>)</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>medianPen<sp/>READ<sp/>medianPen<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1a7260ac55b669f5d0a74f16d5ca84c52c" kindref="member">setMedianPen</ref>)</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>outlierStyle<sp/>READ<sp/>outlierStyle<sp/>WRITE<sp/><ref refid="class_q_c_p_statistical_box_1ad5241943422eb8e58360a97e99ad6aa7" kindref="member">setOutlierStyle</ref>)</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a75c2b3e7fcd0741cc981693a2ba63b27" kindref="member">QCPStatisticalBox</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5923" refid="class_q_c_p_statistical_box_1a728e501413eaf191544014173d52dfbc" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPStatisticalBoxDataContainer&gt;<sp/><ref refid="class_q_c_p_statistical_box_1a728e501413eaf191544014173d52dfbc" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWidth;<sp/>}</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiskerWidth()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWhiskerWidth;<sp/>}</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/>QPen<sp/>whiskerPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWhiskerPen;<sp/>}</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/>QPen<sp/>whiskerBarPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWhiskerBarPen;<sp/>}</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whiskerAntialiased()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWhiskerAntialiased;<sp/>}</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/>QPen<sp/>medianPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMedianPen;<sp/>}</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>outlierStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOutlierStyle;<sp/>}</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"></highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPStatisticalBoxDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;minimum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;lowerQuartile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;median,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;upperQuartile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;maximum,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWhiskerWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWhiskerPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWhiskerBarPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWhiskerAntialiased(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMedianPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOutlierStyle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle<sp/>&amp;style);</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;minimum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;lowerQuartile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;median,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;upperQuartile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;maximum,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerQuartile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>median,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperQuartile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maximum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;outliers=QVector&lt;double&gt;());</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPDataSelection<sp/>selectTestRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth,<sp/>const<sp/>QCPRange<sp/>&amp;inKeyRange=QCPRange())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5953"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWidth;</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWhiskerWidth;</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/>QPen<sp/>mWhiskerPen,<sp/>mWhiskerBarPen;</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mWhiskerAntialiased;</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/>QPen<sp/>mMedianPen;</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>mOutlierStyle;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(QCPPainter<sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawStatisticalBox(QCPPainter<sp/>*painter,<sp/>QCPStatisticalBoxDataContainer::const_iterator<sp/>it,<sp/>const<sp/>QCPScatterStyle<sp/>&amp;outlierStyle)<sp/>const;</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVisibleDataBounds(QCPStatisticalBoxDataContainer::const_iterator<sp/>&amp;begin,<sp/>QCPStatisticalBoxDataContainer::const_iterator<sp/>&amp;end)<sp/>const;</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/>QRectF<sp/>getQuartileBox(QCPStatisticalBoxDataContainer::const_iterator<sp/>it)<sp/>const;</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/>QVector&lt;QLineF&gt;<sp/>getWhiskerBackboneLines(QCPStatisticalBoxDataContainer::const_iterator<sp/>it)<sp/>const;</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/>QVector&lt;QLineF&gt;<sp/>getWhiskerBarLines(QCPStatisticalBoxDataContainer::const_iterator<sp/>it)<sp/>const;</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="5977"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"></highlight></codeline>
<codeline lineno="5979"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-statisticalbox.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5980"><highlight class="normal"></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-colormap.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5983"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7092<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5984"><highlight class="normal"></highlight></codeline>
<codeline lineno="5985" refid="class_q_c_p_color_map_data" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData</ref></highlight></codeline>
<codeline lineno="5986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;keyRange,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;valueRange);</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">~QCPColorMapData</ref>();</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData</ref><sp/>&amp;<ref refid="class_q_c_p_color_map_data_1afdf4dd1b2f5714234fe84709b85c2a8d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mKeySize;<sp/>}</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValueSize;<sp/>}</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>keyRange()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mKeyRange;<sp/>}</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>valueRange()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValueRange;<sp/>}</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>dataBounds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataBounds;<sp/>}</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>data(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cell(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex);</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a4f7e6b7a97017400cbbd46f0660e68ea" kindref="member">alpha</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex);</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a0d9ff35c299d0478b682bfbcdd9c097e" kindref="member">setSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize);</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ac7ef70e383aface34b44dbde49234b6b" kindref="member">setKeySize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize);</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a0893c9e3914513048b45e3429ffd16f2" kindref="member">setValueSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aad9c1c7c703c1339489fc730517c83d4" kindref="member">setRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;keyRange,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;valueRange);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a0738c485f3c9df9ea1241b7a8bb6a86e" kindref="member">setKeyRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;keyRange);</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ada1b2680ba96a5f4175b6d341cf75d23" kindref="member">setValueRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;valueRange);</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1afd2083ccfd6987ec94aa7ef8e91ca39a" kindref="member">setData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a8e75eaf8746596319032a93f3d2d0683" kindref="member">setCell</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aaf7de5b34c58f38d8f4c1ceb064a876c" kindref="member">setAlpha</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a4f7e6b7a97017400cbbd46f0660e68ea" kindref="member">alpha</ref>);</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ab235ade8a4d64bd3adb26a99b3dd57ee" kindref="member">recalculateDataBounds</ref>();</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a9910ba830e96955bd5c8e5bef1e77ef3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a14d08b9c3720cd719400079b86d3906b" kindref="member">clearAlpha</ref>();</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a350f783260eb9b5de5c7b5e0d5d3e3c2" kindref="member">fill</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a93e2a549d7702bc849cd48a585294657" kindref="member">fillAlpha</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a4f7e6b7a97017400cbbd46f0660e68ea" kindref="member">alpha</ref>);</highlight></codeline>
<codeline lineno="6020" refid="class_q_c_p_color_map_data_1aea88cc75a76ca571acf29b2ba8ac970d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aea88cc75a76ca571acf29b2ba8ac970d" kindref="member">isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIsEmpty;<sp/>}</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coordToCell(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*valueIndex)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cellToCoord(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6024"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mKeySize,<sp/>mValueSize;</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mKeyRange,<sp/>mValueRange;</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsEmpty;</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mData;</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mAlpha;</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mDataBounds;</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDataModified;</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createAlpha(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initializeOpaque=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_c_p_color_map" kindref="compound">QCPColorMap</ref>;</highlight></codeline>
<codeline lineno="6039"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"></highlight></codeline>
<codeline lineno="6042" refid="class_q_c_p_color_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_color_map_1aa37e976d2ee1e2be6c4cd88a64b36215" kindref="member">QCPColorMap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref></highlight></codeline>
<codeline lineno="6043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>dataRange<sp/>READ<sp/>dataRange<sp/>WRITE<sp/><ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_color_map_1a83ae5be3903da493f732e1a5c14fd807" kindref="member">dataRangeChanged</ref>)</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>dataScaleType<sp/>READ<sp/>dataScaleType<sp/>WRITE<sp/><ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">setDataScaleType</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>)</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>gradient<sp/>READ<sp/>gradient<sp/>WRITE<sp/><ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">setGradient</ref><sp/>NOTIFY<sp/><ref refid="class_q_c_p_color_map_1a31a12726736b1ac274e7b1d8dfb67468" kindref="member">gradientChanged</ref>)</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>interpolate<sp/>READ<sp/>interpolate<sp/>WRITE<sp/><ref refid="class_q_c_p_color_map_1a484eaa8a5065cfc386b15375bf98b964" kindref="member">setInterpolate</ref>)</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tightBoundary<sp/>READ<sp/>tightBoundary<sp/>WRITE<sp/><ref refid="class_q_c_p_color_map_1ad03221cc285e5f562a0b13d684b5576d" kindref="member">setTightBoundary</ref>)</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_color_scale" kindref="compound">QCPColorScale</ref>*<sp/>colorScale<sp/>READ<sp/>colorScale<sp/>WRITE<sp/><ref refid="class_q_c_p_color_map_1aa828921db364fe3c6af4619580ab85fd" kindref="member">setColorScale</ref>)</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1aa37e976d2ee1e2be6c4cd88a64b36215" kindref="member">QCPColorMap</ref>(QCPAxis<sp/>*keyAxis,<sp/>QCPAxis<sp/>*valueAxis);</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1aa37e976d2ee1e2be6c4cd88a64b36215" kindref="member">~QCPColorMap</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6058" refid="class_q_c_p_color_map_1a047d7eb3ae657f93f2f39b5e68b79451" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref><sp/>*<ref refid="class_q_c_p_color_map_1a047d7eb3ae657f93f2f39b5e68b79451" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMapData;<sp/>}</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>dataRange()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataRange;<sp/>}</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>dataScaleType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataScaleType;<sp/>}</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>interpolate()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInterpolate;<sp/>}</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tightBoundary()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTightBoundary;<sp/>}</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/>QCPColorGradient<sp/>gradient()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGradient;<sp/>}</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/>QCPColorScale<sp/>*colorScale()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColorScale.data();<sp/>}</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QCPColorMapData<sp/>*data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDataRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;dataRange);</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDataScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>scaleType);</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setGradient(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPColorGradient<sp/>&amp;gradient);</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInterpolate(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTightBoundary(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColorScale(QCPColorScale<sp/>*colorScale);</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescaleDataRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recalculateDataBounds=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLegendIcon(Qt::TransformationMode<sp/>transformMode=Qt::SmoothTransformation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;thumbSize=QSize(32,<sp/>18));</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth,<sp/>const<sp/>QCPRange<sp/>&amp;inKeyRange=QCPRange())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6084"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="6085" refid="class_q_c_p_color_map_1a83ae5be3903da493f732e1a5c14fd807" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a83ae5be3903da493f732e1a5c14fd807" kindref="member">dataRangeChanged</ref>(const<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;newRange);</highlight></codeline>
<codeline lineno="6086" refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>(QCPAxis::ScaleType<sp/>scaleType);</highlight></codeline>
<codeline lineno="6087" refid="class_q_c_p_color_map_1a31a12726736b1ac274e7b1d8dfb67468" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a31a12726736b1ac274e7b1d8dfb67468" kindref="member">gradientChanged</ref>(const<sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;newGradient);</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6089"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mDataRange;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/>QCPAxis::ScaleType<sp/>mDataScaleType;</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref><sp/>*mMapData;</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>mGradient;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInterpolate;</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTightBoundary;</highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/>QPointer&lt;<ref refid="class_q_c_p_color_scale" kindref="compound">QCPColorScale</ref>&gt;<sp/>mColorScale;</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/>QImage<sp/>mMapImage,<sp/>mUndersampledMapImage;</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mLegendIcon;</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mMapImageInvalidated;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMapImage();</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="6113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-colormap.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6116"><highlight class="normal"></highlight></codeline>
<codeline lineno="6117"><highlight class="normal"></highlight></codeline>
<codeline lineno="6118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-financial.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>8644<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"></highlight></codeline>
<codeline lineno="6121" refid="class_q_c_p_financial_data" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData</ref></highlight></codeline>
<codeline lineno="6122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData</ref>();</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>open,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>close);</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6127" refid="class_q_c_p_financial_data_1ab378e8ef6aef482735aba69115cb442e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1ab378e8ef6aef482735aba69115cb442e" kindref="member">sortKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="6128" refid="class_q_c_p_financial_data_1a54a0ca7ee7fd7713972477e8e2533ce5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData</ref><sp/><ref refid="class_q_c_p_financial_data_1a54a0ca7ee7fd7713972477e8e2533ce5" kindref="member">fromSortKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1ab378e8ef6aef482735aba69115cb442e" kindref="member">sortKey</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData</ref>(<ref refid="class_q_c_p_financial_data_1ab378e8ef6aef482735aba69115cb442e" kindref="member">sortKey</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="6129" refid="class_q_c_p_financial_data_1a45c90527fd3cececeb41e47555333794" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1a45c90527fd3cececeb41e47555333794" kindref="member">sortKeyIsMainKey</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6131" refid="class_q_c_p_financial_data_1af6ed6349c65d938fabd2e4dd2cd499ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1af6ed6349c65d938fabd2e4dd2cd499ff" kindref="member">mainKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="6132" refid="class_q_c_p_financial_data_1a65206c76b6f31a57e04dc7da88c9be60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data_1a65206c76b6f31a57e04dc7da88c9be60" kindref="member">mainValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open;<sp/>}</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6134" refid="class_q_c_p_financial_data_1a164d5584eeeb9ba48b4b595ac2ac7fcf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_financial_data_1a164d5584eeeb9ba48b4b595ac2ac7fcf" kindref="member">valueRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(low,<sp/>high);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>open<sp/>and<sp/>close<sp/>must<sp/>lie<sp/>between<sp/>low<sp/>and<sp/>high,<sp/>so<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>check<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/>open,<sp/>high,<sp/>low,<sp/>close;</highlight></codeline>
<codeline lineno="6137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6138"><highlight class="normal">Q_DECLARE_TYPEINFO(QCPFinancialData,<sp/>Q_PRIMITIVE_TYPE);</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"></highlight></codeline>
<codeline lineno="6140"><highlight class="normal"></highlight></codeline>
<codeline lineno="6150"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QCPDataContainer&lt;QCPFinancialData&gt;<sp/>QCPFinancialDataContainer;</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"></highlight></codeline>
<codeline lineno="6152" refid="class_q_c_p_financial" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_financial_1a4702d5248feeb9d1ec6e3ce725b10b32" kindref="member">QCPFinancial</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable1_d_1a30b2e50ab0afce65f104ea7a95440315" kindref="member">QCPAbstractPlottable1D</ref>&lt;QCPFinancialData&gt;</highlight></codeline>
<codeline lineno="6153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfb" kindref="member">ChartStyle</ref><sp/>chartStyle<sp/>READ<sp/>chartStyle<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1a5a59175d36279d71596e64d7bb65596f" kindref="member">setChartStyle</ref>)</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width<sp/>READ<sp/>width<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1a99633f8bac86a61d534ae5eeb1a3068f" kindref="member">setWidth</ref>)</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626" kindref="member">WidthType</ref><sp/>widthType<sp/>READ<sp/>widthType<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1a204b7b710352796593a432b723e34089" kindref="member">setWidthType</ref>)</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>twoColored<sp/>READ<sp/>twoColored<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1a138e44aac160a17a9676652e240c5f08" kindref="member">setTwoColored</ref>)</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brushPositive<sp/>READ<sp/>brushPositive<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1a5ebff2b1764efd07cc44942e67821829" kindref="member">setBrushPositive</ref>)</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brushNegative<sp/>READ<sp/>brushNegative<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1a8bbdd87629f9144b3ef51af660c0961a" kindref="member">setBrushNegative</ref>)</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>penPositive<sp/>READ<sp/>penPositive<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1ac58aa3adc7a35aab0088764b840683e5" kindref="member">setPenPositive</ref>)</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>penNegative<sp/>READ<sp/>penNegative<sp/>WRITE<sp/><ref refid="class_q_c_p_financial_1afe5c07e94ccea01a75b3a2476993c346" kindref="member">setPenNegative</ref>)</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6172" refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626" kindref="member">WidthType</ref><sp/>{<sp/><ref refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626a0758d53bb6d7b4858e6bf8771edc934a" kindref="member">wtAbsolute</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6173" refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626a806518350ea5814d28c29b0056e33ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626a806518350ea5814d28c29b0056e33ecd" kindref="member">wtAxisRectRatio</ref><sp/></highlight></codeline>
<codeline lineno="6174" refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626af676bc8dbe700b96b333329c9dbfc30f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_financial_1aef1761dda71a53dc5269685e9e492626af676bc8dbe700b96b333329c9dbfc30f" kindref="member">wtPlotCoords</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/>Q_ENUMS(WidthType)</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6183" refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfb" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfb" kindref="member">ChartStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfba3a516016c9298d3e95dd82aa203c4390" kindref="member">csOhlc</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6184" refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" kindref="member">csCandlestick</ref><sp/><sp/></highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/>Q_ENUMS(ChartStyle)</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial" kindref="compound">QCPFinancial</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial" kindref="compound">~QCPFinancial</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6192" refid="class_q_c_p_financial_1aab5e155de04c9510e95d2854c40576d5" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPFinancialDataContainer&gt;<sp/><ref refid="class_q_c_p_financial_1aab5e155de04c9510e95d2854c40576d5" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/>ChartStyle<sp/>chartStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mChartStyle;<sp/>}</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWidth;<sp/>}</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/>WidthType<sp/>widthType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWidthType;<sp/>}</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>twoColored()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTwoColored;<sp/>}</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/>QBrush<sp/>brushPositive()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrushPositive;<sp/>}</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/>QBrush<sp/>brushNegative()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrushNegative;<sp/>}</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/>QPen<sp/>penPositive()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPenPositive;<sp/>}</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/>QPen<sp/>penNegative()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPenNegative;<sp/>}</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPFinancialDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;open,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;low,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;close,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setChartStyle(ChartStyle<sp/>style);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWidthType(WidthType<sp/>widthType);</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTwoColored(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>twoColored);</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrushPositive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrushNegative(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPenPositive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPenNegative(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;open,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;low,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;close,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>open,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>close);</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPDataSelection<sp/>selectTestRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>QCP::SignDomain<sp/>inSignDomain=QCP::sdBoth,<sp/>const<sp/>QCPRange<sp/>&amp;inKeyRange=QCPRange())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/>static<sp/>QCPFinancialDataContainer<sp/>timeSeriesToOhlc(const<sp/>QVector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>&amp;time,<sp/>const<sp/>QVector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeBinSize,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeBinOffset<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6227"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/>ChartStyle<sp/>mChartStyle;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWidth;</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/>WidthType<sp/>mWidthType;</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTwoColored;</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrushPositive,<sp/>mBrushNegative;</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/>QPen<sp/>mPenPositive,<sp/>mPenNegative;</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(QCPPainter<sp/>*painter,<sp/>const<sp/>QRectF<sp/>&amp;rect)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawOhlcPlot(QCPPainter<sp/>*painter,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;begin,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;end,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSelected);</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawCandlestickPlot(QCPPainter<sp/>*painter,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;begin,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;end,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSelected);</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getPixelWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel)<sp/>const;</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ohlcSelectTest(const<sp/>QPointF<sp/>&amp;pos,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;begin,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;end,<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;closestDataPoint)<sp/>const;</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>candlestickSelectTest(const<sp/>QPointF<sp/>&amp;pos,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;begin,<sp/>const<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;end,<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;closestDataPoint)<sp/>const;</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVisibleDataBounds(QCPFinancialDataContainer::const_iterator<sp/>&amp;begin,<sp/>QCPFinancialDataContainer::const_iterator<sp/>&amp;end)<sp/>const;</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/>QRectF<sp/>selectionHitBox(QCPFinancialDataContainer::const_iterator<sp/>it)<sp/>const;</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPLegend;</highlight></codeline>
<codeline lineno="6251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6252"><highlight class="normal">Q_DECLARE_METATYPE(QCPFinancial::ChartStyle)</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"></highlight></codeline>
<codeline lineno="6254"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-financial.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"></highlight></codeline>
<codeline lineno="6257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/plottables/plottable-errorbar.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6258"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>7749<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6259"><highlight class="normal"></highlight></codeline>
<codeline lineno="6260" refid="class_q_c_p_error_bars_data" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_error_bars_data_1ac18bdb46dec56f8df7f3c99d058cc725" kindref="member">QCPErrorBarsData</ref></highlight></codeline>
<codeline lineno="6261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_error_bars_data_1ac18bdb46dec56f8df7f3c99d058cc725" kindref="member">QCPErrorBarsData</ref>();</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_error_bars_data_1ac18bdb46dec56f8df7f3c99d058cc725" kindref="member">QCPErrorBarsData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error);</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_error_bars_data_1ac18bdb46dec56f8df7f3c99d058cc725" kindref="member">QCPErrorBarsData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>errorMinus,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>errorPlus);</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>errorMinus,<sp/>errorPlus;</highlight></codeline>
<codeline lineno="6268"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6269"><highlight class="normal">Q_DECLARE_TYPEINFO(<ref refid="class_q_c_p_error_bars_data" kindref="compound">QCPErrorBarsData</ref>,<sp/>Q_PRIMITIVE_TYPE);</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"></highlight></codeline>
<codeline lineno="6271"><highlight class="normal"></highlight></codeline>
<codeline lineno="6287"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QVector&lt;QCPErrorBarsData&gt;<sp/>QCPErrorBarsDataContainer;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"></highlight></codeline>
<codeline lineno="6289" refid="class_q_c_p_error_bars" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_error_bars_1a5cdcc33e5f173780c3d657e96216e5c1" kindref="member">QCPErrorBars</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref></highlight></codeline>
<codeline lineno="6290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QSharedPointer&lt;QCPErrorBarsDataContainer&gt;<sp/><ref refid="class_q_c_p_error_bars_1aeebd1b14f4c3573565efafd514988813" kindref="member">data</ref><sp/>READ<sp/><ref refid="class_q_c_p_error_bars_1aeebd1b14f4c3573565efafd514988813" kindref="member">data</ref><sp/>WRITE<sp/><ref refid="class_q_c_p_error_bars_1a92b1980003255f5f7c05407a4d92aabc" kindref="member">setData</ref>)</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable</ref>*<sp/>dataPlottable<sp/>READ<sp/>dataPlottable<sp/>WRITE<sp/><ref refid="class_q_c_p_error_bars_1aabb42a964cfbf780cd1c79850c7cd989" kindref="member">setDataPlottable</ref>)</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_error_bars_1a95f0220f11a72648b96480a85ce26474" kindref="member">ErrorType</ref><sp/>errorType<sp/>READ<sp/>errorType<sp/>WRITE<sp/><ref refid="class_q_c_p_error_bars_1af0af493d454a8f3a0908830160680d2b" kindref="member">setErrorType</ref>)</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiskerWidth<sp/>READ<sp/>whiskerWidth<sp/>WRITE<sp/><ref refid="class_q_c_p_error_bars_1ad05f6ff9e46c6047f1cd2459744b7b59" kindref="member">setWhiskerWidth</ref>)</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>symbolGap<sp/>READ<sp/>symbolGap<sp/>WRITE<sp/><ref refid="class_q_c_p_error_bars_1a280ee8d863d8a2630c309701d019b3de" kindref="member">setSymbolGap</ref>)</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6307" refid="class_q_c_p_error_bars_1a95f0220f11a72648b96480a85ce26474" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_error_bars_1a95f0220f11a72648b96480a85ce26474" kindref="member">ErrorType</ref><sp/>{<sp/><ref refid="class_q_c_p_error_bars_1a95f0220f11a72648b96480a85ce26474a9fca24d20d5376e41be216fc9b08cd21" kindref="member">etKeyError</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6308" refid="class_q_c_p_error_bars_1a95f0220f11a72648b96480a85ce26474a5f760fc9c0a98c7f1e93e33bf54e9d83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_error_bars_1a95f0220f11a72648b96480a85ce26474a5f760fc9c0a98c7f1e93e33bf54e9d83" kindref="member">etValueError</ref><sp/></highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/>Q_ENUMS(ErrorType)</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_error_bars" kindref="compound">QCPErrorBars</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_error_bars" kindref="compound">~QCPErrorBars</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6315" refid="class_q_c_p_error_bars_1aeebd1b14f4c3573565efafd514988813" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPErrorBarsDataContainer&gt;<sp/><ref refid="class_q_c_p_error_bars_1aeebd1b14f4c3573565efafd514988813" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*dataPlottable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataPlottable.data();<sp/>}</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/>ErrorType<sp/>errorType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mErrorType;<sp/>}</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiskerWidth()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWhiskerWidth;<sp/>}</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>symbolGap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSymbolGap;<sp/>}</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPErrorBarsDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;error);</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;errorMinus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;errorPlus);</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDataPlottable(QCPAbstractPlottable*<sp/>plottable);</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setErrorType(ErrorType<sp/>type);</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWhiskerWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSymbolGap(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;error);</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;errorMinus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;errorPlus);</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error);</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>errorMinus,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>errorPlus);</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>methods<sp/>of<sp/>1d<sp/>plottable<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataCount()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dataMainKey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dataSortKey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dataMainValue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPRange<sp/>dataValueRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/>virtual<sp/>QPointF<sp/>dataPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sortKeyIsMainKey()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/>virtual<sp/>QCPDataSelection<sp/>selectTestRect(const<sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findBegin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=true)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findEnd(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sortKey,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expandedRange=true)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6350" refid="class_q_c_p_error_bars_1ad8f0bfffcbb3c3bdf9ebe5f7ef2fe0cf" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="class_q_c_p_plottable_interface1_d" kindref="compound">QCPPlottableInterface1D</ref><sp/>*<ref refid="class_q_c_p_error_bars_1ad8f0bfffcbb3c3bdf9ebe5f7ef2fe0cf" kindref="member">interface1D</ref>()<sp/>Q_DECL_OVERRIDE<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6352"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPErrorBarsDataContainer&gt;<sp/>mDataContainer;</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPAbstractPlottable&gt;<sp/>mDataPlottable;</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/>ErrorType<sp/>mErrorType;</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mWhiskerWidth;</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mSymbolGap;</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>inSignDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>inSignDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;inKeyRange=<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>())<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getErrorBarLines(QCPErrorBarsDataContainer::const_iterator<sp/>it,<sp/>QVector&lt;QLineF&gt;<sp/>&amp;backbones,<sp/>QVector&lt;QLineF&gt;<sp/>&amp;whiskers)<sp/>const;</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVisibleDataBounds(QCPErrorBarsDataContainer::const_iterator<sp/>&amp;begin,<sp/>QCPErrorBarsDataContainer::const_iterator<sp/>&amp;end,<sp/>const<sp/><ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref><sp/>&amp;rangeRestriction)<sp/>const;</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointDistance(const<sp/>QPointF<sp/>&amp;pixelPoint,<sp/>QCPErrorBarsDataContainer::const_iterator<sp/>&amp;closestData)<sp/>const;</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>helpers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDataSegments(QList&lt;<ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&gt;<sp/>&amp;selectedSegments,<sp/>QList&lt;<ref refid="class_q_c_p_data_range" kindref="compound">QCPDataRange</ref>&gt;<sp/>&amp;unselectedSegments)<sp/>const;</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>errorBarVisible(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>const;</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rectIntersectsLine(const<sp/>QRectF<sp/>&amp;pixelRect,<sp/>const<sp/>QLineF<sp/>&amp;line)<sp/>const;</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>;</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>;</highlight></codeline>
<codeline lineno="6377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"></highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/plottables/plottable-errorbar.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"></highlight></codeline>
<codeline lineno="6381"><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-straightline.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3137<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"></highlight></codeline>
<codeline lineno="6385" refid="class_q_c_p_item_straight_line" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_straight_line_1a41fd2e1f006983449eca9830930c3b10" kindref="member">QCPItemStraightLine</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_straight_line_1a9f36c9c9e60d7d9ac084c80380ac8601" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_straight_line_1a5c33559498d33543fa95cf0a36e851ff" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a41fd2e1f006983449eca9830930c3b10" kindref="member">QCPItemStraightLine</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a41fd2e1f006983449eca9830930c3b10" kindref="member">~QCPItemStraightLine</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a9f36c9c9e60d7d9ac084c80380ac8601" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a5c33559498d33543fa95cf0a36e851ff" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a0b10bec4746760cc99d210ba040cb8f7" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>point1;</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>point2;</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6410"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/>QLineF<sp/>getRectClippedStraightLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6420"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"></highlight></codeline>
<codeline lineno="6422"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-straightline.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6423"><highlight class="normal"></highlight></codeline>
<codeline lineno="6424"><highlight class="normal"></highlight></codeline>
<codeline lineno="6425"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-line.h&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6426"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3429<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6427"><highlight class="normal"></highlight></codeline>
<codeline lineno="6428" refid="class_q_c_p_item_line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_line_1a17804b7f64961c6accf25b61e85142e3" kindref="member">QCPItemLine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_line_1a572528dab61c1abe205822fbd5db4b27" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_line_1a3e2fec44503277e77717e9c24f87f1ea" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>head<sp/>READ<sp/>head<sp/>WRITE<sp/><ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">setHead</ref>)</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>tail<sp/>READ<sp/>tail<sp/>WRITE<sp/><ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">setTail</ref>)</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a17804b7f64961c6accf25b61e85142e3" kindref="member">QCPItemLine</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a17804b7f64961c6accf25b61e85142e3" kindref="member">~QCPItemLine</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>head()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mHead;<sp/>}</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>tail()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTail;<sp/>}</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a572528dab61c1abe205822fbd5db4b27" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a3e2fec44503277e77717e9c24f87f1ea" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">setHead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;head);</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">setTail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;tail);</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1aae15b3ca3fdad76e6aed9c4e01fd5e94" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>mHead,<sp/>mTail;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/>QLineF<sp/>getRectClippedLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref><sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6470"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"></highlight></codeline>
<codeline lineno="6472"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-line.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6473"><highlight class="normal"></highlight></codeline>
<codeline lineno="6474"><highlight class="normal"></highlight></codeline>
<codeline lineno="6475"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-curve.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6476"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3401<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6477"><highlight class="normal"></highlight></codeline>
<codeline lineno="6478" refid="class_q_c_p_item_curve" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_curve_1ac9b7508bb5c8827e1a7a6199f8c82bec" kindref="member">QCPItemCurve</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_curve_1a034be908440aec785c34b92843461221" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_curve_1a375b917669f868c5a106bf2f1ab7c26d" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>head<sp/>READ<sp/>head<sp/>WRITE<sp/><ref refid="class_q_c_p_item_curve_1a08a30d9cdd63995deea3d9e20430676f" kindref="member">setHead</ref>)</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>tail<sp/>READ<sp/>tail<sp/>WRITE<sp/><ref refid="class_q_c_p_item_curve_1ac3488d8b1a6489c845dc5bff3ef71124" kindref="member">setTail</ref>)</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1ac9b7508bb5c8827e1a7a6199f8c82bec" kindref="member">QCPItemCurve</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1ac9b7508bb5c8827e1a7a6199f8c82bec" kindref="member">~QCPItemCurve</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>head()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mHead;<sp/>}</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>tail()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTail;<sp/>}</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a034be908440aec785c34b92843461221" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a375b917669f868c5a106bf2f1ab7c26d" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a08a30d9cdd63995deea3d9e20430676f" kindref="member">setHead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;head);</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1ac3488d8b1a6489c845dc5bff3ef71124" kindref="member">setTail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;tail);</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1ae5b09ad4ea7ec2d9f08190c73c39e9b9" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>startDir;</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>endDir;</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6511"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>mHead,<sp/>mTail;</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6521"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"></highlight></codeline>
<codeline lineno="6523"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-curve.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"></highlight></codeline>
<codeline lineno="6525"><highlight class="normal"></highlight></codeline>
<codeline lineno="6526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-rect.h&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3710<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6528"><highlight class="normal"></highlight></codeline>
<codeline lineno="6529" refid="class_q_c_p_item_rect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_rect_1a412ad1579f7a1fba453d0fa28c496cbc" kindref="member">QCPItemRect</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_rect_1a483c0da5a17e1646cd17ddea2c124e7d" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_rect_1a52a1bcb2dc753a538e406a2ba3cf21ce" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brush<sp/>READ<sp/>brush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_rect_1abbd4e346a03513ee466afc25d9c75446" kindref="member">setBrush</ref>)</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>selectedBrush<sp/>READ<sp/>selectedBrush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_rect_1abd1792859844118dedee86223cede7af" kindref="member">setSelectedBrush</ref>)</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a412ad1579f7a1fba453d0fa28c496cbc" kindref="member">QCPItemRect</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a412ad1579f7a1fba453d0fa28c496cbc" kindref="member">~QCPItemRect</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/>QBrush<sp/>selectedBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBrush;<sp/>}</highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a483c0da5a17e1646cd17ddea2c124e7d" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a52a1bcb2dc753a538e406a2ba3cf21ce" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1abbd4e346a03513ee466afc25d9c75446" kindref="member">setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1abd1792859844118dedee86223cede7af" kindref="member">setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a40786d237a1f8f22a90627068940ec08" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topLeft;</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomRight;</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topRight;</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottom;</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomLeft;</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6566"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>AnchorIndex<sp/>{aiTop,<sp/>aiTopRight,<sp/>aiRight,<sp/>aiBottom,<sp/>aiBottomLeft,<sp/>aiLeft};</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush,<sp/>mSelectedBrush;</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>anchorPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/>QBrush<sp/>mainBrush()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6580"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"></highlight></codeline>
<codeline lineno="6582"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-rect.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6583"><highlight class="normal"></highlight></codeline>
<codeline lineno="6584"><highlight class="normal"></highlight></codeline>
<codeline lineno="6585"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-text.h&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6586"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>5576<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6587"><highlight class="normal"></highlight></codeline>
<codeline lineno="6588" refid="class_q_c_p_item_text" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_text_1a77ff96a2972a00872ff8f8c67143abbe" kindref="member">QCPItemText</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>color<sp/>READ<sp/>color<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1aa51efc0841fe52da9eaf8aff6fc8a8b2" kindref="member">setColor</ref>)</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QColor<sp/>selectedColor<sp/>READ<sp/>selectedColor<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1ae7ba0bdb75c897b028388e45bfd435fa" kindref="member">setSelectedColor</ref>)</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a9b9ec6eea0eb0603977ff84d4c78d0a3" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a291febe586f0da3f1c392e77bef4aa20" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brush<sp/>READ<sp/>brush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a1c7e131516df2ed8d941ef31240ded8e" kindref="member">setBrush</ref>)</highlight></codeline>
<codeline lineno="6597"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>selectedBrush<sp/>READ<sp/>selectedBrush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a6b8377eeb2af75eb9528422671ac16cb" kindref="member">setSelectedBrush</ref>)</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>font<sp/>READ<sp/>font<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a94ad60ebe04f5c07c35e7c2029e96b1f" kindref="member">setFont</ref>)</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QFont<sp/>selectedFont<sp/>READ<sp/>selectedFont<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a0be2841772f83663c4db307928b82816" kindref="member">setSelectedFont</ref>)</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QString<sp/>text<sp/>READ<sp/>text<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a3dacdda0ac88f99a05b333b977c48747" kindref="member">setText</ref>)</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::Alignment<sp/>positionAlignment<sp/>READ<sp/>positionAlignment<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a781cdf8c640fc6a055dcff1e675c8c7a" kindref="member">setPositionAlignment</ref>)</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::Alignment<sp/>textAlignment<sp/>READ<sp/>textAlignment<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1ab5bc0684c4d1bed81949a11b34dba478" kindref="member">setTextAlignment</ref>)</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation<sp/>READ<sp/>rotation<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1a4bcc10cd97952c3f749d75824b5077f0" kindref="member">setRotation</ref>)</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QMargins<sp/>padding<sp/>READ<sp/>padding<sp/>WRITE<sp/><ref refid="class_q_c_p_item_text_1aeea8a3e01f135f9dd0bb08f51db66310" kindref="member">setPadding</ref>)</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a77ff96a2972a00872ff8f8c67143abbe" kindref="member">QCPItemText</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a77ff96a2972a00872ff8f8c67143abbe" kindref="member">~QCPItemText</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/>QColor<sp/>color()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColor;<sp/>}</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedColor;<sp/>}</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/>QBrush<sp/>selectedBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBrush;<sp/>}</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/>QFont<sp/>font()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFont;<sp/>}</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedFont;<sp/>}</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/>QString<sp/>text()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mText;<sp/>}</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/>Qt::Alignment<sp/>positionAlignment()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPositionAlignment;<sp/>}</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/>Qt::Alignment<sp/>textAlignment()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTextAlignment;<sp/>}</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRotation;<sp/>}</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/>QMargins<sp/>padding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPadding;<sp/>}</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1aa51efc0841fe52da9eaf8aff6fc8a8b2" kindref="member">setColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1ae7ba0bdb75c897b028388e45bfd435fa" kindref="member">setSelectedColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a9b9ec6eea0eb0603977ff84d4c78d0a3" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a291febe586f0da3f1c392e77bef4aa20" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a1c7e131516df2ed8d941ef31240ded8e" kindref="member">setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a6b8377eeb2af75eb9528422671ac16cb" kindref="member">setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a94ad60ebe04f5c07c35e7c2029e96b1f" kindref="member">setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a0be2841772f83663c4db307928b82816" kindref="member">setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a3dacdda0ac88f99a05b333b977c48747" kindref="member">setText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text);</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a781cdf8c640fc6a055dcff1e675c8c7a" kindref="member">setPositionAlignment</ref>(Qt::Alignment<sp/>alignment);</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1ab5bc0684c4d1bed81949a11b34dba478" kindref="member">setTextAlignment</ref>(Qt::Alignment<sp/>alignment);</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a4bcc10cd97952c3f749d75824b5077f0" kindref="member">setRotation</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1aeea8a3e01f135f9dd0bb08f51db66310" kindref="member">setPadding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;padding);</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a9345ae04cb0e06b77c76381ca45c9717" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>position;</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topLeft;</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topRight;</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomRight;</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottom;</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomLeft;</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>AnchorIndex<sp/>{aiTopLeft,<sp/>aiTop,<sp/>aiTopRight,<sp/>aiRight,<sp/>aiBottomRight,<sp/>aiBottom,<sp/>aiBottomLeft,<sp/>aiLeft};</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/>QColor<sp/>mColor,<sp/>mSelectedColor;</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush,<sp/>mSelectedBrush;</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/>QFont<sp/>mFont,<sp/>mSelectedFont;</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/>QString<sp/>mText;</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/>Qt::Alignment<sp/>mPositionAlignment;</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/>Qt::Alignment<sp/>mTextAlignment;</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRotation;</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/>QMargins<sp/>mPadding;</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>anchorPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/>QPointF<sp/>getTextDrawPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/>Qt::Alignment<sp/>positionAlignment)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/>QFont<sp/>mainFont()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/>QColor<sp/>mainColor()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/>QBrush<sp/>mainBrush()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"></highlight></codeline>
<codeline lineno="6679"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-text.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6680"><highlight class="normal"></highlight></codeline>
<codeline lineno="6681"><highlight class="normal"></highlight></codeline>
<codeline lineno="6682"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-ellipse.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6683"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3890<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6684"><highlight class="normal"></highlight></codeline>
<codeline lineno="6685" refid="class_q_c_p_item_ellipse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_ellipse_1a759b77ef002515eba0263b5447ecb3fb" kindref="member">QCPItemEllipse</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_ellipse_1adb81a663ed2420fcfa011e49f678d1a6" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_ellipse_1a6c542fba1dc918041c583f58a50dde99" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brush<sp/>READ<sp/>brush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_ellipse_1a49fc74e6965834e873d027d026def798" kindref="member">setBrush</ref>)</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>selectedBrush<sp/>READ<sp/>selectedBrush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_ellipse_1a9693501cfaa43a099655c75bed0dab3f" kindref="member">setSelectedBrush</ref>)</highlight></codeline>
<codeline lineno="6694"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a759b77ef002515eba0263b5447ecb3fb" kindref="member">QCPItemEllipse</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a759b77ef002515eba0263b5447ecb3fb" kindref="member">~QCPItemEllipse</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/>QBrush<sp/>selectedBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBrush;<sp/>}</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1adb81a663ed2420fcfa011e49f678d1a6" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a6c542fba1dc918041c583f58a50dde99" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a49fc74e6965834e873d027d026def798" kindref="member">setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a9693501cfaa43a099655c75bed0dab3f" kindref="member">setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a1037a6c39ad70aabcb1b552a8b4eff97" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topLeft;</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomRight;</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topLeftRim;</highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topRightRim;</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomRightRim;</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottom;</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomLeftRim;</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>center;</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6725"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>AnchorIndex<sp/>{aiTopLeftRim,<sp/>aiTop,<sp/>aiTopRightRim,<sp/>aiRight,<sp/>aiBottomRightRim,<sp/>aiBottom,<sp/>aiBottomLeftRim,<sp/>aiLeft,<sp/>aiCenter};</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush,<sp/>mSelectedBrush;</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>anchorPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/>QBrush<sp/>mainBrush()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6739"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"></highlight></codeline>
<codeline lineno="6741"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-ellipse.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6742"><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"></highlight></codeline>
<codeline lineno="6744"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-pixmap.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6745"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4407<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6746"><highlight class="normal"></highlight></codeline>
<codeline lineno="6747" refid="class_q_c_p_item_pixmap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_pixmap_1aa6de42a37261b21a5480e7da122345c3" kindref="member">QCPItemPixmap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPixmap<sp/>pixmap<sp/>READ<sp/>pixmap<sp/>WRITE<sp/><ref refid="class_q_c_p_item_pixmap_1a726b69ea4025edf48f9b29b6450548a7" kindref="member">setPixmap</ref>)</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled<sp/>READ<sp/>scaled<sp/>WRITE<sp/><ref refid="class_q_c_p_item_pixmap_1ab4d44529a1c6c8d37d0ea7560e042777" kindref="member">setScaled</ref>)</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::AspectRatioMode<sp/>aspectRatioMode<sp/>READ<sp/>aspectRatioMode)</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/>Q_PROPERTY(Qt::TransformationMode<sp/>transformationMode<sp/>READ<sp/>transformationMode)</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_pixmap_1acdade1305edb4b5cae14f97fd132065f" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_pixmap_1afc5e479e88e53740176ce77cb70dd67a" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1aa6de42a37261b21a5480e7da122345c3" kindref="member">QCPItemPixmap</ref>(QCustomPlot<sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1aa6de42a37261b21a5480e7da122345c3" kindref="member">~QCPItemPixmap</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/>QPixmap<sp/>pixmap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPixmap;<sp/>}</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScaled;<sp/>}</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>aspectRatioMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAspectRatioMode;<sp/>}</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/>Qt::TransformationMode<sp/>transformationMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTransformationMode;<sp/>}</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a726b69ea4025edf48f9b29b6450548a7" kindref="member">setPixmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap);</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1ab4d44529a1c6c8d37d0ea7560e042777" kindref="member">setScaled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>aspectRatioMode=Qt::KeepAspectRatio,<sp/>Qt::TransformationMode<sp/>transformationMode=Qt::SmoothTransformation);</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1acdade1305edb4b5cae14f97fd132065f" kindref="member">setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1afc5e479e88e53740176ce77cb70dd67a" kindref="member">setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a35f4da350e37f4d7ac8c837ad160967f" kindref="member">selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topLeft;</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomRight;</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>topRight;</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottom;</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bottomLeft;</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6788"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>AnchorIndex<sp/>{aiTop,<sp/>aiTopRight,<sp/>aiRight,<sp/>aiBottom,<sp/>aiBottomLeft,<sp/>aiLeft};</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mPixmap;</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mScaledPixmap;</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScaled;</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScaledPixmapInvalidated;</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>mAspectRatioMode;</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/>Qt::TransformationMode<sp/>mTransformationMode;</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>anchorPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateScaledPixmap(QRect<sp/>finalRect=QRect(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipHorz=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipVert=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/>QRect<sp/>getFinalRect(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*flippedHorz=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*flippedVert=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6808"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"></highlight></codeline>
<codeline lineno="6810"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-pixmap.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6811"><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"></highlight></codeline>
<codeline lineno="6813"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-tracer.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6814"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4811<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6815"><highlight class="normal"></highlight></codeline>
<codeline lineno="6816" refid="class_q_c_p_item_tracer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_tracer_1adc5ca846eeac323db4aa1fc4081e36be" kindref="member">QCPItemTracer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1af8048636fc1ef0152e51809b008df2ca" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1ae1bf70db7f13f928660168cd3e5069f3" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>brush<sp/>READ<sp/>brush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1a2c303f7470a30084daa201ed556b3c36" kindref="member">setBrush</ref>)</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QBrush<sp/>selectedBrush<sp/>READ<sp/>selectedBrush<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1a0f55c084980a7a312af859d3e7b558ef" kindref="member">setSelectedBrush</ref>)</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size<sp/>READ<sp/>size<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1ae47fe0617f5fef5fdb766999569be10a" kindref="member">setSize</ref>)</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" kindref="member">TracerStyle</ref><sp/>style<sp/>READ<sp/>style<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1a41a2ac4f1acd7897b4e2a2579c03204e" kindref="member">setStyle</ref>)</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>*<sp/>graph<sp/>READ<sp/>graph<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" kindref="member">setGraph</ref>)</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>graphKey<sp/>READ<sp/>graphKey<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref>)</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>interpolating<sp/>READ<sp/>interpolating<sp/>WRITE<sp/><ref refid="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" kindref="member">setInterpolating</ref>)</highlight></codeline>
<codeline lineno="6830"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6836" refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" kindref="member">TracerStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" kindref="member">tsNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6837" refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a3323fb04017146e4885e080a459472fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a3323fb04017146e4885e080a459472fa" kindref="member">tsPlus</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6838" refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" kindref="member">tsCrosshair</ref><sp/><sp/></highlight></codeline>
<codeline lineno="6839" refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500ae2252c28f4842880d71e9f94e69de94e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500ae2252c28f4842880d71e9f94e69de94e" kindref="member">tsCircle</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6840" refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" kindref="member">tsSquare</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/>Q_ENUMS(TracerStyle)</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"></highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer" kindref="compound">QCPItemTracer</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer" kindref="compound">~QCPItemTracer</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"></highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/>QBrush<sp/>selectedBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBrush;<sp/>}</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSize;<sp/>}</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/>TracerStyle<sp/>style()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mStyle;<sp/>}</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/>QCPGraph<sp/>*graph()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGraph;<sp/>}</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>graphKey()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGraphKey;<sp/>}</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>interpolating()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInterpolating;<sp/>}</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"></highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSize(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStyle(TracerStyle<sp/>style);</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setGraph(QCPGraph<sp/>*graph);</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setGraphKey(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInterpolating(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updatePosition();</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"></highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/>QCPItemPosition<sp/>*<sp/>const<sp/>position;</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush,<sp/>mSelectedBrush;</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mSize;</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/>TracerStyle<sp/>mStyle;</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/>QCPGraph<sp/>*mGraph;</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mGraphKey;</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInterpolating;</highlight></codeline>
<codeline lineno="6886"><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6889"><highlight class="normal"></highlight></codeline>
<codeline lineno="6890"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/>const;</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><sp/><sp/>QBrush<sp/>mainBrush()<sp/>const;</highlight></codeline>
<codeline lineno="6893"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6894"><highlight class="normal">Q_DECLARE_METATYPE(QCPItemTracer::TracerStyle)</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"></highlight></codeline>
<codeline lineno="6896"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-tracer.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6897"><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="normal"></highlight></codeline>
<codeline lineno="6899"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/items/item-bracket.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6900"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>3991<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6901"><highlight class="normal"></highlight></codeline>
<codeline lineno="6902" refid="class_q_c_p_item_bracket" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_item_bracket_1a44ecfa37a76de5e3549e2d61f9d8ee56" kindref="member">QCPItemBracket</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem</ref></highlight></codeline>
<codeline lineno="6903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6906"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>pen<sp/>READ<sp/>pen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_bracket_1ab13001d9cc5d8f9e56ea15bdda682acb" kindref="member">setPen</ref>)</highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/>Q_PROPERTY(QPen<sp/>selectedPen<sp/>READ<sp/>selectedPen<sp/>WRITE<sp/><ref refid="class_q_c_p_item_bracket_1a349785c31122778a520c64891fa204c5" kindref="member">setSelectedPen</ref>)</highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length<sp/>READ<sp/>length<sp/>WRITE<sp/><ref refid="class_q_c_p_item_bracket_1ac7cfc3da7da9b5c5ac5dfbe4f0351b2a" kindref="member">setLength</ref>)</highlight></codeline>
<codeline lineno="6909"><highlight class="normal"><sp/><sp/>Q_PROPERTY(<ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbd" kindref="member">BracketStyle</ref><sp/>style<sp/>READ<sp/>style<sp/>WRITE<sp/><ref refid="class_q_c_p_item_bracket_1a612dffa2373422eef8754d690add3703" kindref="member">setStyle</ref>)</highlight></codeline>
<codeline lineno="6911"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6918" refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbd" kindref="member">BracketStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda7f9df4a7359bfe3dac1dbe4ccf5d220c" kindref="member">bsSquare</ref><sp/><sp/></highlight></codeline>
<codeline lineno="6919" refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda394627b0830a26ee3e0a02ca67a9f918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda394627b0830a26ee3e0a02ca67a9f918" kindref="member">bsRound</ref><sp/><sp/></highlight></codeline>
<codeline lineno="6920" refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda5024ce4023c2d8de4221f1cd4816acd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda5024ce4023c2d8de4221f1cd4816acd8" kindref="member">bsCurly</ref><sp/><sp/></highlight></codeline>
<codeline lineno="6921" refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda8f29f5ef754e2dc9a9efdedb2face0f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda8f29f5ef754e2dc9a9efdedb2face0f3" kindref="member">bsCalligraphic</ref><sp/></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/>Q_ENUMS(BracketStyle)</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"></highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket" kindref="compound">QCPItemBracket</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket" kindref="compound">~QCPItemBracket</ref>()<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedPen;<sp/>}</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLength;<sp/>}</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/>BracketStyle<sp/>style()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mStyle;<sp/>}</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLength(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStyle(BracketStyle<sp/>style);</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/>QCPItemPosition<sp/>*<sp/>const<sp/>left;</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/>QCPItemPosition<sp/>*<sp/>const<sp/>right;</highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/>QCPItemAnchor<sp/>*<sp/>const<sp/>center;</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6947"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/>enum<sp/>AnchorIndex<sp/>{aiCenter};</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen,<sp/>mSelectedPen;</highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLength;</highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/>BracketStyle<sp/>mStyle;</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QPointF<sp/>anchorPixelPosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/>QPen<sp/>mainPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6960"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6961"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbd" kindref="member">QCPItemBracket::BracketStyle</ref>)</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"></highlight></codeline>
<codeline lineno="6963"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/items/item-bracket.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6964"><highlight class="normal"></highlight></codeline>
<codeline lineno="6965"><highlight class="normal"></highlight></codeline>
<codeline lineno="6966"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/polar/radialaxis.h&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6967"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>12227<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6968"><highlight class="normal"></highlight></codeline>
<codeline lineno="6969"><highlight class="normal"></highlight></codeline>
<codeline lineno="6970" refid="class_q_c_p_polar_axis_radial" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="6971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6976"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6980" refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8f" kindref="member">AngleReference</ref><sp/>{<sp/><ref refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8faefeede9b2a4a5b5c98087d91c5298ba9" kindref="member">arAbsolute</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6981" refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8fa5a6f382c9d968d96bd107b75c9a1add0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8fa5a6f382c9d968d96bd107b75c9a1add0" kindref="member">arAngularAxis</ref><sp/></highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/>Q_ENUMS(AngleReference)</highlight></codeline>
<codeline lineno="6988" refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605" kindref="member">ScaleType</ref><sp/>{<sp/><ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605ac3792de649afed8d8d70894d4e5497e9" kindref="member">stLinear</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6989" refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605a44fa891f769cd677cd2d3e3661ac0c39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605a44fa891f769cd677cd2d3e3661ac0c39" kindref="member">stLogarithmic</ref><sp/></highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/>Q_ENUMS(ScaleType)</highlight></codeline>
<codeline lineno="6996" refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908" kindref="member">SelectablePart</ref><sp/>{<sp/><ref refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908a4f6e2acf66dbfb63325f8a54c9da4fe2" kindref="member">spNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6997" refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908a4f1c9303f84a85dac58d8971de2e96bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908a4f1c9303f84a85dac58d8971de2e96bb" kindref="member">spAxis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x001<sp/><sp/></highlight></codeline>
<codeline lineno="6998" refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908a3b8e439b23e3de65635db573adf61cbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908a3b8e439b23e3de65635db573adf61cbe" kindref="member">spTickLabels</ref><sp/>=<sp/>0x002<sp/><sp/></highlight></codeline>
<codeline lineno="6999" refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908ab9e1a849edd42955e3c5fb1d57fcddbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908ab9e1a849edd42955e3c5fb1d57fcddbb" kindref="member">spAxisLabel</ref><sp/><sp/>=<sp/>0x004<sp/><sp/></highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/>Q_ENUMS(SelectablePart)</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/>Q_FLAGS(SelectableParts)</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(SelectableParts,<sp/>SelectablePart)</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LabelMode<sp/>{<sp/>lmUpright<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,lmRotated<sp/></highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/>Q_ENUMS(LabelMode)</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>QCPPolarAxisRadial(QCPPolarAxisAngular<sp/>*parent);</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~QCPPolarAxisRadial();</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeDrag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeDrag;<sp/>}</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeZoom()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeZoom;<sp/>}</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rangeZoomFactor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeZoomFactor;<sp/>}</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/>QCPPolarAxisAngular<sp/>*angularAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngularAxis;<sp/>}</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/>ScaleType<sp/>scaleType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScaleType;<sp/>}</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>range()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRange;<sp/>}</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeReversed()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeReversed;<sp/>}</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngle;<sp/>}</highlight></codeline>
<codeline lineno="7023"><highlight class="normal"><sp/><sp/>AngleReference<sp/>angleReference()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngleReference;<sp/>}</highlight></codeline>
<codeline lineno="7024" refid="class_q_c_p_polar_axis_radial_1a0c38b1920e69759bcc733975d5fbe758" refkind="member"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPAxisTicker&gt;<sp/><ref refid="class_q_c_p_polar_axis_radial_1a0c38b1920e69759bcc733975d5fbe758" kindref="member">ticker</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicker;<sp/>}</highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ticks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicks;<sp/>}</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tickLabels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabels;<sp/>}</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLabelPadding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelPainter.padding();<sp/>}</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/>QFont<sp/>tickLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/>QColor<sp/>tickLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickLabelRotation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelPainter.rotation();<sp/>}</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/>LabelMode<sp/>tickLabelMode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/>QString<sp/>numberFormat()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberPrecision()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNumberPrecision;<sp/>}</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>tickVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickVector;<sp/>}</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>subTickVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickVector;<sp/>}</highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>tickVectorLabels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickVectorLabels;<sp/>}</highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthIn()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthOut()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subTicks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTicks;<sp/>}</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthIn()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthOut()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/>QPen<sp/>basePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBasePen;<sp/>}</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/>QPen<sp/>tickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/>QPen<sp/>subTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/>QFont<sp/>labelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/>QColor<sp/>labelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7047"><highlight class="normal"><sp/><sp/>QString<sp/>label()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabel;<sp/>}</highlight></codeline>
<codeline lineno="7048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelPadding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectedParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedParts;<sp/>}</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectableParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectableParts;<sp/>}</highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedTickLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedTickLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedBasePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBasePen;<sp/>}</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedSubTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedSubTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeDrag(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeZoom(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeZoomFactor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScaleType(<ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605" kindref="member">QCPPolarAxisRadial::ScaleType</ref><sp/>type);</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range);</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size,<sp/>Qt::AlignmentFlag<sp/>alignment);</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeLower(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower);</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeUpper(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeReversed(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed);</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAngle(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAngleReference(AngleReference<sp/>reference);</highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicker(QSharedPointer&lt;QCPAxisTicker&gt;<sp/>ticker);</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabels(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelMode(LabelMode<sp/>mode);</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumberFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;formatCode);</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumberPrecision(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision);</highlight></codeline>
<codeline lineno="7083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLength(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside=0);</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLengthIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside);</highlight></codeline>
<codeline lineno="7085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLengthOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside);</highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTicks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="7087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLength(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside=0);</highlight></codeline>
<codeline lineno="7088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLengthIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside);</highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLengthOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside);</highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str);</highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedBasePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedSubTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectableParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPPolarAxisRadial::SelectableParts<sp/>&amp;selectableParts);</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPPolarAxisRadial::SelectableParts<sp/>&amp;selectedParts);</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=0)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff);</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scaleRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scaleRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center);</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescale(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisiblePlottables=false);</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pixelToCoord(QPointF<sp/>pixelPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;angleCoord,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;radiusCoord)<sp/>const;</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/>QPointF<sp/>coordToPixel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleCoord,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radiusCoord)<sp/>const;</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coordToRadius(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coord)<sp/>const;</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radiusToCoord(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius)<sp/>const;</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/>SelectablePart<sp/>getPartAt(const<sp/>QPointF<sp/>&amp;pos)<sp/>const;</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7121"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="7122" refid="class_q_c_p_polar_axis_radial_1a648fe508359f88424bc40cded6a297a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a648fe508359f88424bc40cded6a297a9" kindref="member">rangeChanged</ref>(const<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;newRange);</highlight></codeline>
<codeline lineno="7123" refid="class_q_c_p_polar_axis_radial_1a77bf79ce497ad1a37e1f56acea72cbb1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a648fe508359f88424bc40cded6a297a9" kindref="member">rangeChanged</ref>(const<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;newRange,<sp/>const<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;oldRange);</highlight></codeline>
<codeline lineno="7124" refid="class_q_c_p_polar_axis_radial_1a55de356d043a9ed33da58667144a592d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a55de356d043a9ed33da58667144a592d" kindref="member">scaleTypeChanged</ref>(<ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::<ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605" kindref="member">ScaleType</ref><sp/>scaleType);</highlight></codeline>
<codeline lineno="7125" refid="class_q_c_p_polar_axis_radial_1a5529ef54d68219392e7baa64a9303bf2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a5529ef54d68219392e7baa64a9303bf2" kindref="member">selectionChanged</ref>(const<sp/><ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::SelectableParts<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="7126" refid="class_q_c_p_polar_axis_radial_1ad003adb089e7430fbfb1b71c7ca4b72d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1ad003adb089e7430fbfb1b71c7ca4b72d" kindref="member">selectableChanged</ref>(const<sp/><ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::SelectableParts<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"></highlight></codeline>
<codeline lineno="7128"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeDrag;</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeZoom;</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRangeZoomFactor;</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>base:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/>QCPPolarAxisAngular<sp/>*mAngularAxis;</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mAngle;</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8f" kindref="member">AngleReference</ref><sp/>mAngleReference;</highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>mSelectableParts,<sp/>mSelectedParts;</highlight></codeline>
<codeline lineno="7139"><highlight class="normal"><sp/><sp/>QPen<sp/>mBasePen,<sp/>mSelectedBasePen;</highlight></codeline>
<codeline lineno="7140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>label:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLabelPadding;</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/>QString<sp/>mLabel;</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/>QFont<sp/>mLabelFont,<sp/>mSelectedLabelFont;</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/>QColor<sp/>mLabelColor,<sp/>mSelectedLabelColor;</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>labels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>mTickLabelPadding;<sp/>in<sp/>label<sp/>painter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTickLabels;</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>mTickLabelRotation;<sp/>in<sp/>label<sp/>painter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/>QFont<sp/>mTickLabelFont,<sp/>mSelectedTickLabelFont;</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/>QColor<sp/>mTickLabelColor,<sp/>mSelectedTickLabelColor;</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumberPrecision;</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/>QLatin1Char<sp/>mNumberFormatChar;</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mNumberBeautifulPowers;</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mNumberMultiplyCross;</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ticks<sp/>and<sp/>subticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTicks;</highlight></codeline>
<codeline lineno="7157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSubTicks;</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mTickLengthIn,<sp/>mTickLengthOut,<sp/>mSubTickLengthIn,<sp/>mSubTickLengthOut;</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/>QPen<sp/>mTickPen,<sp/>mSelectedTickPen;</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/>QPen<sp/>mSubTickPen,<sp/>mSelectedSubTickPen;</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>and<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mRange;</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeReversed;</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605" kindref="member">ScaleType</ref><sp/>mScaleType;</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/>QPointF<sp/>mCenter;</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRadius;</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;<ref refid="class_q_c_p_axis_ticker" kindref="compound">QCPAxisTicker</ref>&gt;<sp/>mTicker;</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/>QVector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>mTickVector;</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>mTickVectorLabels;</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/>QVector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>mSubTickVector;</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDragging;</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mDragStartRange;</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::AntialiasedElements<sp/>mAADragBackup,<sp/>mNotAADragBackup;</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_label_painter_private" kindref="compound">QCPLabelPainterPrivate</ref><sp/>mLabelPainter;</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::Interaction<sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/>const<sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mouse<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a0fa3d3c617a57b4115b9bec55b739f88" kindref="member">mousePressEvent</ref>(QMouseEvent<sp/>*event,<sp/>const<sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1acaaca448f4599cc4d8b4d6a35f61e1e6" kindref="member">mouseMoveEvent</ref>(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1a4fbf24f4373f8a4a740ab83b53a22c85" kindref="member">mouseReleaseEvent</ref>(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_radial_1ab495743f9f7412a109af0b0065a7b9ae" kindref="member">wheelEvent</ref>(QWheelEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateGeometry(const<sp/>QPointF<sp/>&amp;center,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius);</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupTickVectors();</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/>QPen<sp/>getBasePen()<sp/>const;</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/>QPen<sp/>getTickPen()<sp/>const;</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/>QPen<sp/>getSubTickPen()<sp/>const;</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/>QFont<sp/>getTickLabelFont()<sp/>const;</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/>QFont<sp/>getLabelFont()<sp/>const;</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/>QColor<sp/>getTickLabelColor()<sp/>const;</highlight></codeline>
<codeline lineno="7200"><highlight class="normal"><sp/><sp/>QColor<sp/>getLabelColor()<sp/>const;</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7202"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(<ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>)</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPPolarAxisAngular;</highlight></codeline>
<codeline lineno="7207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7208"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(<ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::SelectableParts)</highlight></codeline>
<codeline lineno="7209"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::<ref refid="class_q_c_p_polar_axis_radial_1a4d8fb5dd2c412b2e3b4d23940698fc8f" kindref="member">AngleReference</ref>)</highlight></codeline>
<codeline lineno="7210"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::<ref refid="class_q_c_p_polar_axis_radial_1a2e208d6eac26cd5abecc075ff2e5e605" kindref="member">ScaleType</ref>)</highlight></codeline>
<codeline lineno="7211"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_polar_axis_radial_1acd7247b9f2196e1053f236b950a13b60" kindref="member">QCPPolarAxisRadial</ref>::<ref refid="class_q_c_p_polar_axis_radial_1ad022e747b5fc6aeaa6ff3587eee22908" kindref="member">SelectablePart</ref>)</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"></highlight></codeline>
<codeline lineno="7213"><highlight class="normal"></highlight></codeline>
<codeline lineno="7214"><highlight class="normal"></highlight></codeline>
<codeline lineno="7215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/polar/radialaxis.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7216"><highlight class="normal"></highlight></codeline>
<codeline lineno="7217"><highlight class="normal"></highlight></codeline>
<codeline lineno="7218"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/polar/layoutelement-angularaxis.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7219"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>13461<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7220"><highlight class="normal"></highlight></codeline>
<codeline lineno="7221" refid="class_q_c_p_polar_axis_angular" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_polar_axis_angular_1afd2ca3525663193c15bc876a293ceb24" kindref="member">QCPPolarAxisAngular</ref><sp/>:<sp/>public<sp/><ref refid="class_q_c_p_layout_element_1a2c25c7bf27eaa1fad66807af855d8d81" kindref="member">QCPLayoutElement</ref></highlight></codeline>
<codeline lineno="7222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7227"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7232" refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416" kindref="member">SelectablePart</ref><sp/>{<sp/><ref refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416a4cde0e8357b4ed68dd516694a347b232" kindref="member">spNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7233" refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416ab9b6df5346d143a9dca613dd392b4dc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416ab9b6df5346d143a9dca613dd392b4dc9" kindref="member">spAxis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x001<sp/><sp/></highlight></codeline>
<codeline lineno="7234" refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416a1e3a22b6fbffd2b0c4e561b31cce97c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416a1e3a22b6fbffd2b0c4e561b31cce97c5" kindref="member">spTickLabels</ref><sp/>=<sp/>0x002<sp/><sp/></highlight></codeline>
<codeline lineno="7235" refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416ad78c53954aaca5647d0ce10f843601f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_axis_angular_1a342afffd77fa1e8b30778b29a26eb416ad78c53954aaca5647d0ce10f843601f8" kindref="member">spAxisLabel</ref><sp/><sp/>=<sp/>0x004<sp/><sp/></highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/>Q_ENUMS(SelectablePart)</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/>Q_FLAGS(SelectableParts)</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(SelectableParts,<sp/>SelectablePart)</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7244" refid="class_q_c_p_polar_axis_angular_1ad9d85ec7a6b5febe6c27ab54fdd46397" refkind="member"><highlight class="normal"><sp/><sp/>enum<sp/><ref refid="class_q_c_p_polar_axis_angular_1ad9d85ec7a6b5febe6c27ab54fdd46397" kindref="member">LabelMode</ref><sp/>{<sp/>lmUpright<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,lmRotated<sp/></highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/>Q_ENUMS(LabelMode)</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular" kindref="compound">QCPPolarAxisAngular</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot);</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular" kindref="compound">~QCPPolarAxisAngular</ref>();</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/>QPixmap<sp/>background()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundPixmap;<sp/>}</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/>QBrush<sp/>backgroundBrush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundBrush;<sp/>}</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backgroundScaled()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundScaled;<sp/>}</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>backgroundScaledMode()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBackgroundScaledMode;<sp/>}</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeDrag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeDrag;<sp/>}</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeZoom()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeZoom;<sp/>}</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rangeZoomFactor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeZoomFactor;<sp/>}</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>range()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRange;<sp/>}</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rangeReversed()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRangeReversed;<sp/>}</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngle;<sp/>}</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPAxisTicker&gt;<sp/>ticker()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicker;<sp/>}</highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ticks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTicks;<sp/>}</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tickLabels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabels;<sp/>}</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLabelPadding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelPainter.padding();<sp/>}</highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/>QFont<sp/>tickLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/>QColor<sp/>tickLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickLabelRotation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelPainter.rotation();<sp/>}</highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/>LabelMode<sp/>tickLabelMode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/>QString<sp/>numberFormat()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberPrecision()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNumberPrecision;<sp/>}</highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>tickVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickVector;<sp/>}</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>tickVectorLabels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickVectorLabels;<sp/>}</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthIn()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLengthIn;<sp/>}</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickLengthOut()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickLengthOut;<sp/>}</highlight></codeline>
<codeline lineno="7278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subTicks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTicks;<sp/>}</highlight></codeline>
<codeline lineno="7279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthIn()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickLengthIn;<sp/>}</highlight></codeline>
<codeline lineno="7280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickLengthOut()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickLengthOut;<sp/>}</highlight></codeline>
<codeline lineno="7281"><highlight class="normal"><sp/><sp/>QPen<sp/>basePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBasePen;<sp/>}</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"><sp/><sp/>QPen<sp/>tickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"><sp/><sp/>QPen<sp/>subTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/>QFont<sp/>labelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/>QColor<sp/>labelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7286"><highlight class="normal"><sp/><sp/>QString<sp/>label()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabel;<sp/>}</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelPadding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabelPadding;<sp/>}</highlight></codeline>
<codeline lineno="7288"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectedParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedParts;<sp/>}</highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selectableParts()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectableParts;<sp/>}</highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedTickLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"><sp/><sp/>QFont<sp/>selectedLabelFont()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedLabelFont;<sp/>}</highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedTickLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7293"><highlight class="normal"><sp/><sp/>QColor<sp/>selectedLabelColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedLabelColor;<sp/>}</highlight></codeline>
<codeline lineno="7294"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedBasePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedBasePen;<sp/>}</highlight></codeline>
<codeline lineno="7295"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7296"><highlight class="normal"><sp/><sp/>QPen<sp/>selectedSubTickPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectedSubTickPen;<sp/>}</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/>QCPPolarGrid<sp/>*grid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGrid;<sp/>}</highlight></codeline>
<codeline lineno="7298"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm);</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>mode=Qt::KeepAspectRatioByExpanding);</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackgroundScaled(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled);</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBackgroundScaledMode(Qt::AspectRatioMode<sp/>mode);</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeDrag(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeZoom(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeZoomFactor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;range);</highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size,<sp/>Qt::AlignmentFlag<sp/>alignment);</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeLower(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower);</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeUpper(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper);</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeReversed(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed);</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAngle(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicker(QSharedPointer&lt;QCPAxisTicker&gt;<sp/>ticker);</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabels(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLabelMode(LabelMode<sp/>mode);</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumberFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;formatCode);</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumberPrecision(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision);</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLength(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside=0);</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLengthIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside);</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickLengthOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside);</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTicks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLength(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside=0);</highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLengthIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside);</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickLengthOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside);</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str);</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelPadding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLabelPosition(Qt::AlignmentFlag<sp/>position);</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedLabelFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font);</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedLabelColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color);</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedBasePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedSubTickPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectableParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPPolarAxisAngular::SelectableParts<sp/>&amp;selectableParts);</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectedParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPPolarAxisAngular::SelectableParts<sp/>&amp;selectedParts);</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=0)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(UpdatePhase<sp/>phase)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/>virtual<sp/>QList&lt;QCPLayoutElement*&gt;<sp/>elements(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeGraph(QCPPolarGraph<sp/>*graph);</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radialAxisCount()<sp/>const;</highlight></codeline>
<codeline lineno="7359"><highlight class="normal"><sp/><sp/>QCPPolarAxisRadial<sp/>*radialAxis(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index=0)<sp/>const;</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/>QList&lt;QCPPolarAxisRadial*&gt;<sp/>radialAxes()<sp/>const;</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/>QCPPolarAxisRadial<sp/>*addRadialAxis(QCPPolarAxisRadial<sp/>*axis=0);</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeRadialAxis(QCPPolarAxisRadial<sp/>*axis);</highlight></codeline>
<codeline lineno="7363" refid="class_q_c_p_polar_axis_angular_1aab81c173315a73725150010a1893a17d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref><sp/>*<ref refid="class_q_c_p_polar_axis_angular_1aab81c173315a73725150010a1893a17d" kindref="member">insetLayout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInsetLayout;<sp/>}</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/>QRegion<sp/>exactClipRegion()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff);</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scaleRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor);</highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scaleRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center);</highlight></codeline>
<codeline lineno="7369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescale(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisiblePlottables=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coordToAngleRad(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coord)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngleRad+(coord-mRange.lower)/mRange.<ref refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" kindref="member">size</ref>()*(mRangeReversed<sp/>?<sp/>-2.0*<ref refid="angle__deg_8cpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>:<sp/>2.0*<ref refid="angle__deg_8cpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>mention<sp/>in<sp/>doc<sp/>that<sp/>return<sp/>doesn&apos;t<sp/>wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleRadToCoord(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleRad)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRange.lower+(angleRad-mAngleRad)/(mRangeReversed<sp/>?<sp/>-2.0*<ref refid="angle__deg_8cpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>:<sp/>2.0*<ref refid="angle__deg_8cpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)*mRange.<ref refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pixelToCoord(QPointF<sp/>pixelPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;angleCoord,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;radiusCoord)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/>QPointF<sp/>coordToPixel(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleCoord,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radiusCoord)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/>SelectablePart<sp/>getPartAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read-only<sp/>interface<sp/>imitating<sp/>a<sp/>QRect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7377" refid="class_q_c_p_polar_axis_angular_1a277a8803e452cbfa100f27f37cae1b14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1a277a8803e452cbfa100f27f37cae1b14" kindref="member">left</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.left();<sp/>}</highlight></codeline>
<codeline lineno="7378" refid="class_q_c_p_polar_axis_angular_1ab5d7d189cffd21294a23ece4f1cd9ca8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1ab5d7d189cffd21294a23ece4f1cd9ca8" kindref="member">right</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.right();<sp/>}</highlight></codeline>
<codeline lineno="7379" refid="class_q_c_p_polar_axis_angular_1acda4f07fde44972d0f70e939b0224f6a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1acda4f07fde44972d0f70e939b0224f6a" kindref="member">top</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.top();<sp/>}</highlight></codeline>
<codeline lineno="7380" refid="class_q_c_p_polar_axis_angular_1a99358487c1c025b9cf18dc22cc322c3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1a99358487c1c025b9cf18dc22cc322c3b" kindref="member">bottom</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.bottom();<sp/>}</highlight></codeline>
<codeline lineno="7381" refid="class_q_c_p_polar_axis_angular_1abde756ec197666d7ee91eee11bc7c6d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1abde756ec197666d7ee91eee11bc7c6d5" kindref="member">width</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.width();<sp/>}</highlight></codeline>
<codeline lineno="7382" refid="class_q_c_p_polar_axis_angular_1a1134ccb64704bf7b99ec99041a89ecf2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_axis_angular_1a1134ccb64704bf7b99ec99041a89ecf2" kindref="member">height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.height();<sp/>}</highlight></codeline>
<codeline lineno="7383" refid="class_q_c_p_polar_axis_angular_1a1513b98be721e6f8abb75aa49932cf20" refkind="member"><highlight class="normal"><sp/><sp/>QSize<sp/><ref refid="class_q_c_p_polar_axis_angular_1a1513b98be721e6f8abb75aa49932cf20" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.size();<sp/>}</highlight></codeline>
<codeline lineno="7384" refid="class_q_c_p_polar_axis_angular_1a70a1d0d6bd2a8ba43eed9f5de2c67f1c" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_polar_axis_angular_1a70a1d0d6bd2a8ba43eed9f5de2c67f1c" kindref="member">topLeft</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.topLeft();<sp/>}</highlight></codeline>
<codeline lineno="7385" refid="class_q_c_p_polar_axis_angular_1a6c8996dd4ae16f1df9c7269ef970d40b" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_polar_axis_angular_1a6c8996dd4ae16f1df9c7269ef970d40b" kindref="member">topRight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.topRight();<sp/>}</highlight></codeline>
<codeline lineno="7386" refid="class_q_c_p_polar_axis_angular_1a7342e0dd62b71f81b993c38db6fa4d5b" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_polar_axis_angular_1a7342e0dd62b71f81b993c38db6fa4d5b" kindref="member">bottomLeft</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.bottomLeft();<sp/>}</highlight></codeline>
<codeline lineno="7387" refid="class_q_c_p_polar_axis_angular_1af55ce49c9820e3057d220f51bc3504ab" refkind="member"><highlight class="normal"><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_polar_axis_angular_1af55ce49c9820e3057d220f51bc3504ab" kindref="member">bottomRight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRect.bottomRight();<sp/>}</highlight></codeline>
<codeline lineno="7388" refid="class_q_c_p_polar_axis_angular_1a2543f064aba8787535cb497f1cf21cbb" refkind="member"><highlight class="normal"><sp/><sp/>QPointF<sp/><ref refid="class_q_c_p_polar_axis_angular_1a2543f064aba8787535cb497f1cf21cbb" kindref="member">center</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCenter;<sp/>}</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRadius;<sp/>}</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7391"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rangeChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;newRange);</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rangeChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;newRange,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;oldRange);</highlight></codeline>
<codeline lineno="7394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectionChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPPolarAxisAngular::SelectableParts<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectableChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPPolarAxisAngular::SelectableParts<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7397"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBackgroundBrush;</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mBackgroundPixmap;</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/>QPixmap<sp/>mScaledBackgroundPixmap;</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mBackgroundScaled;</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/>Qt::AspectRatioMode<sp/>mBackgroundScaledMode;</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/>QCPLayoutInset<sp/>*mInsetLayout;</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeDrag;</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeZoom;</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRangeZoomFactor;</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>base:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mAngle,<sp/>mAngleRad;</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>mSelectableParts,<sp/>mSelectedParts;</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/>QPen<sp/>mBasePen,<sp/>mSelectedBasePen;</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>label:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLabelPadding;</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/>QString<sp/>mLabel;</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/>QFont<sp/>mLabelFont,<sp/>mSelectedLabelFont;</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/>QColor<sp/>mLabelColor,<sp/>mSelectedLabelColor;</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>labels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>mTickLabelPadding;<sp/>in<sp/>label<sp/>painter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTickLabels;</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>mTickLabelRotation;<sp/>in<sp/>label<sp/>painter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/>QFont<sp/>mTickLabelFont,<sp/>mSelectedTickLabelFont;</highlight></codeline>
<codeline lineno="7423"><highlight class="normal"><sp/><sp/>QColor<sp/>mTickLabelColor,<sp/>mSelectedTickLabelColor;</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumberPrecision;</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"><sp/><sp/>QLatin1Char<sp/>mNumberFormatChar;</highlight></codeline>
<codeline lineno="7426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mNumberBeautifulPowers;</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mNumberMultiplyCross;</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ticks<sp/>and<sp/>subticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTicks;</highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSubTicks;</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mTickLengthIn,<sp/>mTickLengthOut,<sp/>mSubTickLengthIn,<sp/>mSubTickLengthOut;</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/>QPen<sp/>mTickPen,<sp/>mSelectedTickPen;</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/>QPen<sp/>mSubTickPen,<sp/>mSelectedSubTickPen;</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>and<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/>QCPRange<sp/>mRange;</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mRangeReversed;</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/>QPointF<sp/>mCenter;</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mRadius;</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/>QList&lt;QCPPolarAxisRadial*&gt;<sp/>mRadialAxes;</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/>QCPPolarGrid<sp/>*mGrid;</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/>QList&lt;QCPPolarGraph*&gt;<sp/>mGraphs;</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPAxisTicker&gt;<sp/>mTicker;</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>mTickVector;</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/>mTickVectorLabels;</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>mTickVectorCosSin;</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>mSubTickVector;</highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>mSubTickVectorCosSin;</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDragging;</highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/>QCPRange<sp/>mDragAngularStart;</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/>QList&lt;QCPRange&gt;<sp/>mDragRadialStart;</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/>QCP::AntialiasedElements<sp/>mAADragBackup,<sp/>mNotAADragBackup;</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/>QCPLabelPainterPrivate<sp/>mLabelPainter;</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(QCPPainter<sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>selectionCategory()<sp/>const<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mousePressEvent(QMouseEvent<sp/>*event,<sp/>const<sp/>QVariant<sp/>&amp;details)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseMoveEvent(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseReleaseEvent(QMouseEvent<sp/>*event,<sp/>const<sp/>QPointF<sp/>&amp;startPos)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wheelEvent(QWheelEvent<sp/>*event)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registerPolarGraph(QCPPolarGraph<sp/>*graph);</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawBackground(QCPPainter<sp/>*painter,<sp/>const<sp/>QPointF<sp/>&amp;center,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius);</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupTickVectors();</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/>QPen<sp/>getBasePen()<sp/>const;</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/>QPen<sp/>getTickPen()<sp/>const;</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/>QPen<sp/>getSubTickPen()<sp/>const;</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/>QFont<sp/>getTickLabelFont()<sp/>const;</highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/>QFont<sp/>getLabelFont()<sp/>const;</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"><sp/><sp/>QColor<sp/>getTickLabelColor()<sp/>const;</highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/>QColor<sp/>getLabelColor()<sp/>const;</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7478"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="7479"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(QCPPolarAxisAngular)</highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7481"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCustomPlot;</highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPPolarGrid;</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/>friend<sp/>class<sp/>QCPPolarGraph;</highlight></codeline>
<codeline lineno="7484"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7485"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPolarAxisAngular::SelectableParts)</highlight></codeline>
<codeline lineno="7486"><highlight class="normal">Q_DECLARE_METATYPE(QCPPolarAxisAngular::SelectablePart)</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"></highlight></codeline>
<codeline lineno="7488"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/polar/layoutelement-angularaxis.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7489"><highlight class="normal"></highlight></codeline>
<codeline lineno="7490"><highlight class="normal"></highlight></codeline>
<codeline lineno="7491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/polar/polargrid.h&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7492"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>4506<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7493"><highlight class="normal"></highlight></codeline>
<codeline lineno="7494" refid="class_q_c_p_polar_grid" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/><ref refid="class_q_c_p_polar_grid_1a013aac4264fd5e00c5c39f2e426d3b31" kindref="member">QCPPolarGrid</ref><sp/>:public<sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="7495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7500"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7504" refid="class_q_c_p_polar_grid_1a58c68f0d47bdf4614dc4017d51876bc2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_grid_1a58c68f0d47bdf4614dc4017d51876bc2" kindref="member">GridType</ref><sp/>{<sp/>gtAngular<sp/>=<sp/>0x01<sp/></highlight></codeline>
<codeline lineno="7505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,gtRadial<sp/>=<sp/>0x02<sp/></highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,gtAll<sp/><sp/><sp/><sp/>=<sp/>0xFF<sp/></highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,gtNone<sp/><sp/><sp/>=<sp/>0x00<sp/></highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/>Q_ENUMS(GridType)</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/>Q_FLAGS(GridTypes)</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/>Q_DECLARE_FLAGS(GridTypes,<sp/>GridType)</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_grid" kindref="compound">QCPPolarGrid</ref>(<ref refid="class_q_c_p_polar_axis_angular" kindref="compound">QCPPolarAxisAngular</ref><sp/>*parentAxis);</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_polar_axis_radial" kindref="compound">QCPPolarAxisRadial</ref><sp/>*radialAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRadialAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/>GridTypes<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mType;<sp/>}</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/>GridTypes<sp/>subGridType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSubGridType;<sp/>}</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedSubGrid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedSubGrid;<sp/>}</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedZeroLine()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedZeroLine;<sp/>}</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/>QPen<sp/>angularPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngularPen;<sp/>}</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/>QPen<sp/>angularSubGridPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAngularSubGridPen;<sp/>}</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/>QPen<sp/>radialPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRadialPen;<sp/>}</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/>QPen<sp/>radialSubGridPen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRadialSubGridPen;<sp/>}</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/>QPen<sp/>radialZeroLinePen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRadialZeroLinePen;<sp/>}</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRadialAxis(QCPPolarAxisRadial<sp/>*axis);</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setType(GridTypes<sp/>type);</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubGridType(GridTypes<sp/>type);</highlight></codeline>
<codeline lineno="7531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasedSubGrid(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasedZeroLine(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAngularPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAngularSubGridPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRadialPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRadialSubGridPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRadialZeroLinePen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7539"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7541"><highlight class="normal"><sp/><sp/>GridTypes<sp/>mType;</highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/>GridTypes<sp/>mSubGridType;</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAntialiasedSubGrid,<sp/>mAntialiasedZeroLine;</highlight></codeline>
<codeline lineno="7544"><highlight class="normal"><sp/><sp/>QPen<sp/>mAngularPen,<sp/>mAngularSubGridPen;</highlight></codeline>
<codeline lineno="7545"><highlight class="normal"><sp/><sp/>QPen<sp/>mRadialPen,<sp/>mRadialSubGridPen,<sp/>mRadialZeroLinePen;</highlight></codeline>
<codeline lineno="7546"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7548"><highlight class="normal"><sp/><sp/>QCPPolarAxisAngular<sp/>*mParentAxis;</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPPolarAxisRadial&gt;<sp/>mRadialAxis;</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(QCPPainter<sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawRadialGrid(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;center,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;zeroPen=Qt::NoPen);</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawAngularGrid(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;center,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>&amp;ticksCosSin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7559"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(QCPPolarGrid)</highlight></codeline>
<codeline lineno="7561"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7562"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"></highlight></codeline>
<codeline lineno="7564"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPolarGrid::GridTypes)</highlight></codeline>
<codeline lineno="7565"><highlight class="normal">Q_DECLARE_METATYPE(<ref refid="class_q_c_p_polar_grid_1a58c68f0d47bdf4614dc4017d51876bc2" kindref="member">QCPPolarGrid::GridType</ref>)</highlight></codeline>
<codeline lineno="7566"><highlight class="normal"></highlight></codeline>
<codeline lineno="7567"><highlight class="normal"></highlight></codeline>
<codeline lineno="7568"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/polar/polargrid.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7569"><highlight class="normal"></highlight></codeline>
<codeline lineno="7570"><highlight class="normal"></highlight></codeline>
<codeline lineno="7571"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>including<sp/>file<sp/>&apos;src/polar/polargraph.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7572"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modified<sp/>2021-03-29T02:30:44,<sp/>size<sp/>9606<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7573"><highlight class="normal"></highlight></codeline>
<codeline lineno="7574"><highlight class="normal"></highlight></codeline>
<codeline lineno="7575" refid="class_q_c_p_polar_legend_item" refkind="compound"><highlight class="normal">class<sp/>QCP_LIB_DECL<sp/>QCPPolarLegendItem<sp/>:<sp/>public<sp/><ref refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" kindref="member">QCPAbstractLegendItem</ref></highlight></codeline>
<codeline lineno="7576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7577"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="7578"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/>QCPPolarLegendItem(QCPLegend<sp/>*parent,<sp/><ref refid="class_q_c_p_polar_graph" kindref="compound">QCPPolarGraph</ref><sp/>*graph);</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_polar_graph" kindref="compound">QCPPolarGraph</ref><sp/>*polarGraph()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPolarGraph;<sp/>}</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7584"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_polar_graph" kindref="compound">QCPPolarGraph</ref><sp/>*mPolarGraph;</highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reimplemented<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)<sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QSize<sp/><ref refid="class_q_c_p_polar_legend_item_1a17e2c0da8308a014b1d4339131215217" kindref="member">minimumOuterSizeHint</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Q_DECL_OVERRIDE;</highlight></codeline>
<codeline lineno="7591"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/>QPen<sp/>getIconBorderPen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/>QColor<sp/>getTextColor()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/>QFont<sp/>getFont()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7596"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"></highlight></codeline>
<codeline lineno="7598"><highlight class="normal"></highlight></codeline>
<codeline lineno="7599" refid="class_q_c_p_polar_graph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCP_LIB_DECL<sp/><ref refid="class_q_c_p_polar_graph_1a1eb4ee188eccf0e76e805af62352e7e8" kindref="member">QCPPolarGraph</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" kindref="member">QCPLayerable</ref></highlight></codeline>
<codeline lineno="7600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7605"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7611" refid="class_q_c_p_polar_graph_1a1970d7ea3fb60006fad24ce3218e4b40" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_graph_1a1970d7ea3fb60006fad24ce3218e4b40" kindref="member">LineStyle</ref><sp/>{<sp/><ref refid="class_q_c_p_polar_graph_1a1970d7ea3fb60006fad24ce3218e4b40a2015a1b1471431d25ddcf35cc6fdef56" kindref="member">lsNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7613" refid="class_q_c_p_polar_graph_1a1970d7ea3fb60006fad24ce3218e4b40af2efc561134fbc2c971a499877a9449d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<ref refid="class_q_c_p_polar_graph_1a1970d7ea3fb60006fad24ce3218e4b40af2efc561134fbc2c971a499877a9449d" kindref="member">lsLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/>Q_ENUMS(LineStyle)</highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_polar_graph" kindref="compound">QCPPolarGraph</ref>(<ref refid="class_q_c_p_polar_axis_angular" kindref="compound">QCPPolarAxisAngular</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_polar_axis_radial" kindref="compound">QCPPolarAxisRadial</ref><sp/>*valueAxis);</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_polar_graph" kindref="compound">~QCPPolarGraph</ref>();</highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/>QString<sp/>name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;<sp/>}</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedFill()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedFill;<sp/>}</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasedScatters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAntialiasedScatters;<sp/>}</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/>QPen<sp/>pen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPen;<sp/>}</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBrush;<sp/>}</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>periodic()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPeriodic;<sp/>}</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/>QCPPolarAxisAngular<sp/>*keyAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mKeyAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/>QCPPolarAxisRadial<sp/>*valueAxis()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mValueAxis.data();<sp/>}</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectable;<sp/>}</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!mSelection.<ref refid="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9" kindref="member">isEmpty</ref>();<sp/>}</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/>QCPDataSelection<sp/>selection()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelection;<sp/>}</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//QCPSelectionDecorator<sp/>*selectionDecorator()<sp/>const<sp/>{<sp/>return<sp/>mSelectionDecorator;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7633"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPGraphDataContainer&gt;<sp/>data()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDataContainer;<sp/>}</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/>LineStyle<sp/>lineStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineStyle;<sp/>}</highlight></codeline>
<codeline lineno="7635"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>scatterStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mScatterStyle;<sp/>}</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasedFill(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialiasedScatters(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen);</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBrush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush);</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPeriodic(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setKeyAxis(QCPPolarAxisAngular<sp/>*axis);</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setValueAxis(QCPPolarAxisRadial<sp/>*axis);</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelectable(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable);</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/>Q_SLOT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSelection(QCPDataSelection<sp/>selection);</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//void<sp/>setSelectionDecorator(QCPSelectionDecorator<sp/>*decorator);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(QSharedPointer&lt;QCPGraphDataContainer&gt;<sp/>data);</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineStyle(LineStyle<sp/>ls);</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScatterStyle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle<sp/>&amp;style);</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"></highlight></codeline>
<codeline lineno="7654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-property<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alreadySorted=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="7657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coordsToPixels(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>coordsToPixels(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pixelsToCoords(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pixelsToCoords(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescaleAxes(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescaleKeyAxis(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rescaleValueAxis(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inKeyRange=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addToLegend(QCPLegend<sp/>*legend);</highlight></codeline>
<codeline lineno="7665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addToLegend();</highlight></codeline>
<codeline lineno="7666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeFromLegend(QCPLegend<sp/>*legend)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeFromLegend()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>selectTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details=0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>introduced<sp/>in<sp/>QCPLayerable<sp/>as<sp/>non-pure,<sp/>but<sp/>we<sp/>want<sp/>to<sp/>force<sp/>reimplementation<sp/>for<sp/>plottables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPPlottableInterface1D<sp/>*interface1D()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>return<sp/>this<sp/>later,<sp/>when<sp/>QCPAbstractPolarPlottable<sp/>is<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPRange<sp/>getKeyRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>inSignDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QCPRange<sp/>getValueRange(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" kindref="member">QCP::SignDomain</ref><sp/>inSignDomain=<ref refid="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" kindref="member">QCP::sdBoth</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPRange<sp/>&amp;inKeyRange=QCPRange())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7675"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectionChanged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected);</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectionChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPDataSelection<sp/>&amp;selection);</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectableChanged(<ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>selectable);</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7680"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/>QSharedPointer&lt;QCPGraphDataContainer&gt;<sp/>mDataContainer;</highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/>LineStyle<sp/>mLineStyle;</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/>QCPScatterStyle<sp/>mScatterStyle;</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/>QString<sp/>mName;</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAntialiasedFill,<sp/>mAntialiasedScatters;</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/>QPen<sp/>mPen;</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/>QBrush<sp/>mBrush;</highlight></codeline>
<codeline lineno="7689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mPeriodic;</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPPolarAxisAngular&gt;<sp/>mKeyAxis;</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/>QPointer&lt;QCPPolarAxisRadial&gt;<sp/>mValueAxis;</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" kindref="member">QCP::SelectionType</ref><sp/>mSelectable;</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/>QCPDataSelection<sp/>mSelection;</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//QCPSelectionDecorator<sp/>*mSelectionDecorator;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods<sp/>(later<sp/>reimplemented<sp/>TODO<sp/>from<sp/>QCPAbstractPolarPlottable):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QRect<sp/>clipRect()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QCPPainter<sp/>*painter);</highlight></codeline>
<codeline lineno="7699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>selectionCategory()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyDefaultAntialiasingHint(QCPPainter<sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>selectEvent(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged);</highlight></codeline>
<codeline lineno="7703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deselectEvent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged);</highlight></codeline>
<codeline lineno="7704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>drawing<sp/>helpers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLinePlot(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>&amp;lines)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawFill(QCPPainter<sp/>*painter,<sp/>QVector&lt;QPointF&gt;<sp/>*lines)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawScatterPlot(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>&amp;scatters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPScatterStyle<sp/>&amp;style)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7708"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLegendIcon(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-virtual<sp/>methods:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyFillAntialiasingHint(QCPPainter<sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyScattersAntialiasingHint(QCPPainter<sp/>*painter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPoint,<sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;closestData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>drawing<sp/>helpers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDataSegments(QList&lt;QCPDataRange&gt;<sp/>&amp;selectedSegments,<sp/>QList&lt;QCPDataRange&gt;<sp/>&amp;unselectedSegments)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawPolyline(QCPPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>&amp;lineData)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVisibleDataBounds(QCPGraphDataContainer::const_iterator<sp/>&amp;begin,<sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPDataRange<sp/>&amp;rangeRestriction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getLines(QVector&lt;QPointF&gt;<sp/>*lines,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPDataRange<sp/>&amp;dataRange)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getScatters(QVector&lt;QPointF&gt;<sp/>*scatters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPDataRange<sp/>&amp;dataRange)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getOptimizedLineData(QVector&lt;QCPGraphData&gt;<sp/>*lineData,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPGraphDataContainer::const_iterator<sp/>&amp;end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getOptimizedScatterData(QVector&lt;QCPGraphData&gt;<sp/>*scatterData,<sp/>QCPGraphDataContainer::const_iterator<sp/>begin,<sp/>QCPGraphDataContainer::const_iterator<sp/>end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>dataToLines(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QCPGraphData&gt;<sp/>&amp;data)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"></highlight></codeline>
<codeline lineno="7727"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/>Q_DISABLE_COPY(QCPPolarGraph)</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QCPPolarLegendItem;</highlight></codeline>
<codeline lineno="7731"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"></highlight></codeline>
<codeline lineno="7733"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>&apos;src/polar/polargraph.h&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7734"><highlight class="normal"></highlight></codeline>
<codeline lineno="7735"><highlight class="normal"></highlight></codeline>
<codeline lineno="7736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>QCUSTOMPLOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7737"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="qcustomplot.h"/>
  </compounddef>
</doxygen>
