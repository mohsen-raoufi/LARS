<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_item_tracer" kind="class" language="C++" prot="public">
    <compoundname>QCPItemTracer</compoundname>
    <basecompoundref refid="class_q_c_p_abstract_item" prot="public" virt="non-virtual">QCPAbstractItem</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" prot="public" static="no" strong="no">
        <type></type>
        <name>TracerStyle</name>
        <qualifiedname>QCPItemTracer::TracerStyle</qualifiedname>
        <enumvalue id="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" prot="public">
          <name>tsNone</name>
          <briefdescription>
<para>The tracer is not visible. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a3323fb04017146e4885e080a459472fa" prot="public">
          <name>tsPlus</name>
          <briefdescription>
<para>A plus shaped crosshair with limited size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" prot="public">
          <name>tsCrosshair</name>
          <briefdescription>
<para>A plus shaped crosshair which spans the complete axis rect. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500ae2252c28f4842880d71e9f94e69de94e" prot="public">
          <name>tsCircle</name>
          <briefdescription>
<para>A circle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" prot="public">
          <name>tsSquare</name>
          <briefdescription>
<para>A square. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The different visual appearances a tracer item can have. Some styles size may be controlled with <ref refid="class_q_c_p_item_tracer_1ae47fe0617f5fef5fdb766999569be10a" kindref="member">setSize</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1a41a2ac4f1acd7897b4e2a2579c03204e" kindref="member">setStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6836" column="3" bodyfile="qcustomplot.h" bodystart="6836" bodyend="6841"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a69917e2fdb2b3a929c196958feee7cbe" prot="public" static="no" mutable="no">
        <type><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref> *const</type>
        <definition>QCPItemPosition* const QCPItemTracer::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <qualifiedname>QCPItemTracer::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6875" column="26" bodyfile="qcustomplot.h" bodystart="6875" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a579e3bd6bd16d6aaff03638dc8a99a69" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPItemTracer::mPen</definition>
        <argsstring></argsstring>
        <name>mPen</name>
        <qualifiedname>QCPItemTracer::mPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6879" column="8" bodyfile="qcustomplot.h" bodystart="6879" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a3f61829784200819661d1e2a5354d866" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPItemTracer::mSelectedPen</definition>
        <argsstring></argsstring>
        <name>mSelectedPen</name>
        <qualifiedname>QCPItemTracer::mSelectedPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6879" column="13" bodyfile="qcustomplot.h" bodystart="6879" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPItemTracer::mBrush</definition>
        <argsstring></argsstring>
        <name>mBrush</name>
        <qualifiedname>QCPItemTracer::mBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6880" column="10" bodyfile="qcustomplot.h" bodystart="6880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a1c15d2adde40efdcc0ef1ff78fd256a6" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPItemTracer::mSelectedBrush</definition>
        <argsstring></argsstring>
        <name>mSelectedBrush</name>
        <qualifiedname>QCPItemTracer::mSelectedBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6880" column="17" bodyfile="qcustomplot.h" bodystart="6880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a575153a24bb357d1e006f6bc3bd099b9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPItemTracer::mSize</definition>
        <argsstring></argsstring>
        <name>mSize</name>
        <qualifiedname>QCPItemTracer::mSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6881" column="10" bodyfile="qcustomplot.h" bodystart="6881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1afb1f236bebf417544e0138fef22a292e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" kindref="member">TracerStyle</ref></type>
        <definition>TracerStyle QCPItemTracer::mStyle</definition>
        <argsstring></argsstring>
        <name>mStyle</name>
        <qualifiedname>QCPItemTracer::mStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6882" column="15" bodyfile="qcustomplot.h" bodystart="6882" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> *</type>
        <definition>QCPGraph* QCPItemTracer::mGraph</definition>
        <argsstring></argsstring>
        <name>mGraph</name>
        <qualifiedname>QCPItemTracer::mGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6883" column="12" bodyfile="qcustomplot.h" bodystart="6883" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPItemTracer::mGraphKey</definition>
        <argsstring></argsstring>
        <name>mGraphKey</name>
        <qualifiedname>QCPItemTracer::mGraphKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6884" column="10" bodyfile="qcustomplot.h" bodystart="6884" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_tracer_1afab37c22ad39f235921e86f93cd84595" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPItemTracer::mInterpolating</definition>
        <argsstring></argsstring>
        <name>mInterpolating</name>
        <qualifiedname>QCPItemTracer::mInterpolating</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6885" column="8" bodyfile="qcustomplot.h" bodystart="6885" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_item_tracer_1adc5ca846eeac323db4aa1fc4081e36be" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPItemTracer::QCPItemTracer</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>QCPItemTracer</name>
        <qualifiedname>QCPItemTracer::QCPItemTracer</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a tracer item and sets default values.</para>
<para>The created item is automatically registered with <emphasis>parentPlot</emphasis>. This <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> instance takes ownership of the item, so do not delete it manually but use <ref refid="class_q_custom_plot_1ae04446557292551e8fb6e2c106e1848d" kindref="member">QCustomPlot::removeItem()</ref> instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6844" column="12" bodyfile="qcustomplot.cpp" bodystart="30407" bodyend="30422"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a84834da38876a11877d4f6447409275a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPItemTracer::~QCPItemTracer</definition>
        <argsstring>() Q_DECL_OVERRIDE</argsstring>
        <name>~QCPItemTracer</name>
        <qualifiedname>QCPItemTracer::~QCPItemTracer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6845" column="11" bodyfile="qcustomplot.cpp" bodystart="30424" bodyend="30426"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a789cdc627868f5a4a0956816072571c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPItemTracer::pen</definition>
        <argsstring>() const</argsstring>
        <name>pen</name>
        <qualifiedname>QCPItemTracer::pen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6848" column="8" bodyfile="qcustomplot.h" bodystart="6848" bodyend="6848"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1ad231a97bac99e01778618d1a5720b17d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPItemTracer::selectedPen</definition>
        <argsstring>() const</argsstring>
        <name>selectedPen</name>
        <qualifiedname>QCPItemTracer::selectedPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6849" column="8" bodyfile="qcustomplot.h" bodystart="6849" bodyend="6849"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a6dd4660e70f58bb00390bcda56be568d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPItemTracer::brush</definition>
        <argsstring>() const</argsstring>
        <name>brush</name>
        <qualifiedname>QCPItemTracer::brush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6850" column="10" bodyfile="qcustomplot.h" bodystart="6850" bodyend="6850"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1ae3e48270b4a6ec20f7a9e1f63e778243" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPItemTracer::selectedBrush</definition>
        <argsstring>() const</argsstring>
        <name>selectedBrush</name>
        <qualifiedname>QCPItemTracer::selectedBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6851" column="10" bodyfile="qcustomplot.h" bodystart="6851" bodyend="6851"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a4e42d7b49f293273a74a49a2457856e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPItemTracer::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QCPItemTracer::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6852" column="10" bodyfile="qcustomplot.h" bodystart="6852" bodyend="6852"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1afdaee32c9ccc9c14502b28d3d86bf5ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" kindref="member">TracerStyle</ref></type>
        <definition>TracerStyle QCPItemTracer::style</definition>
        <argsstring>() const</argsstring>
        <name>style</name>
        <qualifiedname>QCPItemTracer::style</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6853" column="15" bodyfile="qcustomplot.h" bodystart="6853" bodyend="6853"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a62660ae9684a9d92c026ff7a710f99b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> *</type>
        <definition>QCPGraph * QCPItemTracer::graph</definition>
        <argsstring>() const</argsstring>
        <name>graph</name>
        <qualifiedname>QCPItemTracer::graph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6854" column="12" bodyfile="qcustomplot.h" bodystart="6854" bodyend="6854"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1ac39a0791109588d11bb97cd643da2470" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPItemTracer::graphKey</definition>
        <argsstring>() const</argsstring>
        <name>graphKey</name>
        <qualifiedname>QCPItemTracer::graphKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6855" column="10" bodyfile="qcustomplot.h" bodystart="6855" bodyend="6855"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1ae9ab6d72e0a35e1769c0b5a9b58181f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPItemTracer::interpolating</definition>
        <argsstring>() const</argsstring>
        <name>interpolating</name>
        <qualifiedname>QCPItemTracer::interpolating</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6856" column="8" bodyfile="qcustomplot.h" bodystart="6856" bodyend="6856"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1af8048636fc1ef0152e51809b008df2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setPen</name>
        <qualifiedname>QCPItemTracer::setPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen that will be used to draw the line of the tracer</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1ae1bf70db7f13f928660168cd3e5069f3" kindref="member">setSelectedPen</ref>, <ref refid="class_q_c_p_item_tracer_1a2c303f7470a30084daa201ed556b3c36" kindref="member">setBrush</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6859" column="8" bodyfile="qcustomplot.cpp" bodystart="30433" bodyend="30436"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1ae1bf70db7f13f928660168cd3e5069f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setSelectedPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setSelectedPen</name>
        <qualifiedname>QCPItemTracer::setSelectedPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen that will be used to draw the line of the tracer when selected</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1af8048636fc1ef0152e51809b008df2ca" kindref="member">setPen</ref>, <ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6860" column="8" bodyfile="qcustomplot.cpp" bodystart="30443" bodyend="30446"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a2c303f7470a30084daa201ed556b3c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setBrush</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setBrush</name>
        <qualifiedname>QCPItemTracer::setBrush</qualifiedname>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the brush that will be used to draw any fills of the tracer</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1a0f55c084980a7a312af859d3e7b558ef" kindref="member">setSelectedBrush</ref>, <ref refid="class_q_c_p_item_tracer_1af8048636fc1ef0152e51809b008df2ca" kindref="member">setPen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6861" column="8" bodyfile="qcustomplot.cpp" bodystart="30453" bodyend="30456"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a0f55c084980a7a312af859d3e7b558ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setSelectedBrush</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setSelectedBrush</name>
        <qualifiedname>QCPItemTracer::setSelectedBrush</qualifiedname>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the brush that will be used to draw any fills of the tracer, when selected.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1a2c303f7470a30084daa201ed556b3c36" kindref="member">setBrush</ref>, <ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6862" column="8" bodyfile="qcustomplot.cpp" bodystart="30463" bodyend="30466"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1ae47fe0617f5fef5fdb766999569be10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setSize</definition>
        <argsstring>(double size)</argsstring>
        <name>setSize</name>
        <qualifiedname>QCPItemTracer::setSize</qualifiedname>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the size of the tracer in pixels, if the style supports setting a size (e.g. <ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" kindref="member">tsSquare</ref> does, <ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" kindref="member">tsCrosshair</ref> does not). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6863" column="8" bodyfile="qcustomplot.cpp" bodystart="30472" bodyend="30475"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a41a2ac4f1acd7897b4e2a2579c03204e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setStyle</definition>
        <argsstring>(TracerStyle style)</argsstring>
        <name>setStyle</name>
        <qualifiedname>QCPItemTracer::setStyle</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" kindref="member">TracerStyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the style/visual appearance of the tracer.</para>
<para>If you only want to use the tracer <emphasis>position</emphasis> as an anchor for other items, set <emphasis>style</emphasis> to <ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" kindref="member">tsNone</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6864" column="8" bodyfile="qcustomplot.cpp" bodystart="30483" bodyend="30486"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setGraph</definition>
        <argsstring>(QCPGraph *graph)</argsstring>
        <name>setGraph</name>
        <qualifiedname>QCPItemTracer::setGraph</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> *</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> this tracer sticks to. The tracer <emphasis>position</emphasis> will be set to type <ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">QCPItemPosition::ptPlotCoords</ref> and the axes will be set to the axes of <emphasis>graph</emphasis>.</para>
<para>To free the tracer from any graph, set <emphasis>graph</emphasis> to <computeroutput>nullptr</computeroutput>. The tracer <emphasis>position</emphasis> can then be placed freely like any other item position. This is the state the tracer will assume when its graph gets deleted while still attached to it.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6865" column="8" bodyfile="qcustomplot.cpp" bodystart="30498" bodyend="30514"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setGraphKey</definition>
        <argsstring>(double key)</argsstring>
        <name>setGraphKey</name>
        <qualifiedname>QCPItemTracer::setGraphKey</qualifiedname>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the key of the graph&apos;s data point the tracer will be positioned at. This is the only free coordinate of a tracer when attached to a graph.</para>
<para>Depending on <ref refid="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" kindref="member">setInterpolating</ref>, the tracer will be either positioned on the data point closest to <emphasis>key</emphasis>, or will stay exactly at <emphasis>key</emphasis> and interpolate the value linearly.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" kindref="member">setGraph</ref>, <ref refid="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" kindref="member">setInterpolating</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6866" column="8" bodyfile="qcustomplot.cpp" bodystart="30525" bodyend="30528"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::setInterpolating</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setInterpolating</name>
        <qualifiedname>QCPItemTracer::setInterpolating</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether the value of the graph&apos;s data points shall be interpolated, when positioning the tracer.</para>
<para>If <emphasis>enabled</emphasis> is set to false and a key is given with <ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref>, the tracer is placed on the data point of the graph which is closest to the key, but which is not necessarily exactly there. If <emphasis>enabled</emphasis> is true, the tracer will be positioned exactly at the specified key, and the appropriate value will be interpolated from the graph&apos;s data points linearly.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" kindref="member">setGraph</ref>, <ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6867" column="8" bodyfile="qcustomplot.cpp" bodystart="30541" bodyend="30544"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a01d8814404e3f0910b84029016ef73b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPItemTracer::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE</argsstring>
        <name>selectTest</name>
        <qualifiedname>QCPItemTracer::selectTest</qualifiedname>
        <reimplements refid="class_q_c_p_abstract_item_1ac75a4bdcba0ce51ae22eacebb16a9dcd">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to decide whether a click hits a layerable object or not.</para>
<para><emphasis>pos</emphasis> is a point in pixel coordinates on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. This function returns the shortest pixel distance of this point to the object. If the object is either invisible or the distance couldn&apos;t be determined, -1.0 is returned. Further, if <emphasis>onlySelectable</emphasis> is true and the object is not selectable, -1.0 is returned, too.</para>
<para>If the object is represented not by single lines but by an area like a <ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref> or the bars of a <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottable, a click inside the area should also be considered a hit. In these cases this function thus returns a constant value greater zero but still below the parent plot&apos;s selection tolerance. (typically the selectionTolerance multiplied by 0.99).</para>
<para>Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i.e. closer than 0.99*selectionTolerance).</para>
<para>The actual setting of the selection state is not done by this function. This is handled by the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/ deselectEvent methods.</para>
<para><emphasis>details</emphasis> is an optional output parameter. Every layerable subclass may place any information in <emphasis>details</emphasis>. This information will be passed to selectEvent when the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides on the basis of this selectTest call, that the object was successfully selected. The subsequent call to selectEvent will carry the <emphasis>details</emphasis>. This is useful for multi-part objects (like <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>). This way, a possibly complex calculation to decide which part was clicked is only done once in <ref refid="class_q_c_p_item_tracer_1a01d8814404e3f0910b84029016ef73b2" kindref="member">selectTest</ref>. The result (i.e. the actually clicked part) can then be placed in <emphasis>details</emphasis>. So in the subsequent selectEvent, the decision which part was selected doesn&apos;t have to be done a second time for a single selection operation.</para>
<para>In the case of 1D Plottables (<ref refid="class_q_c_p_abstract_plottable1_d" kindref="compound">QCPAbstractPlottable1D</ref>, like <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> or <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>) <emphasis>details</emphasis> will be set to a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref>, describing the closest data point to <emphasis>pos</emphasis>.</para>
<para>You may pass <computeroutput>nullptr</computeroutput> as <emphasis>details</emphasis> to indicate that you are not interested in those selection details.</para>
<para><simplesect kind="see"><para>selectEvent, deselectEvent, <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref>, <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref>, <ref refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" kindref="member">QCPAbstractPlottable1D::selectTestRect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6870" column="18" bodyfile="qcustomplot.cpp" bodystart="30547" bodyend="30601"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemTracer::updatePosition</definition>
        <argsstring>()</argsstring>
        <name>updatePosition</name>
        <qualifiedname>QCPItemTracer::updatePosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the tracer is connected with a graph (<ref refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" kindref="member">setGraph</ref>), this function updates the tracer&apos;s <emphasis>position</emphasis> to reside on the graph data, depending on the configured key (<ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref>).</para>
<para>It is called automatically on every redraw and normally doesn&apos;t need to be called manually. One exception is when you want to read the tracer coordinates via <emphasis>position</emphasis> and are not sure that the graph&apos;s data (or the tracer key with <ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref>) hasn&apos;t changed since the last redraw. In that situation, call this function before accessing <emphasis>position</emphasis>, to make sure you don&apos;t get out-of-date coordinates.</para>
<para>If there is no graph set on this tracer, this function does nothing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6873" column="8" bodyfile="qcustomplot.cpp" bodystart="30662" bodyend="30710"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a11f187ffea436434f3b5cfc387811967" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPItemTracer::draw</definition>
        <argsstring>(QCPPainter *painter) Q_DECL_OVERRIDE</argsstring>
        <name>draw</name>
        <qualifiedname>QCPItemTracer::draw</qualifiedname>
        <reimplements refid="class_q_c_p_abstract_item_1afe12c077663d07233a1b06608783ae41">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6888" column="16" bodyfile="qcustomplot.cpp" bodystart="30604" bodyend="30648"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1abffdcf64d0f84f7b41bd4af07d144642" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPItemTracer::mainPen</definition>
        <argsstring>() const</argsstring>
        <name>mainPen</name>
        <qualifiedname>QCPItemTracer::mainPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6891" column="8" bodyfile="qcustomplot.cpp" bodystart="30717" bodyend="30720"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_tracer_1a94f81c54197577e86c53a60cf39155cd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPItemTracer::mainBrush</definition>
        <argsstring>() const</argsstring>
        <name>mainBrush</name>
        <qualifiedname>QCPItemTracer::mainBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6892" column="10" bodyfile="qcustomplot.cpp" bodystart="30727" bodyend="30730"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Item that sticks to <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> data points. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="QCPItemTracer.png">Tracer example. Blue dotted circles are anchors, solid blue discs are positions.</image>
</para>
<para>The tracer can be connected with a <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> via <ref refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" kindref="member">setGraph</ref>. Then it will automatically adopt the coordinate axes of the graph and update its <emphasis>position</emphasis> to be on the graph&apos;s data. This means the key stays controllable via <ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref>, but the value will follow the graph data. If a <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> is connected, note that setting the coordinates of the tracer item directly via <emphasis>position</emphasis> will have no effect because they will be overriden in the next redraw (this is when the coordinate update happens).</para>
<para>If the specified key in <ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">setGraphKey</ref> is outside the key bounds of the graph, the tracer will stay at the corresponding end of the graph.</para>
<para>With <ref refid="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" kindref="member">setInterpolating</ref> you may specify whether the tracer may only stay exactly on data points or whether it interpolates data points linearly, if given a key that lies between two data points of the graph.</para>
<para>The tracer has different visual styles, see <ref refid="class_q_c_p_item_tracer_1a41a2ac4f1acd7897b4e2a2579c03204e" kindref="member">setStyle</ref>. It is also possible to make the tracer have no own visual appearance (set the style to <ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" kindref="member">tsNone</ref>), and just connect other item positions to the tracer <emphasis>position</emphasis> (used as an anchor) via <ref refid="class_q_c_p_item_position_1ac094d67a95d2dceafa0d50b9db3a7e51" kindref="member">QCPItemPosition::setParentAnchor</ref>.</para>
<para><simplesect kind="note"><para>The tracer position is only automatically updated upon redraws. So when the data of the graph changes and immediately afterwards (without a redraw) the position coordinates of the tracer are retrieved, they will not reflect the updated data of the graph. In this case <ref refid="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" kindref="member">updatePosition</ref> must be called manually, prior to reading the tracer coordinates. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QCPAbstractItem</label>
        <link refid="class_q_c_p_abstract_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPItemTracer</label>
        <link refid="class_q_c_p_item_tracer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QCPAbstractItem</label>
        <link refid="class_q_c_p_abstract_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>mSelection</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>mSelectionDecorator</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>QCPAbstractPlottable1D&lt; QCPGraphData &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="15" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>QCPDataSelection</label>
        <link refid="class_q_c_p_data_selection"/>
      </node>
      <node id="22">
        <label>QCPGraph</label>
        <link refid="class_q_c_p_graph"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>mScatterStyle</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>QCPItemAnchor</label>
        <link refid="class_q_c_p_item_anchor"/>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>mParentItem</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>QCPItemPosition</label>
        <link refid="class_q_c_p_item_position"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>mParentAnchorX</edgelabel>
          <edgelabel>mParentAnchorY</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QCPItemTracer</label>
        <link refid="class_q_c_p_item_tracer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>mGraph</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="28">
        <label>QCPPlottableInterface1D</label>
        <link refid="class_q_c_p_plottable_interface1_d"/>
      </node>
      <node id="12">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="27">
        <label>QCPScatterStyle</label>
        <link refid="class_q_c_p_scatter_style"/>
      </node>
      <node id="26">
        <label>QCPSelectionDecorator</label>
        <link refid="class_q_c_p_selection_decorator"/>
        <childnode refid="27" relation="usage">
          <edgelabel>mScatterStyle</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>mPlottable</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="6">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="6816" column="1" bodyfile="qcustomplot.h" bodystart="6817" bodyend="6893"/>
    <listofallmembers>
      <member refid="class_q_c_p_abstract_item_1a139c255ea8831642fac91748e29a5adb" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>anchor</name></member>
      <member refid="class_q_c_p_abstract_item_1ada5bad4e1196c4fc0d0d12328e24b8f2" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>anchorPixelPosition</name></member>
      <member refid="class_q_c_p_abstract_item_1a81d1ecfea3368b836cf9675a0045e659" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>anchors</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_item_1a5579ce9ec7cad202499886b042448b10" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_item_tracer_1a6dd4660e70f58bb00390bcda56be568d" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>brush</name></member>
      <member refid="class_q_c_p_abstract_item_1ae162314efd3fe1a6d4df11da1d275d52" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>clipAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1a6ad60000f29afe11035e1f791dcbd45a" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_abstract_item_1a42715ad5f3d7fca6854025fa5636f436" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>clipToAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>createAnchor</name></member>
      <member refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>createPosition</name></member>
      <member refid="class_q_c_p_abstract_item_1af9093798cb07a861dcc73f93ca16c0c1" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_item_tracer_1a11f187ffea436434f3b5cfc387811967" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>draw</name></member>
      <member refid="class_q_c_p_item_tracer_1a62660ae9684a9d92c026ff7a710f99b6" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>graph</name></member>
      <member refid="class_q_c_p_item_tracer_1ac39a0791109588d11bb97cd643da2470" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>graphKey</name></member>
      <member refid="class_q_c_p_abstract_item_1a84914f4516f9b38ef0bd89eafe3dbda7" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>hasAnchor</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_item_tracer_1ae9ab6d72e0a35e1769c0b5a9b58181f2" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>interpolating</name></member>
      <member refid="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_item_tracer_1a94f81c54197577e86c53a60cf39155cd" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mainBrush</name></member>
      <member refid="class_q_c_p_item_tracer_1abffdcf64d0f84f7b41bd4af07d144642" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mainPen</name></member>
      <member refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mAnchors</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mClipAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1ad2a70ff6b658fcb84a9427f69d3f587d" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mClipToAxisRect</name></member>
      <member refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mGraph</name></member>
      <member refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mGraphKey</name></member>
      <member refid="class_q_c_p_item_tracer_1afab37c22ad39f235921e86f93cd84595" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mInterpolating</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_item_tracer_1a579e3bd6bd16d6aaff03638dc8a99a69" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mPen</name></member>
      <member refid="class_q_c_p_abstract_item_1af94ff71b6a15ea6d028ab8bd8eccd012" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mPositions</name></member>
      <member refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mSelectable</name></member>
      <member refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mSelected</name></member>
      <member refid="class_q_c_p_item_tracer_1a1c15d2adde40efdcc0ef1ff78fd256a6" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mSelectedBrush</name></member>
      <member refid="class_q_c_p_item_tracer_1a3f61829784200819661d1e2a5354d866" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mSelectedPen</name></member>
      <member refid="class_q_c_p_item_tracer_1a575153a24bb357d1e006f6bc3bd099b9" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mSize</name></member>
      <member refid="class_q_c_p_item_tracer_1afb1f236bebf417544e0138fef22a292e" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mStyle</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_item_tracer_1a789cdc627868f5a4a0956816072571c9" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>pen</name></member>
      <member refid="class_q_c_p_item_tracer_1a69917e2fdb2b3a929c196958feee7cbe" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>position</name></member>
      <member refid="class_q_c_p_abstract_item_1a2589c3d298f9a576d77d9addb440a18d" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractItem::"><scope>QCPItemTracer</scope><name>position</name></member>
      <member refid="class_q_c_p_abstract_item_1a709f655ac3f7f22d452714134662b454" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>positions</name></member>
      <member refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>QCPAbstractItem</name></member>
      <member refid="class_q_c_p_item_tracer_1adc5ca846eeac323db4aa1fc4081e36be" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>QCPItemTracer</name></member>
      <member refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_abstract_item_1a7dfc2007e36d09b8b5c988a9f06d6a7e" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>rectDistance</name></member>
      <member refid="class_q_c_p_abstract_item_1ae29aa489767352b40c4aaa7ea50c5582" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>selectable</name></member>
      <member refid="class_q_c_p_abstract_item_1a5b266c11aac61cb511901f3911dac2a3" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_abstract_item_1aa069fba320a13639f119f82ad29ead96" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>selected</name></member>
      <member refid="class_q_c_p_item_tracer_1ae3e48270b4a6ec20f7a9e1f63e778243" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>selectedBrush</name></member>
      <member refid="class_q_c_p_item_tracer_1ad231a97bac99e01778618d1a5720b17d" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>selectedPen</name></member>
      <member refid="class_q_c_p_abstract_item_1aa4b969c58797f39c9c0b6c07c7869d17" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_abstract_item_1aceb5f99c361cf023c7cbe7339ea29571" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_abstract_item_1aa5cffb034fc65dbb91c77e02c1c14251" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_item_tracer_1a01d8814404e3f0910b84029016ef73b2" prot="public" virt="virtual"><scope>QCPItemTracer</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_item_tracer_1a2c303f7470a30084daa201ed556b3c36" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_abstract_item_1a7dc75fcbcd10206fe0b75d757ea7a347" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setClipAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1a39e05b9d4176b9accafc746d16ca6a06" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setClipToAxisRect</name></member>
      <member refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setGraph</name></member>
      <member refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setGraphKey</name></member>
      <member refid="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setInterpolating</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPItemTracer</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_item_tracer_1af8048636fc1ef0152e51809b008df2ca" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setPen</name></member>
      <member refid="class_q_c_p_abstract_item_1a8a8e32a55bc478b849756a78c2d87fd2" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setSelectable</name></member>
      <member refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setSelected</name></member>
      <member refid="class_q_c_p_item_tracer_1a0f55c084980a7a312af859d3e7b558ef" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setSelectedBrush</name></member>
      <member refid="class_q_c_p_item_tracer_1ae1bf70db7f13f928660168cd3e5069f3" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setSelectedPen</name></member>
      <member refid="class_q_c_p_item_tracer_1ae47fe0617f5fef5fdb766999569be10a" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setSize</name></member>
      <member refid="class_q_c_p_item_tracer_1a41a2ac4f1acd7897b4e2a2579c03204e" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setStyle</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_item_tracer_1a4e42d7b49f293273a74a49a2457856e2" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>size</name></member>
      <member refid="class_q_c_p_item_tracer_1afdaee32c9ccc9c14502b28d3d86bf5ed" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>style</name></member>
      <member refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>TracerStyle</name></member>
      <member refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500ae2252c28f4842880d71e9f94e69de94e" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>tsCircle</name></member>
      <member refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>tsCrosshair</name></member>
      <member refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>tsNone</name></member>
      <member refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a3323fb04017146e4885e080a459472fa" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>tsPlus</name></member>
      <member refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>tsSquare</name></member>
      <member refid="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>updatePosition</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPItemTracer</scope><name>visible</name></member>
      <member refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" virt="virtual"><scope>QCPItemTracer</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_abstract_item_1a5120698bef63cbaa8544e9f47a2f4abc" prot="public" virt="virtual"><scope>QCPItemTracer</scope><name>~QCPAbstractItem</name></member>
      <member refid="class_q_c_p_item_tracer_1a84834da38876a11877d4f6447409275a" prot="public" virt="virtual"><scope>QCPItemTracer</scope><name>~QCPItemTracer</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="virtual"><scope>QCPItemTracer</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
