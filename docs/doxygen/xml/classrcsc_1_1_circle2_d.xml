<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classrcsc_1_1_circle2_d" kind="class" language="C++" prot="public">
    <compoundname>rcsc::Circle2D</compoundname>
    <basecompoundref refid="classrcsc_1_1_region2_d" prot="public" virt="non-virtual">rcsc::Region2D</basecompoundref>
    <includes refid="circle__2d_8h" local="no">circle_2d.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcsc_1_1_circle2_d_1aeac63422b2127d9c820c4a31e5fd2946" prot="private" static="no" mutable="no">
        <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D rcsc::Circle2D::M_center</definition>
        <argsstring></argsstring>
        <name>M_center</name>
        <qualifiedname>rcsc::Circle2D::M_center</qualifiedname>
        <briefdescription>
<para>center point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="55" column="14" bodyfile="ui/geom/circle_2d.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcsc_1_1_circle2_d_1a1d085c1364c7e968d7b7c7bf7f6ab369" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double rcsc::Circle2D::M_radius</definition>
        <argsstring></argsstring>
        <name>M_radius</name>
        <qualifiedname>rcsc::Circle2D::M_radius</qualifiedname>
        <briefdescription>
<para>radius of this circle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="58" column="12" bodyfile="ui/geom/circle_2d.h" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classrcsc_1_1_circle2_d_1a5e0abc6eca315f26900aed7345a9a13a" prot="private" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double rcsc::Circle2D::EPSILON</definition>
        <argsstring></argsstring>
        <name>EPSILON</name>
        <qualifiedname>rcsc::Circle2D::EPSILON</qualifiedname>
        <initializer>= 1.0e-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="60" column="25" bodyfile="ui/geom/circle_2d.h" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1aec4767d8f7bce91c5aad15f2b86b676e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rcsc::Circle2D::Circle2D</definition>
        <argsstring>()</argsstring>
        <name>Circle2D</name>
        <qualifiedname>rcsc::Circle2D::Circle2D</qualifiedname>
        <briefdescription>
<para>create a zero area circle at (0,0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="67" column="5" bodyfile="ui/geom/circle_2d.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a5416f28dd0271ccd2e2772688076ad71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rcsc::Circle2D::Circle2D</definition>
        <argsstring>(const Vector2D &amp;c, const double &amp;r)</argsstring>
        <name>Circle2D</name>
        <qualifiedname>rcsc::Circle2D::Circle2D</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>construct with center point and radius value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>center point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>radius value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="77" column="5" bodyfile="ui/geom/circle_2d.h" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1aa98f4ef1e7dc7db29f25ed0f17e4fcdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_circle2_d" kindref="compound">Circle2D</ref> &amp;</type>
        <definition>const Circle2D &amp; rcsc::Circle2D::assign</definition>
        <argsstring>(const Vector2D &amp;c, const double &amp;r)</argsstring>
        <name>assign</name>
        <qualifiedname>rcsc::Circle2D::assign</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>assign new value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>center point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>radius value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const reference to this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="97" column="15" bodyfile="ui/geom/circle_2d.h" bodystart="97" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a44e901cd9cbb4de48bbbc801566e95d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double rcsc::Circle2D::area</definition>
        <argsstring>() const</argsstring>
        <name>area</name>
        <qualifiedname>rcsc::Circle2D::area</qualifiedname>
        <reimplements refid="classrcsc_1_1_region2_d_1a2502791cb8472d99df26d9e216e74357">area</reimplements>
        <briefdescription>
<para>get the area value of this circle </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>value of the area </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="116" column="12" bodyfile="ui/geom/circle_2d.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a39b53ea8d181dfecbe23ed20e59aeb98" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool rcsc::Circle2D::contains</definition>
        <argsstring>(const Vector2D &amp;point) const</argsstring>
        <name>contains</name>
        <qualifiedname>rcsc::Circle2D::contains</qualifiedname>
        <reimplements refid="classrcsc_1_1_region2_d_1a5be3cd9e4045fd957aef13b7be798774">contains</reimplements>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>check if point is within this region </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>considered point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if point is contained by this circle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="127" column="10" bodyfile="ui/geom/circle_2d.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a817595f376bbbdb66424338211c50cec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
        <definition>const Vector2D &amp; rcsc::Circle2D::center</definition>
        <argsstring>() const</argsstring>
        <name>center</name>
        <qualifiedname>rcsc::Circle2D::center</qualifiedname>
        <briefdescription>
<para>get the center point </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>center point coordinate value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="137" column="15" bodyfile="ui/geom/circle_2d.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a20a08c217de8d5587cb936218ebd35c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double &amp; rcsc::Circle2D::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <qualifiedname>rcsc::Circle2D::radius</qualifiedname>
        <briefdescription>
<para>get the radius value </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>radius value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="147" column="13" bodyfile="ui/geom/circle_2d.h" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a49174389d1efb20f7cc7870dc8582e95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rcsc::Circle2D::intersection</definition>
        <argsstring>(const Line2D &amp;line, Vector2D *sol1, Vector2D *sol2) const</argsstring>
        <name>intersection</name>
        <qualifiedname>rcsc::Circle2D::intersection</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_line2_d" kindref="compound">Line2D</ref> &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol1</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol2</declname>
        </param>
        <briefdescription>
<para>caluclate the intersection with straight line </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>considerd line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 1st solution variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 2nd solution variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of solution </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="159" column="9" bodyfile="ui/geom/circle_2d.cpp" bodystart="114" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a7ddc9af7407dbe7f0f92af0bf9405fb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rcsc::Circle2D::intersection</definition>
        <argsstring>(const Ray2D &amp;ray, Vector2D *sol1, Vector2D *sol2) const</argsstring>
        <name>intersection</name>
        <qualifiedname>rcsc::Circle2D::intersection</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_ray2_d" kindref="compound">Ray2D</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol1</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol2</declname>
        </param>
        <briefdescription>
<para>calculate the intersection with ray line </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ray</parametername>
</parameternamelist>
<parameterdescription>
<para>considerd ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 1st solution variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 2nd solution variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of solution </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="170" column="9" bodyfile="ui/geom/circle_2d.cpp" bodystart="195" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a1b0c8bd89a8428bb684541e25dd7f77f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rcsc::Circle2D::intersection</definition>
        <argsstring>(const Segment2D &amp;segment, Vector2D *sol1, Vector2D *sol2) const</argsstring>
        <name>intersection</name>
        <qualifiedname>rcsc::Circle2D::intersection</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref> &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol1</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol2</declname>
        </param>
        <briefdescription>
<para>calculate the intersection with segment line </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>considerd segment line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 1st solution variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 2nd solution variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of solution </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="181" column="9" bodyfile="ui/geom/circle_2d.cpp" bodystart="235" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a9c5b127e0136097a82c7d36397872966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rcsc::Circle2D::intersection</definition>
        <argsstring>(const Circle2D &amp;circle, Vector2D *sol1, Vector2D *sol2) const</argsstring>
        <name>intersection</name>
        <qualifiedname>rcsc::Circle2D::intersection</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_circle2_d" kindref="compound">Circle2D</ref> &amp;</type>
          <declname>circle</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol1</declname>
        </param>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> *</type>
          <declname>sol2</declname>
        </param>
        <briefdescription>
<para>calculate the intersection with another circle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>circle</parametername>
</parameternamelist>
<parameterdescription>
<para>considerd circle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 1st solution variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sol2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the 2nd solution variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of solution </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="192" column="9" bodyfile="ui/geom/circle_2d.cpp" bodystart="277" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a48a1c49f3fc250467f4200cffccf7868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Circle2D::HasIntersection</definition>
        <argsstring>(Line2D line)</argsstring>
        <name>HasIntersection</name>
        <qualifiedname>rcsc::Circle2D::HasIntersection</qualifiedname>
        <param>
          <type><ref refid="classrcsc_1_1_line2_d" kindref="compound">Line2D</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>HasIntersection : check that this <ref refid="classrcsc_1_1_line2_d" kindref="compound">Line2D</ref> Has Intersection with circle or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="228" column="10" bodyfile="ui/geom/circle_2d.cpp" bodystart="363" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a63f928204dc8aff0e7aeb557dbd69366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Circle2D::HasIntersection</definition>
        <argsstring>(Line2D line, float SF)</argsstring>
        <name>HasIntersection</name>
        <qualifiedname>rcsc::Circle2D::HasIntersection</qualifiedname>
        <param>
          <type><ref refid="classrcsc_1_1_line2_d" kindref="compound">Line2D</ref></type>
          <declname>line</declname>
        </param>
        <param>
          <type>float</type>
          <declname>SF</declname>
        </param>
        <briefdescription>
<para>HasIntersection( : check that this line Has Intersection with this circle or not , and a safety factor for distance to center. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
<parametername>SafetyFactor</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="235" column="10" bodyfile="ui/geom/circle_2d.cpp" bodystart="370" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1ab709c8d156d7703f271c3551056eb9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Circle2D::HasIntersection</definition>
        <argsstring>(Segment2D Seg)</argsstring>
        <name>HasIntersection</name>
        <qualifiedname>rcsc::Circle2D::HasIntersection</qualifiedname>
        <param>
          <type><ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref></type>
          <declname>Seg</declname>
        </param>
        <briefdescription>
<para>HasIntersection : check that this segment Has Intersection with circle or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="242" column="10" bodyfile="ui/geom/circle_2d.cpp" bodystart="384" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1ad0cbe077527ab1cf601054f62201dcc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Circle2D::HasIntersection</definition>
        <argsstring>(Segment2D Seg, float SF)</argsstring>
        <name>HasIntersection</name>
        <qualifiedname>rcsc::Circle2D::HasIntersection</qualifiedname>
        <param>
          <type><ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref></type>
          <declname>Seg</declname>
        </param>
        <param>
          <type>float</type>
          <declname>SF</declname>
        </param>
        <briefdescription>
<para>HasIntersection( : check that this segment Has Intersection with this circle or not , and a safety factor for distance to center. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
<parametername>SafetyFactor</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="249" column="10" bodyfile="ui/geom/circle_2d.cpp" bodystart="377" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a9906523e117c84fbe0f069d69544b743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D rcsc::Circle2D::nearestpoint</definition>
        <argsstring>(Vector2D pnt)</argsstring>
        <name>nearestpoint</name>
        <qualifiedname>rcsc::Circle2D::nearestpoint</qualifiedname>
        <param>
          <type><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></type>
          <declname>pnt</declname>
        </param>
        <briefdescription>
<para>Intersect : If HasIntersection, return intersec point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pnt</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>intersection <ref refid="struct_point" kindref="compound">Point</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="258" column="14" bodyfile="ui/geom/circle_2d.cpp" bodystart="391" bodyend="399"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1a5fd490731cfaf089d4306059938eeb30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcsc_1_1_circle2_d" kindref="compound">Circle2D</ref></type>
        <definition>Circle2D rcsc::Circle2D::circumcircle</definition>
        <argsstring>(const Vector2D &amp;p0, const Vector2D &amp;p1, const Vector2D &amp;p2)</argsstring>
        <name>circumcircle</name>
        <qualifiedname>rcsc::Circle2D::circumcircle</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>get the circle through three points (circumcircle of the triangle). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p0</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle&apos;s 1st vertex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle&apos;s 2nd vertex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle&apos;s 3rd vertex </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>coordinates of circumcenter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="206" column="14" bodyfile="ui/geom/circle_2d.cpp" bodystart="312" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_circle2_d_1aee251a55a5cde861736baff443d9cf37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcsc::Circle2D::contains</definition>
        <argsstring>(const Vector2D &amp;point, const Vector2D &amp;p0, const Vector2D &amp;p1, const Vector2D &amp;p2)</argsstring>
        <name>contains</name>
        <qualifiedname>rcsc::Circle2D::contains</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>check if the circumcircle contains the input point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>input point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p0</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle&apos;s 1st vertex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle&apos;s 2nd vertex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle&apos;s 3rd vertex </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if circumcircle contains the point, otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/circle_2d.h" line="219" column="10" bodyfile="ui/geom/circle_2d.cpp" bodystart="335" bodyend="359"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>2d circle class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rcsc::Circle2D</label>
        <link refid="classrcsc_1_1_circle2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcsc::Region2D</label>
        <link refid="classrcsc_1_1_region2_d"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rcsc::Circle2D</label>
        <link refid="classrcsc_1_1_circle2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcsc::Region2D</label>
        <link refid="classrcsc_1_1_region2_d"/>
      </node>
    </collaborationgraph>
    <location file="ui/geom/circle_2d.h" line="50" column="1" bodyfile="ui/geom/circle_2d.h" bodystart="51" bodyend="260"/>
    <listofallmembers>
      <member refid="classrcsc_1_1_circle2_d_1a44e901cd9cbb4de48bbbc801566e95d2" prot="public" virt="virtual"><scope>rcsc::Circle2D</scope><name>area</name></member>
      <member refid="classrcsc_1_1_circle2_d_1aa98f4ef1e7dc7db29f25ed0f17e4fcdc" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>assign</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a817595f376bbbdb66424338211c50cec" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>center</name></member>
      <member refid="classrcsc_1_1_circle2_d_1aec4767d8f7bce91c5aad15f2b86b676e" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>Circle2D</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a5416f28dd0271ccd2e2772688076ad71" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>Circle2D</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a5fd490731cfaf089d4306059938eeb30" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>circumcircle</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a39b53ea8d181dfecbe23ed20e59aeb98" prot="public" virt="virtual"><scope>rcsc::Circle2D</scope><name>contains</name></member>
      <member refid="classrcsc_1_1_circle2_d_1aee251a55a5cde861736baff443d9cf37" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>contains</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a5e0abc6eca315f26900aed7345a9a13a" prot="private" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>EPSILON</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a48a1c49f3fc250467f4200cffccf7868" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>HasIntersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a63f928204dc8aff0e7aeb557dbd69366" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>HasIntersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1ab709c8d156d7703f271c3551056eb9eb" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>HasIntersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1ad0cbe077527ab1cf601054f62201dcc6" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>HasIntersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a49174389d1efb20f7cc7870dc8582e95" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>intersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a7ddc9af7407dbe7f0f92af0bf9405fb7" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>intersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a1b0c8bd89a8428bb684541e25dd7f77f" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>intersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a9c5b127e0136097a82c7d36397872966" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>intersection</name></member>
      <member refid="classrcsc_1_1_circle2_d_1aeac63422b2127d9c820c4a31e5fd2946" prot="private" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>M_center</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a1d085c1364c7e968d7b7c7bf7f6ab369" prot="private" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>M_radius</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a9906523e117c84fbe0f069d69544b743" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>nearestpoint</name></member>
      <member refid="classrcsc_1_1_circle2_d_1a20a08c217de8d5587cb936218ebd35c7" prot="public" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>radius</name></member>
      <member refid="classrcsc_1_1_region2_d_1a577990d3a9f85a96ec51c412bd47fb1d" prot="protected" virt="non-virtual"><scope>rcsc::Circle2D</scope><name>Region2D</name></member>
      <member refid="classrcsc_1_1_region2_d_1abc34bfdd9e0683003012f25ae7a2512b" prot="public" virt="virtual"><scope>rcsc::Circle2D</scope><name>~Region2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
