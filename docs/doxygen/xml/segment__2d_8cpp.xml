<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="segment__2d_8cpp" kind="file" language="C++">
    <compoundname>segment_2d.cpp</compoundname>
    <includes refid="segment__2d_8h" local="yes">segment_2d.h</includes>
    <includes refid="triangle__2d_8h" local="yes">triangle_2d.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="5">
        <label>ui/geom/angle_deg.h</label>
        <link refid="angle__deg_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>geom/line_2d.h</label>
        <link refid="line__2d_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>geom/region_2d.h</label>
        <link refid="region__2d_8h"/>
      </node>
      <node id="1">
        <label>ui/geom/segment_2d.cpp</label>
        <link refid="segment__2d_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>segment_2d.h</label>
        <link refid="segment__2d_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>triangle_2d.h</label>
        <link refid="triangle__2d_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>geom/vector_2d.h</label>
        <link refid="geom_2vector__2d_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacercsc">rcsc</innernamespace>
    <briefdescription>
<para>2D segment line class Source File. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-c++-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*Copyright:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>Hidehisa<sp/>Akiyama,<sp/>Hiroki<sp/>Shimora</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>This<sp/>code<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*EndCopyright:</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="segment__2d_8h" kindref="compound">segment_2d.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="triangle__2d_8h" kindref="compound">triangle_2d.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rcsc<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Segment2D::EPSILON<sp/>=<sp/>1.0e-6;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Segment2D::CALC_ERROR<sp/>=<sp/>1.0e-9;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a2d50e9f1e73668c3ddb7c1f2a4ab3430" kindref="member">Segment2D::projection</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>dir<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>()<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>dir.r();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len<sp/>&lt;<sp/>EPSILON<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>/=<sp/>len;<sp/></highlight><highlight class="comment">//<sp/>normalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dir.innerProduct(<sp/>p<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>-EPSILON<sp/>&lt;<sp/>d<sp/>&amp;&amp;<sp/>d<sp/>&lt;<sp/>len<sp/>+<sp/>EPSILON<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>*=<sp/>d;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2D(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>)<sp/>+=<sp/>dir;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Line2D<sp/>my_line<sp/>=<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a9a2350583582ae85a7355f17341b73e2" kindref="member">line</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>sol<sp/>=<sp/>my_line.projection(<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>sol.isValid()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!<sp/>this-&gt;contains(<sp/>sol<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sol;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1acfa99472e4cf909ee2107807012d3a2b" kindref="member">Segment2D::intersection</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref><sp/>&amp;<sp/>other,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_end_point<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>sol<sp/>=<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a9a2350583582ae85a7355f17341b73e2" kindref="member">line</ref>().<ref refid="classrcsc_1_1_line2_d_1adb31be45e8af3aec989842e20b5b8584" kindref="member">intersection</ref>(<sp/>other.line()<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>sol.isValid()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!<sp/>this-&gt;contains(<sp/>sol<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!<sp/>other.contains(<sp/>sol<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>allow_end_point</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!<sp/><ref refid="classrcsc_1_1_segment2_d_1aae8bedf6ec2025efb6cba3eedd47b623" kindref="member">existIntersectionExceptEndpoint</ref>(<sp/>other<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sol;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Following<sp/>algorithm<sp/>seems<sp/>faster<sp/>ther<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>fact,<sp/>the<sp/>following<sp/>algorithm<sp/>slower...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>ab<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>()<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>dc<sp/>=<sp/>other.origin()<sp/>-<sp/>other.terminal();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>ad<sp/>=<sp/>other.terminal()<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det<sp/>=<sp/>dc.outerProduct(<sp/>ab<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::fabs(<sp/>det<sp/>)<sp/>&lt;<sp/>1.0e-9<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>area<sp/>size<sp/>is<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segments<sp/>has<sp/>same<sp/>slope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Segment2D::intersection()&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***ERROR***<sp/>parallel<sp/>segments&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(<sp/>dc.x<sp/>*<sp/>ad.y<sp/>-<sp/>dc.y<sp/>*<sp/>ad.x<sp/>)<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(<sp/>ab.x<sp/>*<sp/>ad.y<sp/>-<sp/>ab.y<sp/>*<sp/>ad.x<sp/>)<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>s<sp/>&lt;<sp/>0.0<sp/>||<sp/>1.0<sp/>&lt;<sp/>s<sp/>||<sp/>t<sp/>&lt;<sp/>0.0<sp/>||<sp/>1.0<sp/>&lt;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2D(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().x<sp/>+<sp/>ab.<ref refid="classrcsc_1_1_vector2_d_1ac02743c785aa86b6e252ed58bf34cb92" kindref="member">x</ref><sp/>*<sp/>s,<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().y<sp/>+<sp/>ab.y<sp/>*<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1acfa99472e4cf909ee2107807012d3a2b" kindref="member">Segment2D::intersection</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_line2_d" kindref="compound">Line2D</ref><sp/>&amp;<sp/>l<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Line2D<sp/>my_line<sp/>=<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a9a2350583582ae85a7355f17341b73e2" kindref="member">line</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>sol<sp/>=<sp/>my_line.intersection(<sp/>l<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>sol.isValid()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!<sp/>this-&gt;contains(<sp/>sol<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d_1a75349ff72ea6f94b8c9f1b1039d0143f" kindref="member">Vector2D::INVALIDATED</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sol;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1aae8bedf6ec2025efb6cba3eedd47b623" kindref="member">Segment2D::existIntersectionExceptEndpoint</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref><sp/>&amp;<sp/>other<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="170"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>(<sp/>Triangle2D(<sp/>*this,<sp/>other.origin()<sp/>).doubleSignedArea()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Triangle2D(<sp/>*this,<sp/>other.terminal()<sp/>).doubleSignedArea()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>0.0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/>Triangle2D(<sp/>other,<sp/>this-&gt;origin()<sp/>).doubleSignedArea()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Triangle2D(<sp/>other,<sp/>this-&gt;terminal()<sp/>).doubleSignedArea()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>0.0<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>(),<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>(),<sp/>other.origin()<sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>this-&gt;origin(),<sp/>this-&gt;terminal(),<sp/>other.terminal()<sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>other.origin(),<sp/>other.terminal(),<sp/>this-&gt;origin()<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>other.origin(),<sp/>other.terminal(),<sp/>this-&gt;terminal()<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a9037c28c7df75bf0fb341a21c6cde8b8" kindref="member">Segment2D::existIntersection</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref><sp/>&amp;<sp/>other<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>double<sp/>a0<sp/>=<sp/>Triangle2D(<sp/>*this,<sp/>other.origin()<sp/>).doubleSignedArea();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>double<sp/>a1<sp/>=<sp/>Triangle2D(<sp/>*this,<sp/>other.terminal()<sp/>).doubleSignedArea();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>double<sp/>b0<sp/>=<sp/>Triangle2D(<sp/>other,<sp/>this-&gt;origin()<sp/>).doubleSignedArea();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>double<sp/>b1<sp/>=<sp/>Triangle2D(<sp/>other,<sp/>this-&gt;terminal()<sp/>).doubleSignedArea();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>(),<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>(),<sp/>other.origin()<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>(),<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>(),<sp/>other.terminal()<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b0<sp/>=<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>other.origin(),<sp/>other.terminal(),<sp/>this-&gt;origin()<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1<sp/>=<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/>other.origin(),<sp/>other.terminal(),<sp/>this-&gt;terminal()<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a0<sp/>*<sp/>a1<sp/>&lt;<sp/>0.0<sp/>&amp;&amp;<sp/>b0<sp/>*<sp/>b1<sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>this-&gt;origin().equals(<sp/>this-&gt;terminal()<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>==<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>()<sp/>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>other.origin().equals(<sp/>other.terminal()<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other.origin()<sp/>==<sp/>other.terminal()<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>this-&gt;origin().equals(<sp/>other.origin()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>==<sp/>other.origin();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b0<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>other.checkIntersectsOnLine(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>if<sp/>(<sp/>other.origin().equals(<sp/>other.terminal()<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other.origin()<sp/>==<sp/>other.terminal()<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a0<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>this-&gt;checkIntersectsOnLine(<sp/>other.origin()<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>a0<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>this-&gt;checkIntersectsOnLine(<sp/>other.origin()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>a1<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>this-&gt;checkIntersectsOnLine(<sp/>other.terminal()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>b0<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>other.checkIntersectsOnLine(<sp/>this-&gt;origin()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>b1<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>other.checkIntersectsOnLine(<sp/>this-&gt;terminal()<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a9037c28c7df75bf0fb341a21c6cde8b8" kindref="member">Segment2D::existIntersection</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_line2_d" kindref="compound">Line2D</ref><sp/>&amp;<sp/>l<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="241"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>l.a()<sp/>*<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().<ref refid="classrcsc_1_1_vector2_d_1ac02743c785aa86b6e252ed58bf34cb92" kindref="member">x</ref><sp/>+<sp/>l.b()<sp/>*<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().<ref refid="classrcsc_1_1_vector2_d_1a79060507ebe8839850961e00c24d89ef" kindref="member">y</ref><sp/>+<sp/>l.c();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>l.a()<sp/>*<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().<ref refid="classrcsc_1_1_vector2_d_1ac02743c785aa86b6e252ed58bf34cb92" kindref="member">x</ref><sp/>+<sp/>l.b()<sp/>*<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().<ref refid="classrcsc_1_1_vector2_d_1a79060507ebe8839850961e00c24d89ef" kindref="member">y</ref><sp/>+<sp/>l.c();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a0<sp/>*<sp/>a1<sp/>&lt;=<sp/>0.0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">Segment2D::checkIntersectsOnLine(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="255"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().x<sp/>==<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().x<sp/>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().y<sp/>&lt;=<sp/>p.<ref refid="classrcsc_1_1_vector2_d_1a79060507ebe8839850961e00c24d89ef" kindref="member">y</ref><sp/>&amp;&amp;<sp/>p.y<sp/>&lt;=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().y<sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().<ref refid="classrcsc_1_1_vector2_d_1a79060507ebe8839850961e00c24d89ef" kindref="member">y</ref><sp/>&lt;=<sp/>p.y<sp/>&amp;&amp;<sp/>p.y<sp/>&lt;=<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().<ref refid="classrcsc_1_1_vector2_d_1a79060507ebe8839850961e00c24d89ef" kindref="member">y</ref><sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().x<sp/>&lt;=<sp/>p.<ref refid="classrcsc_1_1_vector2_d_1ac02743c785aa86b6e252ed58bf34cb92" kindref="member">x</ref><sp/>&amp;&amp;<sp/>p.x<sp/>&lt;=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().x<sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().<ref refid="classrcsc_1_1_vector2_d_1ac02743c785aa86b6e252ed58bf34cb92" kindref="member">x</ref><sp/>&lt;=<sp/>p.x<sp/>&amp;&amp;<sp/>p.x<sp/>&lt;=<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().<ref refid="classrcsc_1_1_vector2_d_1ac02743c785aa86b6e252ed58bf34cb92" kindref="member">x</ref><sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a8d55be9e93240a0af578301b31377568" kindref="member">Segment2D::nearestPoint</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="274"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2D<sp/>vec<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>()<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>len_square<sp/>=<sp/>vec.r2();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len_square<sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inner_product<sp/>=<sp/>vec.innerProduct(<sp/>(p<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>())<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A:<sp/>p1<sp/>-<sp/>p0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>p<sp/>-<sp/>p0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>0<sp/>&lt;=<sp/>|B|cos(theta)<sp/>&lt;=<sp/>|A|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>0<sp/>&lt;=<sp/>|A||B|cos(theta)<sp/>&lt;=<sp/>|A|^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>0<sp/>&lt;=<sp/>A.B<sp/>&lt;=<sp/>|A|^2<sp/><sp/>//<sp/>A.B<sp/>=<sp/>|A||B|cos(theta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inner_product<sp/>&lt;=<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inner_product<sp/>&gt;=<sp/>len_square<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>+<sp/>vec<sp/>*<sp/>inner_product<sp/>/<sp/>len_square;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a3e9231d5b67f4bd60aba0e0743a4644c" kindref="member">Segment2D::dist</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="313"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a7045e38faf8606fdc4a8e68f9ab5697a" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len<sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().<ref refid="classrcsc_1_1_vector2_d_1a66be32ad63e4915218fb0c98e7f4f10e" kindref="member">dist</ref>(<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2D<sp/>vec<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>()<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prod<sp/>=<sp/>vec.innerProduct(<sp/>p<sp/>-<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A:<sp/>p1<sp/>-<sp/>p0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A:<sp/>p<sp/>-<sp/>p0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>0<sp/>&lt;=<sp/>|B|cos(theta)<sp/>&lt;=<sp/>|A|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>0<sp/>&lt;=<sp/>|A||b|cos(theta)<sp/>&lt;=<sp/>|A|^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>0<sp/>&lt;=<sp/>A.B<sp/>&lt;=<sp/>|A|^2<sp/><sp/>//<sp/>A.B<sp/>=<sp/>|A||B|cos(theta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>0.0<sp/>&lt;=<sp/>prod<sp/>&amp;&amp;<sp/>prod<sp/>&lt;=<sp/>len<sp/>*<sp/>len<sp/>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>perpendicular<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>std::fabs(<sp/>Triangle2D(<sp/>*this,<sp/>p<sp/>).doubleSignedArea()<sp/>/<sp/>len<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>(),<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>(),<sp/>p<sp/>)<sp/>/<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<sp/>std::min(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().dist2(<sp/>p<sp/>),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().dist2(<sp/>p<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a3e9231d5b67f4bd60aba0e0743a4644c" kindref="member">Segment2D::dist</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_segment2_d" kindref="compound">Segment2D</ref><sp/>&amp;<sp/>seg<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="349"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a9037c28c7df75bf0fb341a21c6cde8b8" kindref="member">existIntersection</ref>(<sp/>seg<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::min(<sp/>std::min(<sp/>this-&gt;<ref refid="classrcsc_1_1_segment2_d_1a3e9231d5b67f4bd60aba0e0743a4644c" kindref="member">dist</ref>(<sp/>seg.origin()<sp/>),</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dist(<sp/>seg.terminal()<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<sp/>seg.dist(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>()<sp/>),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.dist(<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>()<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a44170faa05fc845a56c066b337c15fec" kindref="member">Segment2D::farthestDist</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="367"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<sp/>std::max(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>().dist2(<sp/>p<sp/>),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>().dist2(<sp/>p<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a6a20bc99f33e9459e2ce36694d0a1e04" kindref="member">Segment2D::onSegment</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="378"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>Triangle2D(<sp/>*this,<sp/>p<sp/>).doubleSignedArea()<sp/>==<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_triangle2_d_1a60a3e7e55d27b3ca183a8d093fcce574" kindref="member">Triangle2D::double_signed_area</ref>(<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>(),<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>(),<sp/>p<sp/>)<sp/>==<sp/>0.0</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>checkIntersectsOnLine(<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><ref refid="classrcsc_1_1_segment2_d_1a926ee84a23a79632683f3621449911fa" kindref="member">Segment2D::onSegmentWeakly</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_vector2_d" kindref="compound">Vector2D</ref><sp/>&amp;<sp/>p<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>proj<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1a2d50e9f1e73668c3ddb7c1f2a4ab3430" kindref="member">projection</ref>(<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>proj.isValid()</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>p.equalsWeakly(<sp/>proj<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>o<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1adbf14a9152602fc6abe253028ef1d961" kindref="member">origin</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2D<sp/>t<sp/>=<sp/><ref refid="classrcsc_1_1_segment2_d_1a5aa01ea7a341adaeec9a4e89d55619d0" kindref="member">terminal</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>buf<sp/>=<sp/>(<sp/>allow_on_terminal</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>EPSILON</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::fabs(<sp/>(<sp/>t<sp/>-<sp/>o<sp/>).outerProduct(<sp/>p<sp/>-<sp/>o<sp/>)<sp/>)<sp/>&lt;<sp/>EPSILON<sp/>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::fabs(<sp/>o.x<sp/>-<sp/>t.x<sp/>)<sp/>&lt;<sp/>EPSILON<sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>o.y<sp/>-<sp/>buf<sp/>&lt;<sp/>p.y<sp/>&amp;&amp;<sp/>p.y<sp/>&lt;<sp/>t.y<sp/>+<sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>t.y<sp/>-<sp/>buf<sp/>&lt;<sp/>p.y<sp/>&amp;&amp;<sp/>p.y<sp/>&lt;<sp/>o.y<sp/>+<sp/>buf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>o.x<sp/>-<sp/>buf<sp/>&lt;<sp/>p.x<sp/>&amp;&amp;<sp/>p.x<sp/>&lt;<sp/>t.x<sp/>+<sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>t.x<sp/>-<sp/>buf<sp/>&lt;<sp/>p.x<sp/>&amp;&amp;<sp/>p.x<sp/>&lt;<sp/>o.x<sp/>+<sp/>buf)<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ui/geom/segment_2d.cpp"/>
  </compounddef>
</doxygen>
