<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_selection_decorator" kind="class" language="C++" prot="public">
    <compoundname>QCPSelectionDecorator</compoundname>
    <derivedcompoundref refid="class_q_c_p_selection_decorator_bracket" prot="public" virt="non-virtual">QCPSelectionDecoratorBracket</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_selection_decorator_1a684a691c146a5bac927c0146bd28d557" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPSelectionDecorator::mPen</definition>
        <argsstring></argsstring>
        <name>mPen</name>
        <qualifiedname>QCPSelectionDecorator::mPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3441" column="8" bodyfile="qcustomplot.h" bodystart="3441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_decorator_1a4e3a3a01fdec5b018c0c59a0b6ae9f70" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPSelectionDecorator::mBrush</definition>
        <argsstring></argsstring>
        <name>mBrush</name>
        <qualifiedname>QCPSelectionDecorator::mBrush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3442" column="10" bodyfile="qcustomplot.h" bodystart="3442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_decorator_1a5b822197a1bf802c5cf8c3dc43ca549a" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPSelectionDecorator::mScatterStyle</definition>
        <argsstring></argsstring>
        <name>mScatterStyle</name>
        <qualifiedname>QCPSelectionDecorator::mScatterStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3443" column="19" bodyfile="qcustomplot.h" bodystart="3443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_decorator_1acb4f6af085283c9ce7d5c168fb53e855" prot="protected" static="no" mutable="no">
        <type>QCPScatterStyle::ScatterProperties</type>
        <definition>QCPScatterStyle::ScatterProperties QCPSelectionDecorator::mUsedScatterProperties</definition>
        <argsstring></argsstring>
        <name>mUsedScatterProperties</name>
        <qualifiedname>QCPSelectionDecorator::mUsedScatterProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3444" column="38" bodyfile="qcustomplot.h" bodystart="3444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_selection_decorator_1a25250a1d29b0723c4fa59a97e62f5758" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref> *</type>
        <definition>QCPAbstractPlottable* QCPSelectionDecorator::mPlottable</definition>
        <argsstring></argsstring>
        <name>mPlottable</name>
        <qualifiedname>QCPSelectionDecorator::mPlottable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3446" column="24" bodyfile="qcustomplot.h" bodystart="3446" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_selection_decorator_1a53cf0e76aca814550c796fed79e345d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPAbstractPlottable</definition>
        <argsstring></argsstring>
        <name>QCPAbstractPlottable</name>
        <qualifiedname>QCPSelectionDecorator::QCPAbstractPlottable</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3453" column="16" bodyfile="qcustomplot.h" bodystart="3453" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPSelectionDecorator::QCPSelectionDecorator</definition>
        <argsstring>()</argsstring>
        <name>QCPSelectionDecorator</name>
        <qualifiedname>QCPSelectionDecorator::QCPSelectionDecorator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref> instance with default values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3415" column="3" bodyfile="qcustomplot.cpp" bodystart="11056" bodyend="11062"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1ab211eb11379854dcbe23b1642be0d19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPSelectionDecorator::~QCPSelectionDecorator</definition>
        <argsstring>()</argsstring>
        <name>~QCPSelectionDecorator</name>
        <qualifiedname>QCPSelectionDecorator::~QCPSelectionDecorator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3416" column="11" bodyfile="qcustomplot.cpp" bodystart="11064" bodyend="11066"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a9307a60c9759223367909aed2d05ad91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPSelectionDecorator::pen</definition>
        <argsstring>() const</argsstring>
        <name>pen</name>
        <qualifiedname>QCPSelectionDecorator::pen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3419" column="8" bodyfile="qcustomplot.h" bodystart="3419" bodyend="3419"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a783b643aa52120a25308fc501b9998b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPSelectionDecorator::brush</definition>
        <argsstring>() const</argsstring>
        <name>brush</name>
        <qualifiedname>QCPSelectionDecorator::brush</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3420" column="10" bodyfile="qcustomplot.h" bodystart="3420" bodyend="3420"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1aa6558f6f270a188bb633386aba0d1ae4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPSelectionDecorator::scatterStyle</definition>
        <argsstring>() const</argsstring>
        <name>scatterStyle</name>
        <qualifiedname>QCPSelectionDecorator::scatterStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3421" column="19" bodyfile="qcustomplot.h" bodystart="3421" bodyend="3421"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1ab2019bf31dde39f1ec028e3810dfc08b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QCPScatterStyle::ScatterProperties</type>
        <definition>QCPScatterStyle::ScatterProperties QCPSelectionDecorator::usedScatterProperties</definition>
        <argsstring>() const</argsstring>
        <name>usedScatterProperties</name>
        <qualifiedname>QCPSelectionDecorator::usedScatterProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3422" column="38" bodyfile="qcustomplot.h" bodystart="3422" bodyend="3422"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1ac2c8192e1e294aa3a4a7f32a859e3d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::setPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setPen</name>
        <qualifiedname>QCPSelectionDecorator::setPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen that will be used by the parent plottable to draw selected data segments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3425" column="8" bodyfile="qcustomplot.cpp" bodystart="11071" bodyend="11074"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1aa74b626be518ea17055f918d423c8c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::setBrush</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setBrush</name>
        <qualifiedname>QCPSelectionDecorator::setBrush</qualifiedname>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the brush that will be used by the parent plottable to draw selected data segments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3426" column="8" bodyfile="qcustomplot.cpp" bodystart="11079" bodyend="11082"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::setScatterStyle</definition>
        <argsstring>(const QCPScatterStyle &amp;scatterStyle, QCPScatterStyle::ScatterProperties usedProperties=QCPScatterStyle::spPen)</argsstring>
        <name>setScatterStyle</name>
        <qualifiedname>QCPSelectionDecorator::setScatterStyle</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref> &amp;</type>
          <declname>scatterStyle</declname>
        </param>
        <param>
          <type>QCPScatterStyle::ScatterProperties</type>
          <declname>usedProperties</declname>
          <defval><ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46aa04d012e7c03e455db2b68fdd55c2a04" kindref="member">QCPScatterStyle::spPen</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the scatter style that will be used by the parent plottable to draw scatters in selected data segments.</para>
<para><emphasis>usedProperties</emphasis> specifies which parts of the passed <emphasis>scatterStyle</emphasis> will be used by the plottable. The used properties can also be changed via <ref refid="class_q_c_p_selection_decorator_1a808c1607cd4e83869c04986e332455c0" kindref="member">setUsedScatterProperties</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3427" column="8" bodyfile="qcustomplot.cpp" bodystart="11091" bodyend="11095"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a808c1607cd4e83869c04986e332455c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::setUsedScatterProperties</definition>
        <argsstring>(const QCPScatterStyle::ScatterProperties &amp;properties)</argsstring>
        <name>setUsedScatterProperties</name>
        <qualifiedname>QCPSelectionDecorator::setUsedScatterProperties</qualifiedname>
        <param>
          <type>const QCPScatterStyle::ScatterProperties &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use this method to define which properties of the scatter style (set via <ref refid="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" kindref="member">setScatterStyle</ref>) will be used for selected data segments. All properties of the scatter style that are not specified in <emphasis>properties</emphasis> will remain as specified in the plottable&apos;s original scatter style.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_scatter_style_1a8974f6a20f8f6eea7781f0e6af9deb46" kindref="member">QCPScatterStyle::ScatterProperty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3428" column="8" bodyfile="qcustomplot.cpp" bodystart="11104" bodyend="11107"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a75098893f7d08660ea449206810679d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::applyPen</definition>
        <argsstring>(QCPPainter *painter) const</argsstring>
        <name>applyPen</name>
        <qualifiedname>QCPSelectionDecorator::applyPen</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen of <emphasis>painter</emphasis> to the pen of this selection decorator.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_selection_decorator_1a225544527d51b49546b70d0e6d655a34" kindref="member">applyBrush</ref>, <ref refid="class_q_c_p_selection_decorator_1a1277b373248896bc70e8cc1de96da9fa" kindref="member">getFinalScatterStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3431" column="8" bodyfile="qcustomplot.cpp" bodystart="11114" bodyend="11117"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a225544527d51b49546b70d0e6d655a34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::applyBrush</definition>
        <argsstring>(QCPPainter *painter) const</argsstring>
        <name>applyBrush</name>
        <qualifiedname>QCPSelectionDecorator::applyBrush</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the brush of <emphasis>painter</emphasis> to the brush of this selection decorator.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_selection_decorator_1a75098893f7d08660ea449206810679d7" kindref="member">applyPen</ref>, <ref refid="class_q_c_p_selection_decorator_1a1277b373248896bc70e8cc1de96da9fa" kindref="member">getFinalScatterStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3432" column="8" bodyfile="qcustomplot.cpp" bodystart="11124" bodyend="11127"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a1277b373248896bc70e8cc1de96da9fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPSelectionDecorator::getFinalScatterStyle</definition>
        <argsstring>(const QCPScatterStyle &amp;unselectedStyle) const</argsstring>
        <name>getFinalScatterStyle</name>
        <qualifiedname>QCPSelectionDecorator::getFinalScatterStyle</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref> &amp;</type>
          <declname>unselectedStyle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the scatter style that the parent plottable shall use for selected scatter points. The plottable&apos;s original (unselected) scatter style must be passed as <emphasis>unselectedStyle</emphasis>. Depending on the setting of <ref refid="class_q_c_p_selection_decorator_1a808c1607cd4e83869c04986e332455c0" kindref="member">setUsedScatterProperties</ref>, the returned scatter style is a mixture of this selecion decorator&apos;s scatter style (<ref refid="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" kindref="member">setScatterStyle</ref>), and <emphasis>unselectedStyle</emphasis>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_selection_decorator_1a75098893f7d08660ea449206810679d7" kindref="member">applyPen</ref>, <ref refid="class_q_c_p_selection_decorator_1a225544527d51b49546b70d0e6d655a34" kindref="member">applyBrush</ref>, <ref refid="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" kindref="member">setScatterStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3433" column="19" bodyfile="qcustomplot.cpp" bodystart="11137" bodyend="11149"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a467a8d5cfcab27e862a17c797ac27b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::copyFrom</definition>
        <argsstring>(const QCPSelectionDecorator *other)</argsstring>
        <name>copyFrom</name>
        <qualifiedname>QCPSelectionDecorator::copyFrom</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copies all properties (e.g. color, fill, scatter style) of the <emphasis>other</emphasis> selection decorator to this selection decorator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3436" column="16" bodyfile="qcustomplot.cpp" bodystart="11155" bodyend="11160"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1a4f8eb49e277063845391e803ae23054a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPSelectionDecorator::drawDecoration</definition>
        <argsstring>(QCPPainter *painter, QCPDataSelection selection)</argsstring>
        <name>drawDecoration</name>
        <qualifiedname>QCPSelectionDecorator::drawDecoration</qualifiedname>
        <reimplementedby refid="class_q_c_p_selection_decorator_bracket_1a9ebe2e729b5012c0a995d788f87fac22">drawDecoration</reimplementedby>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref></type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called by all plottables&apos; draw methods to allow custom selection decorations to be drawn. Use the passed <emphasis>painter</emphasis> to perform the drawing operations. <emphasis>selection</emphasis> carries the data selection for which the decoration shall be drawn.</para>
<para>The default base class implementation of <ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref> has no special decoration, so this method does nothing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3437" column="16" bodyfile="qcustomplot.cpp" bodystart="11170" bodyend="11174"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_selection_decorator_1af66cb39e308da0285ae5d533e1e85027" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QCPSelectionDecorator::registerWithPlottable</definition>
        <argsstring>(QCPAbstractPlottable *plottable)</argsstring>
        <name>registerWithPlottable</name>
        <qualifiedname>QCPSelectionDecorator::registerWithPlottable</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref> *</type>
          <declname>plottable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="3449" column="16" bodyfile="qcustomplot.cpp" bodystart="11185" bodyend="11196"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Controls how a plottable&apos;s data selection is drawn. </para>
    </briefdescription>
    <detaileddescription>
<para>Each <ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref> instance has one <ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref> (accessible via <ref refid="class_q_c_p_abstract_plottable_1a7861518e47ca0c6a0c386032c2db075e" kindref="member">QCPAbstractPlottable::selectionDecorator</ref>) and uses it when drawing selected segments of its data.</para>
<para>The selection decorator controls both pen (<ref refid="class_q_c_p_selection_decorator_1ac2c8192e1e294aa3a4a7f32a859e3d76" kindref="member">setPen</ref>) and brush (<ref refid="class_q_c_p_selection_decorator_1aa74b626be518ea17055f918d423c8c2d" kindref="member">setBrush</ref>), as well as the scatter style (<ref refid="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" kindref="member">setScatterStyle</ref>) if the plottable draws scatters. Since a <ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref> is itself composed of different properties such as color shape and size, the decorator allows specifying exactly which of those properties shall be used for the selected data point, via <ref refid="class_q_c_p_selection_decorator_1a808c1607cd4e83869c04986e332455c0" kindref="member">setUsedScatterProperties</ref>.</para>
<para>A <ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref> subclass instance can be passed to a plottable via <ref refid="class_q_c_p_abstract_plottable_1a20e266ad646f8c4a7e4631040510e5d9" kindref="member">QCPAbstractPlottable::setSelectionDecorator</ref>, allowing greater customizability of the appearance of selected segments.</para>
<para>Use <ref refid="class_q_c_p_selection_decorator_1a467a8d5cfcab27e862a17c797ac27b8a" kindref="member">copyFrom</ref> to easily transfer the settings of one decorator to another one. This is especially useful since plottables take ownership of the passed selection decorator, and thus the same decorator instance can not be passed to multiple plottables.</para>
<para>Selection decorators can also themselves perform drawing operations by reimplementing <ref refid="class_q_c_p_selection_decorator_1a4f8eb49e277063845391e803ae23054a" kindref="member">drawDecoration</ref>, which is called by the plottable&apos;s draw method. The base class <ref refid="class_q_c_p_selection_decorator" kindref="compound">QCPSelectionDecorator</ref> does not make use of this however. For example, <ref refid="class_q_c_p_selection_decorator_bracket" kindref="compound">QCPSelectionDecoratorBracket</ref> draws brackets around selected data segments. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QCPSelectionDecorator</label>
        <link refid="class_q_c_p_selection_decorator"/>
      </node>
      <node id="2">
        <label>QCPSelectionDecoratorBracket</label>
        <link refid="class_q_c_p_selection_decorator_bracket"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>mSelection</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>mSelectionDecorator</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="16" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>QCPDataSelection</label>
        <link refid="class_q_c_p_data_selection"/>
      </node>
      <node id="14">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="13">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="2">
        <label>QCPScatterStyle</label>
        <link refid="class_q_c_p_scatter_style"/>
      </node>
      <node id="1">
        <label>QCPSelectionDecorator</label>
        <link refid="class_q_c_p_selection_decorator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mScatterStyle</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mPlottable</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="3411" column="1" bodyfile="qcustomplot.h" bodystart="3412" bodyend="3454"/>
    <listofallmembers>
      <member refid="class_q_c_p_selection_decorator_1a225544527d51b49546b70d0e6d655a34" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>applyBrush</name></member>
      <member refid="class_q_c_p_selection_decorator_1a75098893f7d08660ea449206810679d7" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>applyPen</name></member>
      <member refid="class_q_c_p_selection_decorator_1a783b643aa52120a25308fc501b9998b1" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>brush</name></member>
      <member refid="class_q_c_p_selection_decorator_1a467a8d5cfcab27e862a17c797ac27b8a" prot="public" virt="virtual"><scope>QCPSelectionDecorator</scope><name>copyFrom</name></member>
      <member refid="class_q_c_p_selection_decorator_1a4f8eb49e277063845391e803ae23054a" prot="public" virt="virtual"><scope>QCPSelectionDecorator</scope><name>drawDecoration</name></member>
      <member refid="class_q_c_p_selection_decorator_1a1277b373248896bc70e8cc1de96da9fa" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>getFinalScatterStyle</name></member>
      <member refid="class_q_c_p_selection_decorator_1a4e3a3a01fdec5b018c0c59a0b6ae9f70" prot="protected" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_selection_decorator_1a684a691c146a5bac927c0146bd28d557" prot="protected" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>mPen</name></member>
      <member refid="class_q_c_p_selection_decorator_1a25250a1d29b0723c4fa59a97e62f5758" prot="protected" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>mPlottable</name></member>
      <member refid="class_q_c_p_selection_decorator_1a5b822197a1bf802c5cf8c3dc43ca549a" prot="protected" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>mScatterStyle</name></member>
      <member refid="class_q_c_p_selection_decorator_1acb4f6af085283c9ce7d5c168fb53e855" prot="protected" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>mUsedScatterProperties</name></member>
      <member refid="class_q_c_p_selection_decorator_1a9307a60c9759223367909aed2d05ad91" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>pen</name></member>
      <member refid="class_q_c_p_selection_decorator_1a53cf0e76aca814550c796fed79e345d6" prot="private" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>QCPAbstractPlottable</name></member>
      <member refid="class_q_c_p_selection_decorator_1aa145480d9a062cd176fe30900bb7bca8" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>QCPSelectionDecorator</name></member>
      <member refid="class_q_c_p_selection_decorator_1af66cb39e308da0285ae5d533e1e85027" prot="protected" virt="virtual"><scope>QCPSelectionDecorator</scope><name>registerWithPlottable</name></member>
      <member refid="class_q_c_p_selection_decorator_1aa6558f6f270a188bb633386aba0d1ae4" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>scatterStyle</name></member>
      <member refid="class_q_c_p_selection_decorator_1aa74b626be518ea17055f918d423c8c2d" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_selection_decorator_1ac2c8192e1e294aa3a4a7f32a859e3d76" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>setPen</name></member>
      <member refid="class_q_c_p_selection_decorator_1ab403a613289714ff4fd4a0c0371ab116" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>setScatterStyle</name></member>
      <member refid="class_q_c_p_selection_decorator_1a808c1607cd4e83869c04986e332455c0" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>setUsedScatterProperties</name></member>
      <member refid="class_q_c_p_selection_decorator_1ab2019bf31dde39f1ec028e3810dfc08b" prot="public" virt="non-virtual"><scope>QCPSelectionDecorator</scope><name>usedScatterProperties</name></member>
      <member refid="class_q_c_p_selection_decorator_1ab211eb11379854dcbe23b1642be0d19e" prot="public" virt="virtual"><scope>QCPSelectionDecorator</scope><name>~QCPSelectionDecorator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
