<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_layerable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QCPLayerable</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_q_c_p_abstract_item" prot="public" virt="non-virtual">QCPAbstractItem</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_abstract_plottable" prot="public" virt="non-virtual">QCPAbstractPlottable</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_axis" prot="public" virt="non-virtual">QCPAxis</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_grid" prot="public" virt="non-virtual">QCPGrid</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_layout_element" prot="public" virt="non-virtual">QCPLayoutElement</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_polar_axis_radial" prot="public" virt="non-virtual">QCPPolarAxisRadial</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_polar_graph" prot="public" virt="non-virtual">QCPPolarGraph</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_polar_grid" prot="public" virt="non-virtual">QCPPolarGrid</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_selection_rect" prot="public" virt="non-virtual">QCPSelectionRect</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPLayerable::mVisible</definition>
        <argsstring></argsstring>
        <name>mVisible</name>
        <qualifiedname>QCPLayerable::mVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="754" column="8" bodyfile="qcustomplot.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
        <definition>QCustomPlot* QCPLayerable::mParentPlot</definition>
        <argsstring></argsstring>
        <name>mParentPlot</name>
        <qualifiedname>QCPLayerable::mParentPlot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="755" column="15" bodyfile="qcustomplot.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> &gt;</type>
        <definition>QPointer&lt;QCPLayerable&gt; QCPLayerable::mParentLayerable</definition>
        <argsstring></argsstring>
        <name>mParentLayerable</name>
        <qualifiedname>QCPLayerable::mParentLayerable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="756" column="12" bodyfile="qcustomplot.h" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> *</type>
        <definition>QCPLayer* QCPLayerable::mLayer</definition>
        <argsstring></argsstring>
        <name>mLayer</name>
        <qualifiedname>QCPLayerable::mLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="757" column="12" bodyfile="qcustomplot.h" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPLayerable::mAntialiased</definition>
        <argsstring></argsstring>
        <name>mAntialiased</name>
        <qualifiedname>QCPLayerable::mAntialiased</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="758" column="8" bodyfile="qcustomplot.h" bodystart="758" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_layerable_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <qualifiedname>QCPLayerable::QCustomPlot</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="785" column="16" bodyfile="qcustomplot.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_layerable_1a5dbf96bf7664c1b6fce49063eeea6eef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPLayer</definition>
        <argsstring></argsstring>
        <name>QCPLayer</name>
        <qualifiedname>QCPLayerable::QCPLayer</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="786" column="16" bodyfile="qcustomplot.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_layerable_1acbf20ecb140f66c5fd1bc64ae0762990" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPAxisRect</definition>
        <argsstring></argsstring>
        <name>QCPAxisRect</name>
        <qualifiedname>QCPLayerable::QCPAxisRect</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="787" column="16" bodyfile="qcustomplot.h" bodystart="787" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLayerable::QCPLayerable</definition>
        <argsstring>(QCustomPlot *plot, QString targetLayer=QString(), QCPLayerable *parentLayerable=nullptr)</argsstring>
        <name>QCPLayerable</name>
        <qualifiedname>QCPLayerable::QCPLayerable</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>plot</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>targetLayer</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> *</type>
          <declname>parentLayerable</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> instance.</para>
<para>Since <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> is an abstract base class, it can&apos;t be instantiated directly. Use one of the derived classes.</para>
<para>If <emphasis>plot</emphasis> is provided, it automatically places itself on the layer named <emphasis>targetLayer</emphasis>. If <emphasis>targetLayer</emphasis> is an empty string, it places itself on the current layer of the plot (see <ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">QCustomPlot::setCurrentLayer</ref>).</para>
<para>It is possible to provide <computeroutput>nullptr</computeroutput> as <emphasis>plot</emphasis>. In that case, you should assign a parent plot at a later time with initializeParentPlot.</para>
<para>The layerable&apos;s parent layerable is set to <emphasis>parentLayerable</emphasis>, if provided. Direct layerable parents are mainly used to control visibility in a hierarchy of layerables. This means a layerable is only drawn, if all its ancestor layerables are also visible. Note that <emphasis>parentLayerable</emphasis> does not become the QObject-parent (for memory management) of this layerable, <emphasis>plot</emphasis> does. It is not uncommon to set the QObject-parent to something else in the constructors of <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> subclasses, to guarantee a working destruction hierarchy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="727" column="3" bodyfile="qcustomplot.cpp" bodystart="1366" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPLayerable::~QCPLayerable</definition>
        <argsstring>()</argsstring>
        <name>~QCPLayerable</name>
        <qualifiedname>QCPLayerable::~QCPLayerable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="728" column="11" bodyfile="qcustomplot.cpp" bodystart="1383" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLayerable::visible</definition>
        <argsstring>() const</argsstring>
        <name>visible</name>
        <qualifiedname>QCPLayerable::visible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="731" column="8" bodyfile="qcustomplot.h" bodystart="731" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
        <definition>QCustomPlot * QCPLayerable::parentPlot</definition>
        <argsstring>() const</argsstring>
        <name>parentPlot</name>
        <qualifiedname>QCPLayerable::parentPlot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="732" column="15" bodyfile="qcustomplot.h" bodystart="732" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> *</type>
        <definition>QCPLayerable * QCPLayerable::parentLayerable</definition>
        <argsstring>() const</argsstring>
        <name>parentLayerable</name>
        <qualifiedname>QCPLayerable::parentLayerable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the parent layerable of this layerable. The parent layerable is used to provide visibility hierarchies in conjunction with the method <ref refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" kindref="member">realVisibility</ref>. This way, layerables only get drawn if their parent layerables are visible, too.</para>
<para>Note that a parent layerable is not necessarily also the QObject parent for memory management. Further, a layerable doesn&apos;t always have a parent layerable, so this function may return <computeroutput>nullptr</computeroutput>.</para>
<para>A parent layerable is set implicitly when placed inside layout elements and doesn&apos;t need to be set manually by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="733" column="16" bodyfile="qcustomplot.h" bodystart="733" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> *</type>
        <definition>QCPLayer * QCPLayerable::layer</definition>
        <argsstring>() const</argsstring>
        <name>layer</name>
        <qualifiedname>QCPLayerable::layer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="734" column="12" bodyfile="qcustomplot.h" bodystart="734" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLayerable::antialiased</definition>
        <argsstring>() const</argsstring>
        <name>antialiased</name>
        <qualifiedname>QCPLayerable::antialiased</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="735" column="8" bodyfile="qcustomplot.h" bodystart="735" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayerable::setVisible</definition>
        <argsstring>(bool on)</argsstring>
        <name>setVisible</name>
        <qualifiedname>QCPLayerable::setVisible</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the visibility of this layerable object. If an object is not visible, it will not be drawn on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface, and user interaction with it (e.g. click and selection) is not possible. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="738" column="8" bodyfile="qcustomplot.cpp" bodystart="1397" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SLOT bool</type>
        <definition>bool QCPLayerable::setLayer</definition>
        <argsstring>(QCPLayer *layer)</argsstring>
        <name>setLayer</name>
        <qualifiedname>QCPLayerable::setLayer</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>layer</emphasis> of this layerable object. The object will be placed on top of the other objects already on <emphasis>layer</emphasis>.</para>
<para>If <emphasis>layer</emphasis> is 0, this layerable will not be on any layer and thus not appear in the plot (or interact/receive events).</para>
<para>Returns true if the layer of this layerable was successfully changed to <emphasis>layer</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="739" column="15" bodyfile="qcustomplot.cpp" bodystart="1411" bodyend="1414"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLayerable::setLayer</definition>
        <argsstring>(const QString &amp;layerName)</argsstring>
        <name>setLayer</name>
        <qualifiedname>QCPLayerable::setLayer</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>layerName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Sets the layer of this layerable object by name</para>
<para>Returns true on success, i.e. if <emphasis>layerName</emphasis> is a valid layer name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="740" column="8" bodyfile="qcustomplot.cpp" bodystart="1421" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayerable::setAntialiased</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setAntialiased</name>
        <qualifiedname>QCPLayerable::setAntialiased</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether this object will be drawn antialiased or not.</para>
<para>Note that antialiasing settings may be overridden by <ref refid="class_q_custom_plot_1af6f91e5eab1be85f67c556e98c3745e8" kindref="member">QCustomPlot::setAntialiasedElements</ref> and <ref refid="class_q_custom_plot_1ae10d685b5eabea2999fb8775ca173c24" kindref="member">QCustomPlot::setNotAntialiasedElements</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="741" column="8" bodyfile="qcustomplot.cpp" bodystart="1444" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPLayerable::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=nullptr) const</argsstring>
        <name>selectTest</name>
        <qualifiedname>QCPLayerable::selectTest</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1ac75a4bdcba0ce51ae22eacebb16a9dcd">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a206879d493749c3fb1494850bff40e7e">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable1_d_1a2f169c3c2989e5d08ec7a9e3eb56a261">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1a8e4964b629802ce50e1427c7fb21d35b">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_1ad7db27e407c6ffdfca32ed3c53519584">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_bars_1ae490d8589b7e5f5d7e2e5ee88ce3e6c2">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_map_1af0a8ef6c421bd387bbbc8e5f5cb2a602">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_curve_1a6717367381d420607fae5c98b4eba022">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_error_bars_1a35d48d6b283898e725cc9f3fb38c2769">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_financial_1a8114a6d3ab6bea0a93d4b85401f29b52">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_graph_1af524307eacb919827b88233ef7449ce3">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_bracket_1a8c3bc895c9db93e97a291a1199f6f8c6">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_curve_1ae5b09ad4ea7ec2d9f08190c73c39e9b9">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_ellipse_1a1037a6c39ad70aabcb1b552a8b4eff97">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_line_1aae15b3ca3fdad76e6aed9c4e01fd5e94">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_pixmap_1a35f4da350e37f4d7ac8c837ad160967f">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_rect_1a40786d237a1f8f22a90627068940ec08">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_straight_line_1a0b10bec4746760cc99d210ba040cb8f7">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_text_1a9345ae04cb0e06b77c76381ca45c9717">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_tracer_1a01d8814404e3f0910b84029016ef73b2">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_layout_element_1a62d60f1b0ee9bb23e38811d71586d79c">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_layout_inset_1a1569969c3e7e92f64ea13d46616e5a8a">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1ae11e1229abeec1abdbd22a57f2b26a84">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1abb390ae7656b7241acfe4ed9ea56f1ae">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1afc641137eaf389f6a8490a3cf8131cb4">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1a4033ca80db907352e4188162f861d69a">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_statistical_box_1abefd8d3e0adf21c198cfc9615ddc8df1">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1a29e95d6cfd9e28772ce6a8890a2c8889">selectTest</reimplementedby>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to decide whether a click hits a layerable object or not.</para>
<para><emphasis>pos</emphasis> is a point in pixel coordinates on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. This function returns the shortest pixel distance of this point to the object. If the object is either invisible or the distance couldn&apos;t be determined, -1.0 is returned. Further, if <emphasis>onlySelectable</emphasis> is true and the object is not selectable, -1.0 is returned, too.</para>
<para>If the object is represented not by single lines but by an area like a <ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref> or the bars of a <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottable, a click inside the area should also be considered a hit. In these cases this function thus returns a constant value greater zero but still below the parent plot&apos;s selection tolerance. (typically the selectionTolerance multiplied by 0.99).</para>
<para>Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i.e. closer than 0.99*selectionTolerance).</para>
<para>The actual setting of the selection state is not done by this function. This is handled by the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/ deselectEvent methods.</para>
<para><emphasis>details</emphasis> is an optional output parameter. Every layerable subclass may place any information in <emphasis>details</emphasis>. This information will be passed to selectEvent when the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides on the basis of this selectTest call, that the object was successfully selected. The subsequent call to selectEvent will carry the <emphasis>details</emphasis>. This is useful for multi-part objects (like <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>). This way, a possibly complex calculation to decide which part was clicked is only done once in <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">selectTest</ref>. The result (i.e. the actually clicked part) can then be placed in <emphasis>details</emphasis>. So in the subsequent selectEvent, the decision which part was selected doesn&apos;t have to be done a second time for a single selection operation.</para>
<para>In the case of 1D Plottables (<ref refid="class_q_c_p_abstract_plottable1_d" kindref="compound">QCPAbstractPlottable1D</ref>, like <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> or <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>) <emphasis>details</emphasis> will be set to a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref>, describing the closest data point to <emphasis>pos</emphasis>.</para>
<para>You may pass <computeroutput>nullptr</computeroutput> as <emphasis>details</emphasis> to indicate that you are not interested in those selection details.</para>
<para><simplesect kind="see"><para>selectEvent, deselectEvent, <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref>, <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref>, <ref refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" kindref="member">QCPAbstractPlottable1D::selectTestRect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="744" column="18" bodyfile="qcustomplot.cpp" bodystart="1503" bodyend="1509"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLayerable::realVisibility</definition>
        <argsstring>() const</argsstring>
        <name>realVisibility</name>
        <qualifiedname>QCPLayerable::realVisibility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether this layerable is visible, taking the visibility of the layerable parent and the visibility of this layerable&apos;s layer into account. This is the method that is consulted to decide whether a layerable shall be drawn or not.</para>
<para>If this layerable has a direct layerable parent (usually set via hierarchies implemented in subclasses, like in the case of <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>), this function returns true only if this layerable has its visibility set to true and the parent layerable&apos;s <ref refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" kindref="member">realVisibility</ref> returns true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="747" column="8" bodyfile="qcustomplot.cpp" bodystart="1459" bodyend="1462"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayerable::layerChanged</definition>
        <argsstring>(QCPLayer *newLayer)</argsstring>
        <name>layerChanged</name>
        <qualifiedname>QCPLayerable::layerChanged</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> *</type>
          <declname>newLayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the layer of this layerable changes, i.e. this layerable is moved to a different layer.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">setLayer</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="750" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::parentPlotInitialized</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>parentPlotInitialized</name>
        <qualifiedname>QCPLayerable::parentPlotInitialized</qualifiedname>
        <reimplementedby refid="class_q_c_p_layout_element_1ab4bb5c5a958451f5f153fdce350f13cf">parentPlotInitialized</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a2b225cefb5eb267771e2c7c44fd2b408">parentPlotInitialized</reimplementedby>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="761" column="16" bodyfile="qcustomplot.cpp" bodystart="1624" bodyend="1627"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a908c9edda761886f33893be326dab77d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref></type>
        <definition>QCP::Interaction QCPLayerable::selectionCategory</definition>
        <argsstring>() const</argsstring>
        <name>selectionCategory</name>
        <qualifiedname>QCPLayerable::selectionCategory</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1aceb5f99c361cf023c7cbe7339ea29571">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1af8eb0fda0e11b0a23e1051b0102c8c6a">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1af80ad8531642e786b6f4fad551c203c4">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_1ab751e3e96495716a2f6742ca7d7b3d49">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a1a2075e462984f9ff51d9c75bda3581b">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1a2fdb74ce12d5c5dfe45ba3a231d31e6f">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a571f8fb8443c8296be9af378bd72ed14">selectionCategory</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1aad2e0f0209b63f2ba79ef95121b80fab">selectionCategory</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="762" column="28" bodyfile="qcustomplot.cpp" bodystart="1640" bodyend="1643"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1acbcfc9ecc75433747b1978a77b1864b3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QRect</type>
        <definition>QRect QCPLayerable::clipRect</definition>
        <argsstring>() const</argsstring>
        <name>clipRect</name>
        <qualifiedname>QCPLayerable::clipRect</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1a6ad60000f29afe11035e1f791dcbd45a">clipRect</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a806fa4d0104bdfc141aa8a36fcc9d51c">clipRect</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1a635cee3effc07ad421414c76fd83548c">clipRect</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1a9a7713734980adecbe53421795977806">clipRect</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="763" column="17" bodyfile="qcustomplot.cpp" bodystart="1654" bodyend="1660"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a1168944abbf9fa6731b0f4a2d0d67e8b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QCPLayerable::applyDefaultAntialiasingHint</definition>
        <argsstring>(QCPPainter *painter) const =0</argsstring>
        <name>applyDefaultAntialiasingHint</name>
        <qualifiedname>QCPLayerable::applyDefaultAntialiasingHint</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1a5579ce9ec7cad202499886b042448b10">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a6bfbcb9ace779f4f6fe22241c32a67c9">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1ac032077fb0db93d6faa3273d02363398">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_1adbaeffcdc2707f2bd5dc1bbd11236770">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1a4a318008e2b7f881a14c3d97186b31f9">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1af1b24d24a70f25b65d29f09e413390a8">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_grid_1a64fa48e16b4629f5df2a5029ab6e761c">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_layout_element_1a0a8f18141bcf46cf40ad4c13324ff346">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a817f75c234f82a2e26643dc0de742095">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1ae29231b68e311a3004a310b65b14ba5a">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a0e715101c09a44d099f48363553213ff">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1acc25e8bb9c15d27efdf1d9071bb1e74d">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_grid_1ac3ec084d6db6c8a27b94f91b57a8ea32">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_selection_rect_1aa854697618e16037ba9c73056abfb9bf">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1a91f2e4b4a639d9079e89a0030c7ed352">applyDefaultAntialiasingHint</reimplementedby>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="764" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1adf62b4bac3ca934db80290792fc897e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QCPLayerable::draw</definition>
        <argsstring>(QCPPainter *painter)=0</argsstring>
        <name>draw</name>
        <qualifiedname>QCPLayerable::draw</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1afe12c077663d07233a1b06608783ae41">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a14ce0b09f5b814c765a0d790bd838909">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1a453f676a5cee7bf846c5f0fa05ea84b3">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_1ac15ebb4225ca5212d8e5fffae481bc9b">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1af710c50530e370539a4439d6c4db9090">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_bars_1aa267c20650d55084c3f47cb2f8fac9dc">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_map_1a6b628014d2939368935efd0a788648c8">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_axis_rect_private_1a52a21c7cbe086cd587c955cfe6e25e3b">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_curve_1ac199d41d23865cd68bd7b598308a4433">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_error_bars_1a801e85931372abf2a1034bfb2eac5cd2">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_financial_1a4d62b7a618d609321adb5f5f1e31f446">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_graph_1a2b0849598f06e834b43ce18cd13bcdc3">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_grid_1aad9a312d998e2d170956334d4cb80be2">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_bracket_1a942a3978aea44a2fc7b4383f2bf6d417">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_curve_1a856ae61de18278847ba5e0e357bf68f2">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_ellipse_1a77eebd67a402fc496082a2e51356928c">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_line_1ae184140b61b2ef5b8edde76304447200">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_pixmap_1a9538a7d37fe20a4ff4bb2cb5bbbf2b48">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_rect_1a3c492960d0fc038cf1b60578b62b6cdc">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_straight_line_1acbc84ad219bf4845152e4e2202fcaa3c">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_text_1a8f8f075da83b6547c2b32e1f64cf0554">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_item_tracer_1a11f187ffea436434f3b5cfc387811967">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_layout_element_1ad1c597b1d608cfdd86e7b76819a94cfb">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a74f93358d2b4a76ec95c3a5d825582a3">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_plottable_legend_item_1a5838366619200e99680afa6d355d13fa">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1abc33754f6575a0ac2cdc597bbd11c6c7">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a3cdaf627422f95c727b15dceedc5dfe4">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1a2a053fc53b7945cd2e3b93cef9cade9a">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_grid_1af62b863506a570afdb83e9433b91aee8">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_legend_item_1abf9639f11bfc64779f243cca920aadef">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_selection_rect_1ab0e50ae796508bdcd97ab8c335c593bf">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_statistical_box_1afcff35fa79728cfe10e80e0702014fea">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1ad1dae61ea77ae74841f3c2fb765fc88e">draw</reimplementedby>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="765" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::selectEvent</definition>
        <argsstring>(QMouseEvent *event, bool additive, const QVariant &amp;details, bool *selectionStateChanged)</argsstring>
        <name>selectEvent</name>
        <qualifiedname>QCPLayerable::selectEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1aa4b969c58797f39c9c0b6c07c7869d17">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a0081acfd8c4bb8ac4e9dcfe0f6c49b74">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1a2d488568cf16600dd81fa23d7d439829">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_1a50c3ed18e189d48421ec2978f88e4f87">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a71f54a05c3e5b1a1ade1864422cd642e">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a2e034f1262cb3a094e28dbd2df12dcf9">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1a1bc6a4af76e45ce13cd4f544062ff8b3">selectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1a8d696ea82fa7bf743e01858039c03525">selectEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>additive</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>selectionStateChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="767" column="16" bodyfile="qcustomplot.cpp" bodystart="1690" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::deselectEvent</definition>
        <argsstring>(bool *selectionStateChanged)</argsstring>
        <name>deselectEvent</name>
        <qualifiedname>QCPLayerable::deselectEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_abstract_item_1af9093798cb07a861dcc73f93ca16c0c1">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1aa1c0620558cc8e2a2e6fb7ab558f6097">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_plottable_1a9b104d9da4f38f934363945c313bf82e">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_1a5bc1f8a8d0fbc7658eba70c80279ed31">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1ac2066837f7ebc32a5b15434cdca5b176">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a6f9315951fdf416b15ed0dd62d3ecd34">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_graph_1a3372c079d5859f513d18384890945072">deselectEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1a9a631a9deb9d82089a9d52de1744accf">deselectEvent</reimplementedby>
        <param>
          <type>bool *</type>
          <declname>selectionStateChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="768" column="16" bodyfile="qcustomplot.cpp" bodystart="1710" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::mousePressEvent</definition>
        <argsstring>(QMouseEvent *event, const QVariant &amp;details)</argsstring>
        <name>mousePressEvent</name>
        <qualifiedname>QCPLayerable::mousePressEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_axis_1a61bc07cda6193a3fa6b5aa198fc4e4fa">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1aa9a7c807eaa4666870ac94aa6abc4dde">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a91f633b97ffcd57fdf8cd814974c20e6">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_axis_rect_private_1aa9a7c807eaa4666870ac94aa6abc4dde">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1a58b246497deae08694cfb40e0b4273eb">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a0fa3d3c617a57b4115b9bec55b739f88">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1ad7b2c98355e3d2f912574b74fcee0574">mousePressEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event gets called when the user presses a mouse button while the cursor is over the layerable. Whether a cursor is over the layerable is decided by a preceding call to <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">selectTest</ref>.</para>
<para>The current pixel position of the cursor on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> widget is accessible via <computeroutput>event-&gt;pos()</computeroutput>. The parameter <emphasis>details</emphasis> contains layerable-specific details about the hit, which were generated in the previous call to <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">selectTest</ref>. For example, One-dimensional plottables like <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> or <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> convey the clicked data point in the <emphasis>details</emphasis> parameter, as <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> packed as QVariant. Multi-part objects convey the specific <computeroutput>SelectablePart</computeroutput> that was hit (e.g. <ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref> in the case of axes).</para>
<para><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> uses an event propagation system that works the same as Qt&apos;s system. If your layerable doesn&apos;t reimplement the <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref> or explicitly calls <computeroutput>event-&gt;ignore()</computeroutput> in its reimplementation, the event will be propagated to the next layerable in the stacking order.</para>
<para>Once a layerable has accepted the <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, it is considered the mouse grabber and will receive all following calls to <ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref> or <ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref> for this mouse interaction (a &quot;mouse interaction&quot; in this context ends with the release).</para>
<para>The default implementation does nothing except explicitly ignoring the event with <computeroutput>event-&gt;ignore()</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref>, <ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref>, <ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="770" column="16" bodyfile="qcustomplot.cpp" bodystart="1740" bodyend="1744"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::mouseMoveEvent</definition>
        <argsstring>(QMouseEvent *event, const QPointF &amp;startPos)</argsstring>
        <name>mouseMoveEvent</name>
        <qualifiedname>QCPLayerable::mouseMoveEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_axis_1ac5a269609e6177737faabdc46434d8c7">mouseMoveEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1a9cd27ad8c5cfb49aefd9dbb30def4beb">mouseMoveEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a3b2bd79725aefaf2630fc76e90939442">mouseMoveEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_axis_rect_private_1a9cd27ad8c5cfb49aefd9dbb30def4beb">mouseMoveEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1a5e2b49c56b57abc2ac2005e330ef1ee7">mouseMoveEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1acaaca448f4599cc4d8b4d6a35f61e1e6">mouseMoveEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>startPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event gets called when the user moves the mouse while holding a mouse button, after this layerable has become the mouse grabber by accepting the preceding <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>.</para>
<para>The current pixel position of the cursor on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> widget is accessible via <computeroutput>event-&gt;pos()</computeroutput>. The parameter <emphasis>startPos</emphasis> indicates the position where the initial <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref> occurred, that started the mouse interaction.</para>
<para>The default implementation does nothing.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref>, <ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="771" column="16" bodyfile="qcustomplot.cpp" bodystart="1758" bodyend="1762"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::mouseReleaseEvent</definition>
        <argsstring>(QMouseEvent *event, const QPointF &amp;startPos)</argsstring>
        <name>mouseReleaseEvent</name>
        <qualifiedname>QCPLayerable::mouseReleaseEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_axis_1a780bee321fc6476e5fc49c4980291a01">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1a6c89b988d3a0b93c0878f0ebdb5037f4">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a6a35dd39ab4e5cb2d7b29ebb4d5b61b0">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_axis_rect_private_1a6c89b988d3a0b93c0878f0ebdb5037f4">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1af1514482693091c40fbe802fce3c1db4">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1a4fbf24f4373f8a4a740ab83b53a22c85">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_text_element_1acfcbaf9b1da18745e72726aafb39c855">mouseReleaseEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>startPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event gets called when the user releases the mouse button, after this layerable has become the mouse grabber by accepting the preceding <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>.</para>
<para>The current pixel position of the cursor on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> widget is accessible via <computeroutput>event-&gt;pos()</computeroutput>. The parameter <emphasis>startPos</emphasis> indicates the position where the initial <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref> occurred, that started the mouse interaction.</para>
<para>The default implementation does nothing.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref>, <ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="772" column="16" bodyfile="qcustomplot.cpp" bodystart="1776" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::mouseDoubleClickEvent</definition>
        <argsstring>(QMouseEvent *event, const QVariant &amp;details)</argsstring>
        <name>mouseDoubleClickEvent</name>
        <qualifiedname>QCPLayerable::mouseDoubleClickEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_text_element_1a2272ff775ab385f612e9fd39773de7c0">mouseDoubleClickEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event gets called when the user presses the mouse button a second time in a double-click, while the cursor is over the layerable. Whether a cursor is over the layerable is decided by a preceding call to <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">selectTest</ref>.</para>
<para>The <ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref> is called instead of the second <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>. So in the case of a double-click, the event succession is <emphasis>pressEvent <ndash/> releaseEvent <ndash/> doubleClickEvent <ndash/> releaseEvent</emphasis>.</para>
<para>The current pixel position of the cursor on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> widget is accessible via <computeroutput>event-&gt;pos()</computeroutput>. The parameter <emphasis>details</emphasis> contains layerable-specific details about the hit, which were generated in the previous call to <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">selectTest</ref>. For example, One-dimensional plottables like <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> or <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> convey the clicked data point in the <emphasis>details</emphasis> parameter, as <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref> packed as QVariant. Multi-part objects convey the specific <computeroutput>SelectablePart</computeroutput> that was hit (e.g. <ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref> in the case of axes).</para>
<para>Similarly to <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, once a layerable has accepted the <ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref>, it is considered the mouse grabber and will receive all following calls to <ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref> and <ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref> for this mouse interaction (a &quot;mouse interaction&quot; in this context ends with the release).</para>
<para>The default implementation does nothing except explicitly ignoring the event with <computeroutput>event-&gt;ignore()</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref>, <ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="773" column="16" bodyfile="qcustomplot.cpp" bodystart="1808" bodyend="1812"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayerable::wheelEvent</definition>
        <argsstring>(QWheelEvent *event)</argsstring>
        <name>wheelEvent</name>
        <qualifiedname>QCPLayerable::wheelEvent</qualifiedname>
        <reimplementedby refid="class_q_c_p_axis_1aa850f195d7cc470c53809d0fff5e444d">wheelEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1a93eeaa0c127d6d6fe8171b2455080262">wheelEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a63cf19be184f6670c9495ad3a9a1baeb">wheelEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_axis_rect_private_1a93eeaa0c127d6d6fe8171b2455080262">wheelEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_angular_1a78f5d8c2c942fa1c47dcef5d96616e8d">wheelEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_polar_axis_radial_1ab495743f9f7412a109af0b0065a7b9ae">wheelEvent</reimplementedby>
        <param>
          <type>QWheelEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event gets called when the user turns the mouse scroll wheel while the cursor is over the layerable. Whether a cursor is over the layerable is decided by a preceding call to <ref refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" kindref="member">selectTest</ref>.</para>
<para>The current pixel position of the cursor on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> widget is accessible via <computeroutput>event-&gt;pos()</computeroutput>.</para>
<para>The <computeroutput>event-&gt;angleDelta()</computeroutput> indicates how far the mouse wheel was turned, which is usually +/- 120 for single rotation steps. However, if the mouse wheel is turned rapidly, multiple steps may accumulate to one event, making the delta larger. On the other hand, if the wheel has very smooth steps or none at all, the delta may be smaller.</para>
<para>The default implementation does nothing.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" kindref="member">mouseMoveEvent</ref>, <ref refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" kindref="member">mouseReleaseEvent</ref>, <ref refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" kindref="member">mouseDoubleClickEvent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="774" column="16" bodyfile="qcustomplot.cpp" bodystart="1831" bodyend="1834"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayerable::initializeParentPlot</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>initializeParentPlot</name>
        <qualifiedname>QCPLayerable::initializeParentPlot</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="777" column="8" bodyfile="qcustomplot.cpp" bodystart="1528" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayerable::setParentLayerable</definition>
        <argsstring>(QCPLayerable *parentLayerable)</argsstring>
        <name>setParentLayerable</name>
        <qualifiedname>QCPLayerable::setParentLayerable</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> *</type>
          <declname>parentLayerable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="778" column="8" bodyfile="qcustomplot.cpp" bodystart="1554" bodyend="1557"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLayerable::moveToLayer</definition>
        <argsstring>(QCPLayer *layer, bool prepend)</argsstring>
        <name>moveToLayer</name>
        <qualifiedname>QCPLayerable::moveToLayer</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>prepend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="779" column="8" bodyfile="qcustomplot.cpp" bodystart="1567" bodyend="1589"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayerable::applyAntialiasingHint</definition>
        <argsstring>(QCPPainter *painter, bool localAntialiased, QCP::AntialiasedElement overrideElement) const</argsstring>
        <name>applyAntialiasingHint</name>
        <qualifiedname>QCPLayerable::applyAntialiasingHint</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>localAntialiased</declname>
        </param>
        <param>
          <type><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref></type>
          <declname>overrideElement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="780" column="8" bodyfile="qcustomplot.cpp" bodystart="1598" bodyend="1606"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for all drawable objects. </para>
    </briefdescription>
    <detaileddescription>
<para>This is the abstract base class most visible objects derive from, e.g. plottables, axes, grid etc.</para>
<para>Every layerable is on a layer (<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>) which allows controlling the rendering order by stacking the layers accordingly.</para>
<para>For details about the layering mechanism, see the <ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> documentation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QCPAbstractItem</label>
        <link refid="class_q_c_p_abstract_item"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>QCPAbstractLegendItem</label>
        <link refid="class_q_c_p_abstract_legend_item"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>QCPAbstractPlottable1D&lt; DataType &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPAbstractPlottable1D&lt; QCPBarsData &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QCPAbstractPlottable1D&lt; QCPCurveData &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QCPAbstractPlottable1D&lt; QCPFinancialData &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QCPAbstractPlottable1D&lt; QCPGraphData &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>QCPAbstractPlottable1D&lt; QCPStatisticalBoxData &gt;</label>
        <link refid="class_q_c_p_abstract_plottable1_d"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPBars</label>
        <link refid="class_q_c_p_bars"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>QCPColorMap</label>
        <link refid="class_q_c_p_color_map"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>QCPColorScale</label>
        <link refid="class_q_c_p_color_scale"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>QCPColorScaleAxisRectPrivate</label>
        <link refid="class_q_c_p_color_scale_axis_rect_private"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QCPCurve</label>
        <link refid="class_q_c_p_curve"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>QCPErrorBars</label>
        <link refid="class_q_c_p_error_bars"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QCPFinancial</label>
        <link refid="class_q_c_p_financial"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QCPGraph</label>
        <link refid="class_q_c_p_graph"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QCPItemBracket</label>
        <link refid="class_q_c_p_item_bracket"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QCPItemCurve</label>
        <link refid="class_q_c_p_item_curve"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QCPItemEllipse</label>
        <link refid="class_q_c_p_item_ellipse"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QCPItemLine</label>
        <link refid="class_q_c_p_item_line"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QCPItemPixmap</label>
        <link refid="class_q_c_p_item_pixmap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QCPItemRect</label>
        <link refid="class_q_c_p_item_rect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPItemStraightLine</label>
        <link refid="class_q_c_p_item_straight_line"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QCPItemText</label>
        <link refid="class_q_c_p_item_text"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QCPItemTracer</label>
        <link refid="class_q_c_p_item_tracer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>QCPPlottableLegendItem</label>
        <link refid="class_q_c_p_plottable_legend_item"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>QCPPolarAxisAngular</label>
        <link refid="class_q_c_p_polar_axis_angular"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>QCPPolarAxisRadial</label>
        <link refid="class_q_c_p_polar_axis_radial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>QCPPolarGraph</label>
        <link refid="class_q_c_p_polar_graph"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>QCPPolarGrid</label>
        <link refid="class_q_c_p_polar_grid"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>QCPPolarLegendItem</label>
        <link refid="class_q_c_p_polar_legend_item"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>QCPStatisticalBox</label>
        <link refid="class_q_c_p_statistical_box"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>QCPTextElement</label>
        <link refid="class_q_c_p_text_element"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="13" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="10">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="17">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="4">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="716" column="1" bodyfile="qcustomplot.h" bodystart="717" bodyend="788"/>
    <listofallmembers>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_layerable_1a1168944abbf9fa6731b0f4a2d0d67e8b" prot="protected" virt="pure-virtual"><scope>QCPLayerable</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_layerable_1acbcfc9ecc75433747b1978a77b1864b3" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_layerable_1adf62b4bac3ca934db80290792fc897e1" prot="protected" virt="pure-virtual"><scope>QCPLayerable</scope><name>draw</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_layerable_1acbf20ecb140f66c5fd1bc64ae0762990" prot="private" virt="non-virtual"><scope>QCPLayerable</scope><name>QCPAxisRect</name></member>
      <member refid="class_q_c_p_layerable_1a5dbf96bf7664c1b6fce49063eeea6eef" prot="private" virt="non-virtual"><scope>QCPLayerable</scope><name>QCPLayer</name></member>
      <member refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" virt="non-virtual"><scope>QCPLayerable</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_layerable_1a908c9edda761886f33893be326dab77d" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_layerable_1a272989087fc8c4357b4ba614f9922336" prot="public" virt="virtual"><scope>QCPLayerable</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPLayerable</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPLayerable</scope><name>visible</name></member>
      <member refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" virt="virtual"><scope>QCPLayerable</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="virtual"><scope>QCPLayerable</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
