<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_item_line" kind="class" language="C++" prot="public">
    <compoundname>QCPItemLine</compoundname>
    <basecompoundref refid="class_q_c_p_abstract_item" prot="public" virt="non-virtual">QCPAbstractItem</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_q_c_p_item_line_1a602da607a09498b0f152ada1d6851bc5" prot="public" static="no" mutable="no">
        <type><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref> *const</type>
        <definition>QCPItemPosition* const QCPItemLine::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>QCPItemLine::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6456" column="26" bodyfile="qcustomplot.h" bodystart="6456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_line_1a15598864c1c22a2497a1979c4980c4e1" prot="public" static="no" mutable="no">
        <type><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref> *const</type>
        <definition>QCPItemPosition* const QCPItemLine::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>QCPItemLine::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6457" column="26" bodyfile="qcustomplot.h" bodystart="6457" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_item_line_1abbb544d5bb927dfe4e81a7f3ca4c65ac" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPItemLine::mPen</definition>
        <argsstring></argsstring>
        <name>mPen</name>
        <qualifiedname>QCPItemLine::mPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6461" column="8" bodyfile="qcustomplot.h" bodystart="6461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_line_1aff858ad6dde3b90024814ca4b116f278" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPItemLine::mSelectedPen</definition>
        <argsstring></argsstring>
        <name>mSelectedPen</name>
        <qualifiedname>QCPItemLine::mSelectedPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6461" column="13" bodyfile="qcustomplot.h" bodystart="6461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_line_1a51603f28ab7ddb1c1a95ea384791d3ed" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref></type>
        <definition>QCPLineEnding QCPItemLine::mHead</definition>
        <argsstring></argsstring>
        <name>mHead</name>
        <qualifiedname>QCPItemLine::mHead</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6462" column="17" bodyfile="qcustomplot.h" bodystart="6462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_item_line_1ab8ed61dfe15bbb1cbf9b95eae95e242f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref></type>
        <definition>QCPLineEnding QCPItemLine::mTail</definition>
        <argsstring></argsstring>
        <name>mTail</name>
        <qualifiedname>QCPItemLine::mTail</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6462" column="23" bodyfile="qcustomplot.h" bodystart="6462" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_item_line_1a17804b7f64961c6accf25b61e85142e3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPItemLine::QCPItemLine</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>QCPItemLine</name>
        <qualifiedname>QCPItemLine::QCPItemLine</qualifiedname>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a line item and sets default values.</para>
<para>The created item is automatically registered with <emphasis>parentPlot</emphasis>. This <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> instance takes ownership of the item, so do not delete it manually but use <ref refid="class_q_custom_plot_1ae04446557292551e8fb6e2c106e1848d" kindref="member">QCustomPlot::removeItem()</ref> instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6438" column="12" bodyfile="qcustomplot.cpp" bodystart="29023" bodyend="29033"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1a940273129348a9c4299912ea64216a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPItemLine::~QCPItemLine</definition>
        <argsstring>() Q_DECL_OVERRIDE</argsstring>
        <name>~QCPItemLine</name>
        <qualifiedname>QCPItemLine::~QCPItemLine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6439" column="11" bodyfile="qcustomplot.cpp" bodystart="29035" bodyend="29037"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1a712e5a7f59db3f4c588dfc370a63e225" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPItemLine::pen</definition>
        <argsstring>() const</argsstring>
        <name>pen</name>
        <qualifiedname>QCPItemLine::pen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6442" column="8" bodyfile="qcustomplot.h" bodystart="6442" bodyend="6442"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1ae1782c4fbecd38054ec3d49d8572a5e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPItemLine::selectedPen</definition>
        <argsstring>() const</argsstring>
        <name>selectedPen</name>
        <qualifiedname>QCPItemLine::selectedPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6443" column="8" bodyfile="qcustomplot.h" bodystart="6443" bodyend="6443"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1a6cdc9e87e17418d4b0e66eaa0f041407" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref></type>
        <definition>QCPLineEnding QCPItemLine::head</definition>
        <argsstring>() const</argsstring>
        <name>head</name>
        <qualifiedname>QCPItemLine::head</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6444" column="17" bodyfile="qcustomplot.h" bodystart="6444" bodyend="6444"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1ac085d3939ec11d7a4d592dc2ed578360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref></type>
        <definition>QCPLineEnding QCPItemLine::tail</definition>
        <argsstring>() const</argsstring>
        <name>tail</name>
        <qualifiedname>QCPItemLine::tail</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6445" column="17" bodyfile="qcustomplot.h" bodystart="6445" bodyend="6445"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1a572528dab61c1abe205822fbd5db4b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemLine::setPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setPen</name>
        <qualifiedname>QCPItemLine::setPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen that will be used to draw the line</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_line_1a3e2fec44503277e77717e9c24f87f1ea" kindref="member">setSelectedPen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6448" column="8" bodyfile="qcustomplot.cpp" bodystart="29044" bodyend="29047"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1a3e2fec44503277e77717e9c24f87f1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemLine::setSelectedPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setSelectedPen</name>
        <qualifiedname>QCPItemLine::setSelectedPen</qualifiedname>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen that will be used to draw the line when selected</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_line_1a572528dab61c1abe205822fbd5db4b27" kindref="member">setPen</ref>, <ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6449" column="8" bodyfile="qcustomplot.cpp" bodystart="29054" bodyend="29057"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemLine::setHead</definition>
        <argsstring>(const QCPLineEnding &amp;head)</argsstring>
        <name>setHead</name>
        <qualifiedname>QCPItemLine::setHead</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> &amp;</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the line ending style of the head. The head corresponds to the <emphasis>end</emphasis> position.</para>
<para>Note that due to the overloaded <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> constructor, you may directly specify a <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref> here, e.g. <programlisting><codeline><highlight class="normal"><ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">setHead</ref>(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">QCPLineEnding::esSpikeArrow</ref>)<sp/></highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">setTail</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6450" column="8" bodyfile="qcustomplot.cpp" bodystart="29067" bodyend="29070"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPItemLine::setTail</definition>
        <argsstring>(const QCPLineEnding &amp;tail)</argsstring>
        <name>setTail</name>
        <qualifiedname>QCPItemLine::setTail</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> &amp;</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the line ending style of the tail. The tail corresponds to the <emphasis>start</emphasis> position.</para>
<para>Note that due to the overloaded <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> constructor, you may directly specify a <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref> here, e.g. <programlisting><codeline><highlight class="normal"><ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">setTail</ref>(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">QCPLineEnding::esSpikeArrow</ref>)<sp/></highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">setHead</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6451" column="8" bodyfile="qcustomplot.cpp" bodystart="29080" bodyend="29083"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1aae15b3ca3fdad76e6aed9c4e01fd5e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPItemLine::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=nullptr) const Q_DECL_OVERRIDE</argsstring>
        <name>selectTest</name>
        <qualifiedname>QCPItemLine::selectTest</qualifiedname>
        <reimplements refid="class_q_c_p_abstract_item_1ac75a4bdcba0ce51ae22eacebb16a9dcd">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to decide whether a click hits a layerable object or not.</para>
<para><emphasis>pos</emphasis> is a point in pixel coordinates on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. This function returns the shortest pixel distance of this point to the object. If the object is either invisible or the distance couldn&apos;t be determined, -1.0 is returned. Further, if <emphasis>onlySelectable</emphasis> is true and the object is not selectable, -1.0 is returned, too.</para>
<para>If the object is represented not by single lines but by an area like a <ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref> or the bars of a <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottable, a click inside the area should also be considered a hit. In these cases this function thus returns a constant value greater zero but still below the parent plot&apos;s selection tolerance. (typically the selectionTolerance multiplied by 0.99).</para>
<para>Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i.e. closer than 0.99*selectionTolerance).</para>
<para>The actual setting of the selection state is not done by this function. This is handled by the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/ deselectEvent methods.</para>
<para><emphasis>details</emphasis> is an optional output parameter. Every layerable subclass may place any information in <emphasis>details</emphasis>. This information will be passed to selectEvent when the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides on the basis of this selectTest call, that the object was successfully selected. The subsequent call to selectEvent will carry the <emphasis>details</emphasis>. This is useful for multi-part objects (like <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>). This way, a possibly complex calculation to decide which part was clicked is only done once in <ref refid="class_q_c_p_item_line_1aae15b3ca3fdad76e6aed9c4e01fd5e94" kindref="member">selectTest</ref>. The result (i.e. the actually clicked part) can then be placed in <emphasis>details</emphasis>. So in the subsequent selectEvent, the decision which part was selected doesn&apos;t have to be done a second time for a single selection operation.</para>
<para>In the case of 1D Plottables (<ref refid="class_q_c_p_abstract_plottable1_d" kindref="compound">QCPAbstractPlottable1D</ref>, like <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> or <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref>) <emphasis>details</emphasis> will be set to a <ref refid="class_q_c_p_data_selection" kindref="compound">QCPDataSelection</ref>, describing the closest data point to <emphasis>pos</emphasis>.</para>
<para>You may pass <computeroutput>nullptr</computeroutput> as <emphasis>details</emphasis> to indicate that you are not interested in those selection details.</para>
<para><simplesect kind="see"><para>selectEvent, deselectEvent, <ref refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" kindref="member">mousePressEvent</ref>, <ref refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" kindref="member">wheelEvent</ref>, <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref>, <ref refid="class_q_c_p_abstract_plottable1_d_1a22377bf6e57ab7eedbc9e489250c6ded" kindref="member">QCPAbstractPlottable1D::selectTestRect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6454" column="18" bodyfile="qcustomplot.cpp" bodystart="29086" bodyend="29093"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_item_line_1ae184140b61b2ef5b8edde76304447200" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPItemLine::draw</definition>
        <argsstring>(QCPPainter *painter) Q_DECL_OVERRIDE</argsstring>
        <name>draw</name>
        <qualifiedname>QCPItemLine::draw</qualifiedname>
        <reimplements refid="class_q_c_p_abstract_item_1afe12c077663d07233a1b06608783ae41">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6465" column="16" bodyfile="qcustomplot.cpp" bodystart="29096" bodyend="29117"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1a7b00a1d82be8b961461cc4039acd12a3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QLineF</type>
        <definition>QLineF QCPItemLine::getRectClippedLine</definition>
        <argsstring>(const QCPVector2D &amp;start, const QCPVector2D &amp;end, const QRect &amp;rect) const</argsstring>
        <name>getRectClippedLine</name>
        <qualifiedname>QCPItemLine::getRectClippedLine</qualifiedname>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6468" column="10" bodyfile="qcustomplot.cpp" bodystart="29126" bodyend="29217"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_item_line_1af8b5370462515b279578d8b4a57bd3b4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPItemLine::mainPen</definition>
        <argsstring>() const</argsstring>
        <name>mainPen</name>
        <qualifiedname>QCPItemLine::mainPen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="6469" column="8" bodyfile="qcustomplot.cpp" bodystart="29224" bodyend="29227"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A line from one point to another. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="QCPItemLine.png">Line example. Blue dotted circles are anchors, solid blue discs are positions.</image>
</para>
<para>It has two positions, <emphasis>start</emphasis> and <emphasis>end</emphasis>, which define the end points of the line.</para>
<para>With <ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">setHead</ref> and <ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">setTail</ref> you may set different line ending styles, e.g. to create an arrow. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QCPAbstractItem</label>
        <link refid="class_q_c_p_abstract_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPItemLine</label>
        <link refid="class_q_c_p_item_line"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QCPAbstractItem</label>
        <link refid="class_q_c_p_abstract_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mDragStartRange</edgelabel>
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="15" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>QCPItemAnchor</label>
        <link refid="class_q_c_p_item_anchor"/>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>mParentItem</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QCPItemLine</label>
        <link refid="class_q_c_p_item_line"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>end</edgelabel>
          <edgelabel>start</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>mHead</edgelabel>
          <edgelabel>mTail</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>QCPItemPosition</label>
        <link refid="class_q_c_p_item_position"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>mParentAnchorX</edgelabel>
          <edgelabel>mParentAnchorY</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="12">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="19">
        <label>QCPSelectionRect</label>
        <link refid="class_q_c_p_selection_rect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>xAxis</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>yAxis</edgelabel>
          <edgelabel>yAxis2</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>mSelectionRect</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="6">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="6428" column="1" bodyfile="qcustomplot.h" bodystart="6429" bodyend="6470"/>
    <listofallmembers>
      <member refid="class_q_c_p_abstract_item_1a139c255ea8831642fac91748e29a5adb" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>anchor</name></member>
      <member refid="class_q_c_p_abstract_item_1ada5bad4e1196c4fc0d0d12328e24b8f2" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>anchorPixelPosition</name></member>
      <member refid="class_q_c_p_abstract_item_1a81d1ecfea3368b836cf9675a0045e659" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>anchors</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_item_1a5579ce9ec7cad202499886b042448b10" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_item_1ae162314efd3fe1a6d4df11da1d275d52" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>clipAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1a6ad60000f29afe11035e1f791dcbd45a" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_abstract_item_1a42715ad5f3d7fca6854025fa5636f436" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>clipToAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>createAnchor</name></member>
      <member refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>createPosition</name></member>
      <member refid="class_q_c_p_abstract_item_1af9093798cb07a861dcc73f93ca16c0c1" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_item_line_1ae184140b61b2ef5b8edde76304447200" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>draw</name></member>
      <member refid="class_q_c_p_item_line_1a15598864c1c22a2497a1979c4980c4e1" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>end</name></member>
      <member refid="class_q_c_p_item_line_1a7b00a1d82be8b961461cc4039acd12a3" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>getRectClippedLine</name></member>
      <member refid="class_q_c_p_abstract_item_1a84914f4516f9b38ef0bd89eafe3dbda7" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>hasAnchor</name></member>
      <member refid="class_q_c_p_item_line_1a6cdc9e87e17418d4b0e66eaa0f041407" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>head</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_layerable_1a9d4e121a7f1d2314f906fe698209cac9" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_item_line_1af8b5370462515b279578d8b4a57bd3b4" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mainPen</name></member>
      <member refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mAnchors</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mClipAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1ad2a70ff6b658fcb84a9427f69d3f587d" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mClipToAxisRect</name></member>
      <member refid="class_q_c_p_item_line_1a51603f28ab7ddb1c1a95ea384791d3ed" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mHead</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layerable_1a4171e2e823aca242dd0279f00ed2de81" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layerable_1a9eee1ba47fd69be111059ca3881933e4" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_layerable_1af6567604818db90f4fd52822f8bc8376" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_layerable_1aa0d79b005686f668622bbe66ac03ba2c" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_item_line_1abbb544d5bb927dfe4e81a7f3ca4c65ac" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mPen</name></member>
      <member refid="class_q_c_p_abstract_item_1af94ff71b6a15ea6d028ab8bd8eccd012" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mPositions</name></member>
      <member refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mSelectable</name></member>
      <member refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mSelected</name></member>
      <member refid="class_q_c_p_item_line_1aff858ad6dde3b90024814ca4b116f278" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mSelectedPen</name></member>
      <member refid="class_q_c_p_item_line_1ab8ed61dfe15bbb1cbf9b95eae95e242f" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mTail</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a36ed5b292b90934b524a4e5866a3526c" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_item_line_1a712e5a7f59db3f4c588dfc370a63e225" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>pen</name></member>
      <member refid="class_q_c_p_abstract_item_1a2589c3d298f9a576d77d9addb440a18d" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>position</name></member>
      <member refid="class_q_c_p_abstract_item_1a709f655ac3f7f22d452714134662b454" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>positions</name></member>
      <member refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>QCPAbstractItem</name></member>
      <member refid="class_q_c_p_item_line_1a17804b7f64961c6accf25b61e85142e3" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>QCPItemLine</name></member>
      <member refid="class_q_c_p_layerable_1a4f87f420cb2597e2b393aab934d2f099" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_abstract_item_1a7dfc2007e36d09b8b5c988a9f06d6a7e" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>rectDistance</name></member>
      <member refid="class_q_c_p_abstract_item_1ae29aa489767352b40c4aaa7ea50c5582" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>selectable</name></member>
      <member refid="class_q_c_p_abstract_item_1a5b266c11aac61cb511901f3911dac2a3" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_abstract_item_1aa069fba320a13639f119f82ad29ead96" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>selected</name></member>
      <member refid="class_q_c_p_item_line_1ae1782c4fbecd38054ec3d49d8572a5e5" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>selectedPen</name></member>
      <member refid="class_q_c_p_abstract_item_1aa4b969c58797f39c9c0b6c07c7869d17" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_abstract_item_1aceb5f99c361cf023c7cbe7339ea29571" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_abstract_item_1aa5cffb034fc65dbb91c77e02c1c14251" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_item_line_1aae15b3ca3fdad76e6aed9c4e01fd5e94" prot="public" virt="virtual"><scope>QCPItemLine</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_abstract_item_1a7dc75fcbcd10206fe0b75d757ea7a347" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setClipAxisRect</name></member>
      <member refid="class_q_c_p_abstract_item_1a39e05b9d4176b9accafc746d16ca6a06" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setClipToAxisRect</name></member>
      <member refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setHead</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPItemLine</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_item_line_1a572528dab61c1abe205822fbd5db4b27" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setPen</name></member>
      <member refid="class_q_c_p_abstract_item_1a8a8e32a55bc478b849756a78c2d87fd2" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setSelectable</name></member>
      <member refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setSelected</name></member>
      <member refid="class_q_c_p_item_line_1a3e2fec44503277e77717e9c24f87f1ea" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setSelectedPen</name></member>
      <member refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setTail</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_item_line_1a602da607a09498b0f152ada1d6851bc5" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>start</name></member>
      <member refid="class_q_c_p_item_line_1ac085d3939ec11d7a4d592dc2ed578360" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>tail</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPItemLine</scope><name>visible</name></member>
      <member refid="class_q_c_p_layerable_1a47dfd7b8fd99c08ca54e09c362b6f022" prot="protected" virt="virtual"><scope>QCPItemLine</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_abstract_item_1a5120698bef63cbaa8544e9f47a2f4abc" prot="public" virt="virtual"><scope>QCPItemLine</scope><name>~QCPAbstractItem</name></member>
      <member refid="class_q_c_p_item_line_1a940273129348a9c4299912ea64216a1c" prot="public" virt="virtual"><scope>QCPItemLine</scope><name>~QCPItemLine</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="virtual"><scope>QCPItemLine</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
