<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_kilobot_experiment" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KilobotExperiment</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_kilobot_experiment_1a74ad953b3997811b57d9e45f79f1c93f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int KilobotExperiment::serviceInterval</definition>
        <argsstring></argsstring>
        <name>serviceInterval</name>
        <qualifiedname>KilobotExperiment::serviceInterval</qualifiedname>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="21" column="9" bodyfile="Kilobot/kilobotexperiment.h" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_kilobot_experiment_1abea4a83a161e402ccdbca8645b12351f" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double KilobotExperiment::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <qualifiedname>KilobotExperiment::time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="90" column="12" bodyfile="Kilobot/kilobotexperiment.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kilobot_experiment_1aa5bb35c7c12e4863be4794a90fc54026" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KilobotExperiment::runtimeIdentificationLock</definition>
        <argsstring></argsstring>
        <name>runtimeIdentificationLock</name>
        <qualifiedname>KilobotExperiment::runtimeIdentificationLock</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="91" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kilobot_experiment_1ac972a3ba2c2a7943f8e0096526985329" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KilobotExperiment::ThereIsMsgsToSend</definition>
        <argsstring></argsstring>
        <name>ThereIsMsgsToSend</name>
        <qualifiedname>KilobotExperiment::ThereIsMsgsToSend</qualifiedname>
        <initializer>=false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="92" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kilobot_experiment_1aa324e0afabfdcfd555d9e0b3ba5442ec" prot="private" static="no" mutable="no">
        <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref> *</type>
        <definition>Kilobot* KilobotExperiment::currKilobot</definition>
        <argsstring></argsstring>
        <name>currKilobot</name>
        <qualifiedname>KilobotExperiment::currKilobot</qualifiedname>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="105" column="14" bodyfile="Kilobot/kilobotexperiment.h" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kilobot_experiment_1a6f01bc03edf71f07bd121ed5717fc513" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KilobotExperiment::KilobotExperiment</definition>
        <argsstring>()</argsstring>
        <name>KilobotExperiment</name>
        <qualifiedname>KilobotExperiment::KilobotExperiment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="16" column="5" bodyfile="Kilobot/kilobotexperiment.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_kilobot_experiment_1a7c812fa4a0ee309919628d990d80d76b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual KilobotExperiment::~KilobotExperiment</definition>
        <argsstring>()</argsstring>
        <name>~KilobotExperiment</name>
        <qualifiedname>KilobotExperiment::~KilobotExperiment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="17" column="13" bodyfile="Kilobot/kilobotexperiment.h" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_kilobot_experiment_1a5aed39899d0b5279631390bf9e04578d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QWidget *</type>
        <definition>virtual QWidget * KilobotExperiment::createGUI</definition>
        <argsstring>()</argsstring>
        <name>createGUI</name>
        <qualifiedname>KilobotExperiment::createGUI</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="23" column="22" bodyfile="Kilobot/kilobotexperiment.h" bodystart="23" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_kilobot_experiment_1a52d4d4c639ff26a90b0f9fd3fda59aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::updateKilobotStates</definition>
        <argsstring>()</argsstring>
        <name>updateKilobotStates</name>
        <qualifiedname>KilobotExperiment::updateKilobotStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="26" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a9af0858fe48c5570c79768b65ca912f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::getInitialKilobotStates</definition>
        <argsstring>()</argsstring>
        <name>getInitialKilobotStates</name>
        <qualifiedname>KilobotExperiment::getInitialKilobotStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="27" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1ac4a56cc7730910837a26696cb87fdd66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::experimentComplete</definition>
        <argsstring>()</argsstring>
        <name>experimentComplete</name>
        <qualifiedname>KilobotExperiment::experimentComplete</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="28" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a1313e1527fc2b99e1a01a28e87df276a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::saveImage</definition>
        <argsstring>(QString)</argsstring>
        <name>saveImage</name>
        <qualifiedname>KilobotExperiment::saveImage</qualifiedname>
        <param>
          <type>QString</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="29" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a1c1f32950e244c1c87f25d0b0006df30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::saveVideoFrames</definition>
        <argsstring>(QString, unsigned int)</argsstring>
        <name>saveVideoFrames</name>
        <qualifiedname>KilobotExperiment::saveVideoFrames</qualifiedname>
        <param>
          <type>QString</type>
        </param>
        <param>
          <type>unsigned int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="30" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a3e66bf1b4887400ebe9063c762d2e3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::signalKilobot</definition>
        <argsstring>(kilobot_message)</argsstring>
        <name>signalKilobot</name>
        <qualifiedname>KilobotExperiment::signalKilobot</qualifiedname>
        <param>
          <type><ref refid="structkilobot__message" kindref="compound">kilobot_message</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="31" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a194f42044aba491b64dc9ee9f459c814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::broadcastMessage</definition>
        <argsstring>(kilobot_broadcast)</argsstring>
        <name>broadcastMessage</name>
        <qualifiedname>KilobotExperiment::broadcastMessage</qualifiedname>
        <param>
          <type><ref refid="structkilobot__broadcast" kindref="compound">kilobot_broadcast</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="32" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a79c769a8ab1653d762b5cd0ff739e2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::setTrackingType</definition>
        <argsstring>(int)</argsstring>
        <name>setTrackingType</name>
        <qualifiedname>KilobotExperiment::setTrackingType</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="33" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1aa2c5182f1fdfb604a469c23ab610ad00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::sendBroadcastingState</definition>
        <argsstring>(bool)</argsstring>
        <name>sendBroadcastingState</name>
        <qualifiedname>KilobotExperiment::sendBroadcastingState</qualifiedname>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="34" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a8b3027234b7a6504edd2cff6d5deb796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::drawCircle</definition>
        <argsstring>(QPointF pos, float r, QColor col, int thickness, std::string text, bool transparent=false)</argsstring>
        <name>drawCircle</name>
        <qualifiedname>KilobotExperiment::drawCircle</qualifiedname>
        <param>
          <type>QPointF</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>QColor</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thickness</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transparent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="37" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1aff0ed78458d646c5bddb37a9628c8157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::drawLine</definition>
        <argsstring>(std::vector&lt; cv::Point &gt; pos, QColor col, int thickness, std::string text, bool transparent)</argsstring>
        <name>drawLine</name>
        <qualifiedname>KilobotExperiment::drawLine</qualifiedname>
        <param>
          <type>std::vector&lt; cv::Point &gt;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>QColor</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thickness</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transparent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="38" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a217b91dfb778a50d9a1f52c1ffa6ae4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::clearDrawings</definition>
        <argsstring>()</argsstring>
        <name>clearDrawings</name>
        <qualifiedname>KilobotExperiment::clearDrawings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1ac66762ad0f6112d60fdc4dbebfaa0e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::drawCircleOnRecordedImage</definition>
        <argsstring>(QPointF pos, float r, QColor col, int thickness, std::string text)</argsstring>
        <name>drawCircleOnRecordedImage</name>
        <qualifiedname>KilobotExperiment::drawCircleOnRecordedImage</qualifiedname>
        <param>
          <type>QPointF</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>QColor</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thickness</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="40" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_kilobot_experiment_1a39786f332b978aff9a04d56808af2eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::clearDrawingsOnRecordedImage</definition>
        <argsstring>()</argsstring>
        <name>clearDrawingsOnRecordedImage</name>
        <qualifiedname>KilobotExperiment::clearDrawingsOnRecordedImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="41" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_kilobot_experiment_1a44b426a454d32fc7ea2c9b952e88e14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KilobotExperiment::initialise</definition>
        <argsstring>(bool)=0</argsstring>
        <name>initialise</name>
        <qualifiedname>KilobotExperiment::initialise</qualifiedname>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="45" column="18"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1a03bdc4030e09fd0fd89fa46bd8b6498a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void KilobotExperiment::stopExperiment</definition>
        <argsstring>()</argsstring>
        <name>stopExperiment</name>
        <qualifiedname>KilobotExperiment::stopExperiment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="46" column="18" bodyfile="Kilobot/kilobotexperiment.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1aa6fbb3f8fe56eaac268264d040fe8d27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void KilobotExperiment::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <qualifiedname>KilobotExperiment::run</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="47" column="18" bodyfile="Kilobot/kilobotexperiment.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1afa9db851b14b2363c1afc7075117161a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::setRuntimeIdentificationLock</definition>
        <argsstring>(bool lock)</argsstring>
        <name>setRuntimeIdentificationLock</name>
        <qualifiedname>KilobotExperiment::setRuntimeIdentificationLock</qualifiedname>
        <param>
          <type>bool</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="48" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1aa8f0b4888e5e4ee50a75ca68e82d6786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::GetMsgsQueueState</definition>
        <argsstring>(bool state)</argsstring>
        <name>GetMsgsQueueState</name>
        <qualifiedname>KilobotExperiment::GetMsgsQueueState</qualifiedname>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="49" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1a657bacdae085e0bfd79ae28ec4e979b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::updateStateRequiredCode</definition>
        <argsstring>(Kilobot *kilobot, Kilobot kilobotCopy)</argsstring>
        <name>updateStateRequiredCode</name>
        <qualifiedname>KilobotExperiment::updateStateRequiredCode</qualifiedname>
        <param>
          <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref> *</type>
          <declname>kilobot</declname>
        </param>
        <param>
          <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref></type>
          <declname>kilobotCopy</declname>
        </param>
        <briefdescription>
<para>updateStateRequiredCode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kilobot</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kilobotCopy</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
Slot that makes sure that some code is run BEFORE the derived function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="58" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1a127225308081a41f51f7124c0f71f965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::setupInitialStateRequiredCode</definition>
        <argsstring>(Kilobot *kilobot, Kilobot kilobotCopy)</argsstring>
        <name>setupInitialStateRequiredCode</name>
        <qualifiedname>KilobotExperiment::setupInitialStateRequiredCode</qualifiedname>
        <param>
          <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref> *</type>
          <declname>kilobot</declname>
        </param>
        <param>
          <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref></type>
          <declname>kilobotCopy</declname>
        </param>
        <briefdescription>
<para>setupInitialStateRequiredCode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kilobot</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kilobotCopy</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
Slot that makes sure that some code is run BEFORE the derived function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="73" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="slot" id="class_kilobot_experiment_1acd1a2e959ff20963d084af066e7b9c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::signalKilobotExpt</definition>
        <argsstring>(kilobot_message msg)</argsstring>
        <name>signalKilobotExpt</name>
        <qualifiedname>KilobotExperiment::signalKilobotExpt</qualifiedname>
        <param>
          <type><ref refid="structkilobot__message" kindref="compound">kilobot_message</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="84" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="84" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_kilobot_experiment_1a08d02eb2f1364c72418f563f920f053e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KilobotExperiment::setCurrentKilobotEnvironment</definition>
        <argsstring>(KilobotEnvironment *environment)</argsstring>
        <name>setCurrentKilobotEnvironment</name>
        <qualifiedname>KilobotExperiment::setCurrentKilobotEnvironment</qualifiedname>
        <param>
          <type><ref refid="class_kilobot_environment" kindref="compound">KilobotEnvironment</ref> *</type>
          <declname>environment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="94" column="10" bodyfile="Kilobot/kilobotexperiment.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_kilobot_experiment_1a6fa9408634cf63adffeecd54e08fe80c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void KilobotExperiment::updateKilobotState</definition>
        <argsstring>(Kilobot)</argsstring>
        <name>updateKilobotState</name>
        <qualifiedname>KilobotExperiment::updateKilobotState</qualifiedname>
        <param>
          <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="101" column="18" bodyfile="Kilobot/kilobotexperiment.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_kilobot_experiment_1a1c12923e0554cb2c0b2736522b833b3b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void KilobotExperiment::setupInitialKilobotState</definition>
        <argsstring>(Kilobot)</argsstring>
        <name>setupInitialKilobotState</name>
        <qualifiedname>KilobotExperiment::setupInitialKilobotState</qualifiedname>
        <param>
          <type><ref refid="class_kilobot" kindref="compound">Kilobot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kilobot/kilobotexperiment.h" line="102" column="18" bodyfile="Kilobot/kilobotexperiment.h" bodystart="102" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KilobotExperiment</label>
        <link refid="class_kilobot_experiment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KilobotExperiment</label>
        <link refid="class_kilobot_experiment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="Kilobot/kilobotexperiment.h" line="12" column="1" bodyfile="Kilobot/kilobotexperiment.h" bodystart="13" bodyend="108"/>
    <listofallmembers>
      <member refid="class_kilobot_experiment_1a194f42044aba491b64dc9ee9f459c814" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>broadcastMessage</name></member>
      <member refid="class_kilobot_experiment_1a217b91dfb778a50d9a1f52c1ffa6ae4a" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>clearDrawings</name></member>
      <member refid="class_kilobot_experiment_1a39786f332b978aff9a04d56808af2eb5" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>clearDrawingsOnRecordedImage</name></member>
      <member refid="class_kilobot_experiment_1a5aed39899d0b5279631390bf9e04578d" prot="public" virt="virtual"><scope>KilobotExperiment</scope><name>createGUI</name></member>
      <member refid="class_kilobot_experiment_1aa324e0afabfdcfd555d9e0b3ba5442ec" prot="private" virt="non-virtual"><scope>KilobotExperiment</scope><name>currKilobot</name></member>
      <member refid="class_kilobot_experiment_1a8b3027234b7a6504edd2cff6d5deb796" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>drawCircle</name></member>
      <member refid="class_kilobot_experiment_1ac66762ad0f6112d60fdc4dbebfaa0e44" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>drawCircleOnRecordedImage</name></member>
      <member refid="class_kilobot_experiment_1aff0ed78458d646c5bddb37a9628c8157" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>drawLine</name></member>
      <member refid="class_kilobot_experiment_1ac4a56cc7730910837a26696cb87fdd66" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>experimentComplete</name></member>
      <member refid="class_kilobot_experiment_1a9af0858fe48c5570c79768b65ca912f6" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>getInitialKilobotStates</name></member>
      <member refid="class_kilobot_experiment_1aa8f0b4888e5e4ee50a75ca68e82d6786" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>GetMsgsQueueState</name></member>
      <member refid="class_kilobot_experiment_1a44b426a454d32fc7ea2c9b952e88e14a" prot="public" virt="pure-virtual"><scope>KilobotExperiment</scope><name>initialise</name></member>
      <member refid="class_kilobot_experiment_1a6f01bc03edf71f07bd121ed5717fc513" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>KilobotExperiment</name></member>
      <member refid="class_kilobot_experiment_1aa6fbb3f8fe56eaac268264d040fe8d27" prot="public" virt="virtual"><scope>KilobotExperiment</scope><name>run</name></member>
      <member refid="class_kilobot_experiment_1aa5bb35c7c12e4863be4794a90fc54026" prot="protected" virt="non-virtual"><scope>KilobotExperiment</scope><name>runtimeIdentificationLock</name></member>
      <member refid="class_kilobot_experiment_1a1313e1527fc2b99e1a01a28e87df276a" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>saveImage</name></member>
      <member refid="class_kilobot_experiment_1a1c1f32950e244c1c87f25d0b0006df30" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>saveVideoFrames</name></member>
      <member refid="class_kilobot_experiment_1aa2c5182f1fdfb604a469c23ab610ad00" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>sendBroadcastingState</name></member>
      <member refid="class_kilobot_experiment_1a74ad953b3997811b57d9e45f79f1c93f" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>serviceInterval</name></member>
      <member refid="class_kilobot_experiment_1a08d02eb2f1364c72418f563f920f053e" prot="protected" virt="non-virtual"><scope>KilobotExperiment</scope><name>setCurrentKilobotEnvironment</name></member>
      <member refid="class_kilobot_experiment_1afa9db851b14b2363c1afc7075117161a" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>setRuntimeIdentificationLock</name></member>
      <member refid="class_kilobot_experiment_1a79c769a8ab1653d762b5cd0ff739e2be" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>setTrackingType</name></member>
      <member refid="class_kilobot_experiment_1a1c12923e0554cb2c0b2736522b833b3b" prot="protected" virt="virtual"><scope>KilobotExperiment</scope><name>setupInitialKilobotState</name></member>
      <member refid="class_kilobot_experiment_1a127225308081a41f51f7124c0f71f965" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>setupInitialStateRequiredCode</name></member>
      <member refid="class_kilobot_experiment_1a3e66bf1b4887400ebe9063c762d2e3f0" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>signalKilobot</name></member>
      <member refid="class_kilobot_experiment_1acd1a2e959ff20963d084af066e7b9c7f" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>signalKilobotExpt</name></member>
      <member refid="class_kilobot_experiment_1a03bdc4030e09fd0fd89fa46bd8b6498a" prot="public" virt="virtual"><scope>KilobotExperiment</scope><name>stopExperiment</name></member>
      <member refid="class_kilobot_experiment_1ac972a3ba2c2a7943f8e0096526985329" prot="protected" virt="non-virtual"><scope>KilobotExperiment</scope><name>ThereIsMsgsToSend</name></member>
      <member refid="class_kilobot_experiment_1abea4a83a161e402ccdbca8645b12351f" prot="protected" virt="non-virtual"><scope>KilobotExperiment</scope><name>time</name></member>
      <member refid="class_kilobot_experiment_1a6fa9408634cf63adffeecd54e08fe80c" prot="protected" virt="virtual"><scope>KilobotExperiment</scope><name>updateKilobotState</name></member>
      <member refid="class_kilobot_experiment_1a52d4d4c639ff26a90b0f9fd3fda59aa6" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>updateKilobotStates</name></member>
      <member refid="class_kilobot_experiment_1a657bacdae085e0bfd79ae28ec4e979b2" prot="public" virt="non-virtual"><scope>KilobotExperiment</scope><name>updateStateRequiredCode</name></member>
      <member refid="class_kilobot_experiment_1a7c812fa4a0ee309919628d990d80d76b" prot="public" virt="virtual"><scope>KilobotExperiment</scope><name>~KilobotExperiment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
