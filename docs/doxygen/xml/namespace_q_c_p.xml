<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="namespace_q_c_p" kind="namespace" language="C++">
    <compoundname>QCP</compoundname>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_q_c_p_1a715d46153da230990aa887d0f0602452" prot="public" static="no" strong="no">
        <type></type>
        <name>ResolutionUnit</name>
        <qualifiedname>QCP::ResolutionUnit</qualifiedname>
        <enumvalue id="namespace_q_c_p_1a715d46153da230990aa887d0f0602452a707d005dea5c4ab694e4270d9c6094e8" prot="public">
          <name>ruDotsPerMeter</name>
          <briefdescription>
<para>Resolution is given in dots per meter (dpm) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a715d46153da230990aa887d0f0602452a4224e01f49b331489ad8cb12b619b229" prot="public">
          <name>ruDotsPerCentimeter</name>
          <briefdescription>
<para>Resolution is given in dots per centimeter (dpcm) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a715d46153da230990aa887d0f0602452affb887d8efe79c39a1aca2acd7002afc" prot="public">
          <name>ruDotsPerInch</name>
          <briefdescription>
<para>Resolution is given in dots per inch (DPI/PPI) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the different units in which the image resolution can be specified in the export functions.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1ac92cc9256d12f354b40a4be4600b5fb9" kindref="member">QCustomPlot::savePng</ref>, <ref refid="class_q_custom_plot_1a76f0d278e630a711fa6f48048cfd83e4" kindref="member">QCustomPlot::saveJpg</ref>, <ref refid="class_q_custom_plot_1ae3a86ed0795670e50afa21759d4fa13d" kindref="member">QCustomPlot::saveBmp</ref>, <ref refid="class_q_custom_plot_1ad7723ce2edfa270632ef42b03a444352" kindref="member">QCustomPlot::saveRastered</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="186" column="1" bodyfile="qcustomplot.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2f" prot="public" static="no" strong="no">
        <type></type>
        <name>ExportPen</name>
        <qualifiedname>QCP::ExportPen</qualifiedname>
        <enumvalue id="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2faae8fcfaafee234ce18558afef83f6a78" prot="public">
          <name>epNoCosmetic</name>
          <briefdescription>
<para>Cosmetic pens are converted to pens with pixel width 1 when exporting. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a17844f19e1019693a953e1eb93536d2fa50d3657dba3fb90560b93a823cb0a6e8" prot="public">
          <name>epAllowCosmetic</name>
          <briefdescription>
<para>Cosmetic pens are exported normally (e.g. in PDF exports, cosmetic pens always appear as 1 pixel on screen, independent of viewer zoom level) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines how cosmetic pens (pens with numerical width 0) are handled during export.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1ad5acd34f6b39c3516887d7e54fec2412" kindref="member">QCustomPlot::savePdf</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="196" column="1" bodyfile="qcustomplot.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9" prot="public" static="no" strong="no">
        <type></type>
        <name>SignDomain</name>
        <qualifiedname>QCP::SignDomain</qualifiedname>
        <enumvalue id="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a2d18af0bc58f6528d1e82ce699fe4829" prot="public">
          <name>sdNegative</name>
          <briefdescription>
<para>The negative sign domain, i.e. numbers smaller than zero. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9aa38352ef02d51ddfa4399d9551566e24" prot="public">
          <name>sdBoth</name>
          <briefdescription>
<para>Both sign domains, including zero, i.e. all numbers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1afd50e7cf431af385614987d8553ff8a9a584784b75fb816abcc627cf743bb699f" prot="public">
          <name>sdPositive</name>
          <briefdescription>
<para>The positive sign domain, i.e. numbers greater than zero. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents negative and positive sign domain, e.g. for passing to <ref refid="class_q_c_p_abstract_plottable_1a56b4d9000f4de0de86c566c84eb05a21" kindref="member">QCPAbstractPlottable::getKeyRange</ref> and <ref refid="class_q_c_p_abstract_plottable_1aa81c95aec08d86cdd5407e48b83ab186" kindref="member">QCPAbstractPlottable::getValueRange</ref>.</para>
<para>This is primarily needed when working with logarithmic axis scales, since only one of the sign domains can be visible at a time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="207" column="1" bodyfile="qcustomplot.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" prot="public" static="no" strong="no">
        <type></type>
        <name>MarginSide</name>
        <qualifiedname>QCP::MarginSide</qualifiedname>
        <enumvalue id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" prot="public">
          <name>msLeft</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
<para><computeroutput>0x01</computeroutput> left margin </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" prot="public">
          <name>msRight</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
<para><computeroutput>0x02</computeroutput> right margin </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" prot="public">
          <name>msTop</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
<para><computeroutput>0x04</computeroutput> top margin </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" prot="public">
          <name>msBottom</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
<para><computeroutput>0x08</computeroutput> bottom margin </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" prot="public">
          <name>msAll</name>
          <initializer>= 0xFF</initializer>
          <briefdescription>
<para><computeroutput>0xFF</computeroutput> all margins </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a80aa4149f16dabd538f8b2e3d42c42d5" prot="public">
          <name>msNone</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
<para><computeroutput>0x00</computeroutput> no margin </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the sides of a rectangular entity to which margins can be applied.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">QCPLayoutElement::setAutoMargins</ref>, <ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">QCPAxisRect::setAutoMargins</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="217" column="1" bodyfile="qcustomplot.h" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" prot="public" static="no" strong="no">
        <type></type>
        <name>AntialiasedElement</name>
        <qualifiedname>QCP::AntialiasedElement</qualifiedname>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caefa92e89cd37f8a081fd2075aa1af73f" prot="public">
          <name>aeAxes</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
<para><computeroutput>0x0001</computeroutput> Axis base line and tick marks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4fbb37118d62288af0ca601ff2b07a2f" prot="public">
          <name>aeGrid</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
<para><computeroutput>0x0002</computeroutput> Grid lines </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caaedf83369188a15a69f92bb1d85ca97b" prot="public">
          <name>aeSubGrid</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
<para><computeroutput>0x0004</computeroutput> Sub grid lines </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca9e0127a6361b5d0596b031a482c5cf97" prot="public">
          <name>aeLegend</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
<para><computeroutput>0x0008</computeroutput> Legend box </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca1aca7a50c1b95403958733a4acafe773" prot="public">
          <name>aeLegendItems</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
<para><computeroutput>0x0010</computeroutput> Legend items </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4145e4251b0cf2dbedabeea0a38f84f6" prot="public">
          <name>aePlottables</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
<para><computeroutput>0x0020</computeroutput> Main lines of plottables </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caf7712a85d6b0c75b24301d2fe9484db3" prot="public">
          <name>aeItems</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
<para><computeroutput>0x0040</computeroutput> Main lines of items </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0cae45ed8cd167bffe27d7f40da4bc17e9c" prot="public">
          <name>aeScatters</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
<para><computeroutput>0x0080</computeroutput> Scatter symbols of plottables (excluding scatter symbols of type ssPixmap) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca788810f0aa930137de6ad6cc6d83d354" prot="public">
          <name>aeFills</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
<para><computeroutput>0x0100</computeroutput> Borders of fills (e.g. under or between graphs) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca261f8ea78cf3c9561726223ffa33dc12" prot="public">
          <name>aeZeroLine</name>
          <initializer>= 0x0200</initializer>
          <briefdescription>
<para><computeroutput>0x0200</computeroutput> Zero-lines, see <ref refid="class_q_c_p_grid_1a209f40fdb252397b418b82d3494d8ea0" kindref="member">QCPGrid::setZeroLinePen</ref> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca51dfdad36b2907277ae1221b09936441" prot="public">
          <name>aeOther</name>
          <initializer>= 0x8000</initializer>
          <briefdescription>
<para><computeroutput>0x8000</computeroutput> Other elements that don&apos;t fit into any of the existing categories </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa897c232a0ffc8368e7c100ffc59ef31" prot="public">
          <name>aeAll</name>
          <initializer>= 0xFFFF</initializer>
          <briefdescription>
<para><computeroutput>0xFFFF</computeroutput> All elements </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa9e90d81896358757d94275aeaa58f6a" prot="public">
          <name>aeNone</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
<para><computeroutput>0x0000</computeroutput> No elements </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines what objects of a plot can be forcibly drawn antialiased/not antialiased. If an object is neither forcibly drawn antialiased nor forcibly drawn not antialiased, it is up to the respective element how it is drawn. Typically it provides a <emphasis>setAntialiased</emphasis> function for this.</para>
<para><computeroutput>AntialiasedElements</computeroutput> is a flag of or-combined elements of this enum type.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1af6f91e5eab1be85f67c556e98c3745e8" kindref="member">QCustomPlot::setAntialiasedElements</ref>, <ref refid="class_q_custom_plot_1ae10d685b5eabea2999fb8775ca173c24" kindref="member">QCustomPlot::setNotAntialiasedElements</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="235" column="1" bodyfile="qcustomplot.h" bodystart="235" bodyend="248"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" prot="public" static="no" strong="no">
        <type></type>
        <name>PlottingHint</name>
        <qualifiedname>QCP::PlottingHint</qualifiedname>
        <enumvalue id="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4ab7283c5bfc1ba9e597015389880bda42" prot="public">
          <name>phNone</name>
          <initializer>= 0x000</initializer>
          <briefdescription>
<para><computeroutput>0x000</computeroutput> No hints are set </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" prot="public">
          <name>phFastPolylines</name>
          <initializer>= 0x001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>0x001</computeroutput> Graph/Curve lines are drawn with a faster method. This reduces the quality especially of the line segment joins, thus is most effective for pen sizes larger than 1. It is only used for solid line pens. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a30840fba10eebfa519a92cf5c3d32870" prot="public">
          <name>phImmediateRefresh</name>
          <initializer>= 0x002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>0x002</computeroutput> causes an immediate repaint() instead of a soft update() when <ref refid="class_q_custom_plot_1aa4bfe7d70dbe67e81d877819b75ab9af" kindref="member">QCustomPlot::replot()</ref> is called with parameter <ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a49666a5854a68dbcca8b277b03331260" kindref="member">QCustomPlot::rpRefreshHint</ref>. This is set by default to prevent the plot from freezing on fast consecutive replots (e.g. user drags ranges with mouse). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a8e9cfe5ee0c5cd36dd7accf9739aff65" prot="public">
          <name>phCacheLabels</name>
          <initializer>= 0x004</initializer>
          <briefdescription>
<para><computeroutput>0x004</computeroutput> axis (tick) labels will be cached as pixmaps, increasing replot performance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines plotting hints that control various aspects of the quality and speed of plotting.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1a94a33cbdadbbac5934843508bcfc210d" kindref="member">QCustomPlot::setPlottingHints</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="256" column="1" bodyfile="qcustomplot.h" bodystart="256" bodyend="262"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" prot="public" static="no" strong="no">
        <type></type>
        <name>Interaction</name>
        <qualifiedname>QCP::Interaction</qualifiedname>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a9acac96048a12b0d2b5396c9b4df768b" prot="public">
          <name>iNone</name>
          <initializer>= 0x000</initializer>
          <briefdescription>
<para><computeroutput>0x000</computeroutput> None of the interactions are possible </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a2c4432b9aceafb94000be8d1b589ef18" prot="public">
          <name>iRangeDrag</name>
          <initializer>= 0x001</initializer>
          <briefdescription>
<para><computeroutput>0x001</computeroutput> Axis ranges are draggable (see <ref refid="class_q_c_p_axis_rect_1ae6aef2f7211ba6097c925dcd26008418" kindref="member">QCPAxisRect::setRangeDrag</ref>, <ref refid="class_q_c_p_axis_rect_1a648cce336bd99daac4a5ca3e5743775d" kindref="member">QCPAxisRect::setRangeDragAxes</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037abee1e94353525a636aeaf0ba32b72e14" prot="public">
          <name>iRangeZoom</name>
          <initializer>= 0x002</initializer>
          <briefdescription>
<para><computeroutput>0x002</computeroutput> Axis ranges are zoomable with the mouse wheel (see <ref refid="class_q_c_p_axis_rect_1a7960a9d222f1c31d558b064b60f86a31" kindref="member">QCPAxisRect::setRangeZoom</ref>, <ref refid="class_q_c_p_axis_rect_1a9442cca2aa358405f39a64d51eca13d2" kindref="member">QCPAxisRect::setRangeZoomAxes</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aef673112c5067c3cf4cfddb62da7265d" prot="public">
          <name>iMultiSelect</name>
          <initializer>= 0x004</initializer>
          <briefdescription>
<para><computeroutput>0x004</computeroutput> The user can select multiple objects by holding the modifier set by <ref refid="class_q_custom_plot_1a8fc96e3b5138a06759a2a90c166df516" kindref="member">QCustomPlot::setMultiSelectModifier</ref> while clicking </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a67148c8227b4155eca49135fc274c7ec" prot="public">
          <name>iSelectPlottables</name>
          <initializer>= 0x008</initializer>
          <briefdescription>
<para><computeroutput>0x008</computeroutput> Plottables are selectable (e.g. graphs, curves, bars,... see <ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ad6644ac55bef621645326e9dd7469caa" prot="public">
          <name>iSelectAxes</name>
          <initializer>= 0x010</initializer>
          <briefdescription>
<para><computeroutput>0x010</computeroutput> Axes are selectable (or parts of them, see <ref refid="class_q_c_p_axis_1a513f9b9e326c505d9bec54880031b085" kindref="member">QCPAxis::setSelectableParts</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a269c9af298e257d1108edec0432b5513" prot="public">
          <name>iSelectLegend</name>
          <initializer>= 0x020</initializer>
          <briefdescription>
<para><computeroutput>0x020</computeroutput> Legends are selectable (or their child items, see <ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">QCPLegend::setSelectableParts</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aea2f7c105d674e76d9b187b02ef29260" prot="public">
          <name>iSelectItems</name>
          <initializer>= 0x040</initializer>
          <briefdescription>
<para><computeroutput>0x040</computeroutput> Items are selectable (Rectangles, Arrows, Textitems, etc. see <ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037af67a50bc26147a13b551b3a625374949" prot="public">
          <name>iSelectOther</name>
          <initializer>= 0x080</initializer>
          <briefdescription>
<para><computeroutput>0x080</computeroutput> All other objects are selectable (e.g. your own derived layerables, other layout elements,...) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ac8eec3d1e6c3eadf6af60968906db8db" prot="public">
          <name>iSelectPlottablesBeyondAxisRect</name>
          <initializer>= 0x100</initializer>
          <briefdescription>
<para><computeroutput>0x100</computeroutput> When performing plottable selection/hit tests, this flag extends the sensitive area beyond the axis rect </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the mouse interactions possible with <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>.</para>
<para><computeroutput>Interactions</computeroutput> is a flag of or-combined elements of this enum type.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="272" column="1" bodyfile="qcustomplot.h" bodystart="272" bodyend="282"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacf" prot="public" static="no" strong="no">
        <type></type>
        <name>SelectionRectMode</name>
        <qualifiedname>QCP::SelectionRectMode</qualifiedname>
        <enumvalue id="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa9032f170490d67240a6c68c2638ffab1" prot="public">
          <name>srmNone</name>
          <briefdescription>
<para>The selection rect is disabled, and all mouse events are forwarded to the underlying objects, e.g. for axis range dragging. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa739c260bf4d9a15f73423c91158b9428" prot="public">
          <name>srmZoom</name>
          <briefdescription>
<para>When dragging the mouse, a selection rect becomes active. Upon releasing, the axes that are currently set as range zoom axes (<ref refid="class_q_c_p_axis_rect_1a9442cca2aa358405f39a64d51eca13d2" kindref="member">QCPAxisRect::setRangeZoomAxes</ref>) will have their ranges zoomed accordingly. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa62c286e8da283a0cbb88ecac2f3f7506" prot="public">
          <name>srmSelect</name>
          <briefdescription>
<para>When dragging the mouse, a selection rect becomes active. Upon releasing, plottable data points that were within the selection rect are selected, if the plottable&apos;s selectability setting permits. (See data selection mechanism for details.) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac9aa4d6d81ac76b094f9af9ad2d3aacfa15e7a00c8e7e0673c7b31d75266888d4" prot="public">
          <name>srmCustom</name>
          <briefdescription>
<para>When dragging the mouse, a selection rect becomes active. It is the programmer&apos;s responsibility to connect according slots to the selection rect&apos;s signals (e.g. <ref refid="class_q_c_p_selection_rect_1a15a43542e1f7b953a44c260b419e6d2c" kindref="member">QCPSelectionRect::accepted</ref>) in order to process the user interaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the behaviour of the selection rect.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1a810ef958ebe84db661c7288b526c0deb" kindref="member">QCustomPlot::setSelectionRectMode</ref>, <ref refid="class_q_custom_plot_1ad7df2bcbba307e644db383b449e31efd" kindref="member">QCustomPlot::selectionRect</ref>, <ref refid="class_q_c_p_selection_rect" kindref="compound">QCPSelectionRect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="290" column="1" bodyfile="qcustomplot.h" bodystart="290" bodyend="294"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038" prot="public" static="no" strong="no">
        <type></type>
        <name>SelectionType</name>
        <qualifiedname>QCP::SelectionType</qualifiedname>
        <enumvalue id="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa64628e338a2dd1e6f0dc84dec0b63fe" prot="public">
          <name>stNone</name>
          <briefdescription>
<para>The plottable is not selectable. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aff7a688d4d520e8e7f01be098a034a2d" prot="public">
          <name>stWhole</name>
          <briefdescription>
<para>Selection behaves like <ref refid="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038a7cf82676966ebf79cc371f65278e0e16" kindref="member">stMultipleDataRanges</ref>, but if there are any data points selected, the entire plottable is drawn as selected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038ae5b11259c42962db355e7448f4a8633a" prot="public">
          <name>stSingleData</name>
          <briefdescription>
<para>One individual data point can be selected at a time. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038aa05d2cba99c724df004d9c48971e4371" prot="public">
          <name>stDataRange</name>
          <briefdescription>
<para>Multiple contiguous data points (a data range) can be selected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038a7cf82676966ebf79cc371f65278e0e16" prot="public">
          <name>stMultipleDataRanges</name>
          <briefdescription>
<para>Any combination of data points/ranges can be selected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the different ways a plottable can be selected. These images show the effect of the different selection types, when the indicated selection rect was dragged:</para>
<para><center> <table rows="1" cols="5"><row>
<entry thead="no"><para><image type="html" name="selectiontype-none.png">stNone</image>
</para>
</entry><entry thead="no"><para><image type="html" name="selectiontype-whole.png">stWhole</image>
</para>
</entry><entry thead="no"><para><image type="html" name="selectiontype-singledata.png">stSingleData</image>
</para>
</entry><entry thead="no"><para><image type="html" name="selectiontype-datarange.png">stDataRange</image>
</para>
</entry><entry thead="no"><para><image type="html" name="selectiontype-multipledataranges.png">stMultipleDataRanges</image>
</para>
</entry></row>
</table>
</center></para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_plottable_1ac238d6e910f976f1f30d41c2bca44ac3" kindref="member">QCPAbstractPlottable::setSelectable</ref>, <ref refid="class_q_c_p_data_selection_1a17b84d852911531d229f4a76aa239a75" kindref="member">QCPDataSelection::enforceType</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="314" column="1" bodyfile="qcustomplot.h" bodystart="314" bodyend="319"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_q_c_p_1a07ffa1eb1537a3b1f218ff2a442b2017" prot="public" static="no" extern="yes" mutable="no">
        <type>const QMetaObject</type>
        <definition>const QMetaObject QCP::staticMetaObject</definition>
        <argsstring></argsstring>
        <name>staticMetaObject</name>
        <qualifiedname>QCP::staticMetaObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="382" column="26" declfile="qcustomplot.h" declline="382" declcolumn="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCP::isInvalidData</definition>
        <argsstring>(double value)</argsstring>
        <name>isInvalidData</name>
        <qualifiedname>QCP::isInvalidData</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="327" column="13" bodyfile="qcustomplot.h" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="namespace_q_c_p_1a728903e5c3dd17847bee280f4005496f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCP::isInvalidData</definition>
        <argsstring>(double value1, double value2)</argsstring>
        <name>isInvalidData</name>
        <qualifiedname>QCP::isInvalidData</qualifiedname>
        <param>
          <type>double</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="337" column="13" bodyfile="qcustomplot.h" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="namespace_q_c_p_1afbf6e3084c108f2bb4372107945ee82f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QCP::setMarginValue</definition>
        <argsstring>(QMargins &amp;margins, QCP::MarginSide side, int value)</argsstring>
        <name>setMarginValue</name>
        <qualifiedname>QCP::setMarginValue</qualifiedname>
        <param>
          <type>QMargins &amp;</type>
          <declname>margins</declname>
        </param>
        <param>
          <type><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="348" column="13" bodyfile="qcustomplot.h" bodystart="348" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QCP::getMarginValue</definition>
        <argsstring>(const QMargins &amp;margins, QCP::MarginSide side)</argsstring>
        <name>getMarginValue</name>
        <qualifiedname>QCP::getMarginValue</qualifiedname>
        <param>
          <type>const QMargins &amp;</type>
          <declname>margins</declname>
        </param>
        <param>
          <type><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref></type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="368" column="12" bodyfile="qcustomplot.h" bodystart="368" bodyend="379"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="namespace_q_c_p" kindref="compound">QCP</ref> Namespace contains general enums, QFlags and functions used throughout the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> library.</para>
<para>It provides QMetaObject-based reflection of its enums and flags via <emphasis>QCP::staticMetaObject</emphasis>. </para>
    </detaileddescription>
    <location file="qcustomplot.h" line="160" column="1"/>
  </compounddef>
</doxygen>
