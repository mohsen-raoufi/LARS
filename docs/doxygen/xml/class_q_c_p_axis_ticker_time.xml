<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_axis_ticker_time" kind="class" language="C++" prot="public">
    <compoundname>QCPAxisTickerTime</compoundname>
    <basecompoundref refid="class_q_c_p_axis_ticker" prot="public" virt="non-virtual">QCPAxisTicker</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" prot="public" static="no" strong="no">
        <type></type>
        <name>TimeUnit</name>
        <qualifiedname>QCPAxisTickerTime::TimeUnit</qualifiedname>
        <enumvalue id="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea809db637d2a7f601287c8790facc25cf" prot="public">
          <name>tuMilliseconds</name>
          <briefdescription>
<para>Milliseconds, one thousandth of a second (%z in <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea22b2c1842215272ae827eea2d1cc037d" prot="public">
          <name>tuSeconds</name>
          <briefdescription>
<para>Seconds (%s in <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea682de6640daef46cffd8a080348d7d00" prot="public">
          <name>tuMinutes</name>
          <briefdescription>
<para>Minutes (%m in <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea83a5713594424ba17f1f62f18f0e5935" prot="public">
          <name>tuHours</name>
          <briefdescription>
<para>Hours (%h in <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3eaf9729e64545307a80a0e3527d6da6556" prot="public">
          <name>tuDays</name>
          <briefdescription>
<para>Days (%d in <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the logical units in which fractions of time spans can be expressed.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_time_1adc13e54fc969be98a5c0e3fa0dbaa293" kindref="member">setFieldWidth</ref>, <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1820" column="3" bodyfile="qcustomplot.h" bodystart="1820" bodyend="1825"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_time_1a800af3fe0a7c1a8110c043b82169bc9d" prot="protected" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QCPAxisTickerTime::mTimeFormat</definition>
        <argsstring></argsstring>
        <name>mTimeFormat</name>
        <qualifiedname>QCPAxisTickerTime::mTimeFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1840" column="11" bodyfile="qcustomplot.h" bodystart="1840" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_time_1a58305b56f847bcab8b3c852a21bdb91a" prot="protected" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref>, int &gt;</type>
        <definition>QHash&lt;TimeUnit, int&gt; QCPAxisTickerTime::mFieldWidth</definition>
        <argsstring></argsstring>
        <name>mFieldWidth</name>
        <qualifiedname>QCPAxisTickerTime::mFieldWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1841" column="9" bodyfile="qcustomplot.h" bodystart="1841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_time_1a61033c493cec76a69628d1aaa5b07abf" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref></type>
        <definition>TimeUnit QCPAxisTickerTime::mSmallestUnit</definition>
        <argsstring></argsstring>
        <name>mSmallestUnit</name>
        <qualifiedname>QCPAxisTickerTime::mSmallestUnit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1844" column="12" bodyfile="qcustomplot.h" bodystart="1844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_time_1a349b2debe07adc591996aa73dec9a757" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref></type>
        <definition>TimeUnit QCPAxisTickerTime::mBiggestUnit</definition>
        <argsstring></argsstring>
        <name>mBiggestUnit</name>
        <qualifiedname>QCPAxisTickerTime::mBiggestUnit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1844" column="26" bodyfile="qcustomplot.h" bodystart="1844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_axis_ticker_time_1adfc8221afbccb99343aa61f75419908d" prot="protected" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref>, QString &gt;</type>
        <definition>QHash&lt;TimeUnit, QString&gt; QCPAxisTickerTime::mFormatPattern</definition>
        <argsstring></argsstring>
        <name>mFormatPattern</name>
        <qualifiedname>QCPAxisTickerTime::mFormatPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1845" column="9" bodyfile="qcustomplot.h" bodystart="1845" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a5145aac1d2117fdac411d9e8552cc41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPAxisTickerTime::QCPAxisTickerTime</definition>
        <argsstring>()</argsstring>
        <name>QCPAxisTickerTime</name>
        <qualifiedname>QCPAxisTickerTime::QCPAxisTickerTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the ticker and sets reasonable default values. Axis tickers are commonly created managed by a QSharedPointer, which then can be passed to <ref refid="class_q_c_p_axis_1a4ee03fcd2c74d05cd1a419b9af5cfbdc" kindref="member">QCPAxis::setTicker</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1828" column="3" bodyfile="qcustomplot.cpp" bodystart="6879" bodyend="6896"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a99ad61dc7434a7fed1850e96bf748834" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QCPAxisTickerTime::timeFormat</definition>
        <argsstring>() const</argsstring>
        <name>timeFormat</name>
        <qualifiedname>QCPAxisTickerTime::timeFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1831" column="11" bodyfile="qcustomplot.h" bodystart="1831" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a6b58a98e4d64c6764aa61a707e4a344d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QCPAxisTickerTime::fieldWidth</definition>
        <argsstring>(TimeUnit unit) const</argsstring>
        <name>fieldWidth</name>
        <qualifiedname>QCPAxisTickerTime::fieldWidth</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1832" column="7" bodyfile="qcustomplot.h" bodystart="1832" bodyend="1832"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerTime::setTimeFormat</definition>
        <argsstring>(const QString &amp;format)</argsstring>
        <name>setTimeFormat</name>
        <qualifiedname>QCPAxisTickerTime::setTimeFormat</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the format that will be used to display time in the tick labels.</para>
<para>The available patterns are:<itemizedlist>
<listitem><para>%z for milliseconds</para>
</listitem><listitem><para>%s for seconds</para>
</listitem><listitem><para>%m for minutes</para>
</listitem><listitem><para>%h for hours</para>
</listitem><listitem><para>%d for days</para>
</listitem></itemizedlist>
</para>
<para>The field width (zero padding) can be controlled for each unit with <ref refid="class_q_c_p_axis_ticker_time_1adc13e54fc969be98a5c0e3fa0dbaa293" kindref="member">setFieldWidth</ref>.</para>
<para>The largest unit that appears in <emphasis>format</emphasis> will carry all the remaining time of a certain tick coordinate, even if it overflows the natural limit of the unit. For example, if %m is the largest unit it might become larger than 59 in order to consume larger time values. If on the other hand %h is available, the minutes will wrap around to zero after 59 and the time will carry to the hour digit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1835" column="8" bodyfile="qcustomplot.cpp" bodystart="6916" bodyend="6938"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1adc13e54fc969be98a5c0e3fa0dbaa293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerTime::setFieldWidth</definition>
        <argsstring>(TimeUnit unit, int width)</argsstring>
        <name>setFieldWidth</name>
        <qualifiedname>QCPAxisTickerTime::setFieldWidth</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the field widh of the specified <emphasis>unit</emphasis> to be <emphasis>width</emphasis> digits, when displayed in the tick label. If the number for the specific unit is shorter than <emphasis>width</emphasis>, it will be padded with an according number of zeros to the left in order to reach the field width.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1836" column="8" bodyfile="qcustomplot.cpp" bodystart="6947" bodyend="6950"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a5615064642090fe193797caea8b98cb4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPAxisTickerTime::getTickStep</definition>
        <argsstring>(const QCPRange &amp;range) Q_DECL_OVERRIDE</argsstring>
        <name>getTickStep</name>
        <qualifiedname>QCPAxisTickerTime::getTickStep</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">getTickStep</reimplements>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1848" column="18" bodyfile="qcustomplot.cpp" bodystart="6961" bodyend="7004"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1acace84c46598176aa53837e147595471" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QCPAxisTickerTime::getSubTickCount</definition>
        <argsstring>(double tickStep) Q_DECL_OVERRIDE</argsstring>
        <name>getSubTickCount</name>
        <qualifiedname>QCPAxisTickerTime::getSubTickCount</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1a4ccc403ced7a1457ce6ba293509933c8">getSubTickCount</reimplements>
        <param>
          <type>double</type>
          <declname>tickStep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1849" column="15" bodyfile="qcustomplot.cpp" bodystart="7012" bodyend="7029"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a046eb771bdf2a959f570db542b3a0be6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QCPAxisTickerTime::getTickLabel</definition>
        <argsstring>(double tick, const QLocale &amp;locale, QChar formatChar, int precision) Q_DECL_OVERRIDE</argsstring>
        <name>getTickLabel</name>
        <qualifiedname>QCPAxisTickerTime::getTickLabel</qualifiedname>
        <reimplements refid="class_q_c_p_axis_ticker_1a8201eb4aa8be192bf786b126eb5ee089">getTickLabel</reimplements>
        <param>
          <type>double</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const QLocale &amp;</type>
          <declname>locale</declname>
        </param>
        <param>
          <type>QChar</type>
          <declname>formatChar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1850" column="19" bodyfile="qcustomplot.cpp" bodystart="7038" bodyend="7064"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_axis_ticker_time_1a03b6c980be36f2672e3fc31d109a28a0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAxisTickerTime::replaceUnit</definition>
        <argsstring>(QString &amp;text, TimeUnit unit, int value) const</argsstring>
        <name>replaceUnit</name>
        <qualifiedname>QCPAxisTickerTime::replaceUnit</qualifiedname>
        <param>
          <type>QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" kindref="member">TimeUnit</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1853" column="8" bodyfile="qcustomplot.cpp" bodystart="7071" bodyend="7078"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Specialized axis ticker for time spans in units of milliseconds to days. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="axisticker-time.png"></image>
</para>
<para>This <ref refid="class_q_c_p_axis_ticker" kindref="compound">QCPAxisTicker</ref> subclass generates ticks that corresponds to time intervals.</para>
<para>The format of the time display in the tick labels is controlled with <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref> and <ref refid="class_q_c_p_axis_ticker_time_1adc13e54fc969be98a5c0e3fa0dbaa293" kindref="member">setFieldWidth</ref>. The time coordinate is in the unit of seconds with respect to the time coordinate zero. Unlike with <ref refid="class_q_c_p_axis_ticker_date_time" kindref="compound">QCPAxisTickerDateTime</ref>, the ticks don&apos;t correspond to a specific calendar date and time.</para>
<para>The time can be displayed in milliseconds, seconds, minutes, hours and days. Depending on the largest available unit in the format specified with <ref refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" kindref="member">setTimeFormat</ref>, any time spans above will be carried in that largest unit. So for example if the format string is &quot;%m:%s&quot; and a tick at coordinate value 7815 (being 2 hours, 10 minutes and 15 seconds) is created, the resulting tick label will show &quot;130:15&quot; (130 minutes, 15 seconds). If the format string is &quot;%h:%m:%s&quot;, the hour unit will be used and the label will thus be &quot;02:10:15&quot;. Negative times with respect to the axis zero will carry a leading minus sign.</para>
<para>The ticker can be created and assigned to an axis like this: <programlisting filename="documentation/doc-image-generator/mainwindow.cpp"></programlisting></para>
<para>Here is an example of a time axis providing time information in days, hours and minutes. Due to the axis range spanning a few days and the wanted tick count (<ref refid="class_q_c_p_axis_ticker_1a47752abba8293e6dc18491501ae34008" kindref="member">setTickCount</ref>), the ticker decided to use tick steps of 12 hours:</para>
<para><image type="html" name="axisticker-time2.png"></image>
</para>
<para>The format string for this example is <programlisting filename="documentation/doc-image-generator/mainwindow.cpp"></programlisting></para>
<para><simplesect kind="note"><para>If you rather wish to display calendar dates and times, have a look at <ref refid="class_q_c_p_axis_ticker_date_time" kindref="compound">QCPAxisTickerDateTime</ref> instead. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QCPAxisTicker</label>
        <link refid="class_q_c_p_axis_ticker"/>
      </node>
      <node id="1">
        <label>QCPAxisTickerTime</label>
        <link refid="class_q_c_p_axis_ticker_time"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QCPAxisTicker</label>
        <link refid="class_q_c_p_axis_ticker"/>
      </node>
      <node id="1">
        <label>QCPAxisTickerTime</label>
        <link refid="class_q_c_p_axis_ticker_time"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="1811" column="1" bodyfile="qcustomplot.h" bodystart="1812" bodyend="1854"/>
    <listofallmembers>
      <member refid="class_q_c_p_axis_ticker_1ac7df6c72876b7abd67c932663a0b0f6a" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>cleanMantissa</name></member>
      <member refid="class_q_c_p_axis_ticker_1a804050e408f37a0b9770c6654ebe6aa7" prot="protected" virt="virtual"><scope>QCPAxisTickerTime</scope><name>createLabelVector</name></member>
      <member refid="class_q_c_p_axis_ticker_1a9a6435723fa0bd366d1ea4c2cff7c33f" prot="protected" virt="virtual"><scope>QCPAxisTickerTime</scope><name>createSubTickVector</name></member>
      <member refid="class_q_c_p_axis_ticker_1af4645a824c7bd2ca8fc7e86ebf9055bd" prot="protected" virt="virtual"><scope>QCPAxisTickerTime</scope><name>createTickVector</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a6b58a98e4d64c6764aa61a707e4a344d" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>fieldWidth</name></member>
      <member refid="class_q_c_p_axis_ticker_1aefbd11725678ca824add8cf926cbc856" prot="public" virt="virtual"><scope>QCPAxisTickerTime</scope><name>generate</name></member>
      <member refid="class_q_c_p_axis_ticker_1abe99aaaf6c512812869b0a19937c76ff" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>getMantissa</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1acace84c46598176aa53837e147595471" prot="protected" virt="virtual"><scope>QCPAxisTickerTime</scope><name>getSubTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a046eb771bdf2a959f570db542b3a0be6" prot="protected" virt="virtual"><scope>QCPAxisTickerTime</scope><name>getTickLabel</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5615064642090fe193797caea8b98cb4" prot="protected" virt="virtual"><scope>QCPAxisTickerTime</scope><name>getTickStep</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a349b2debe07adc591996aa73dec9a757" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mBiggestUnit</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a58305b56f847bcab8b3c852a21bdb91a" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mFieldWidth</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1adfc8221afbccb99343aa61f75419908d" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mFormatPattern</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a61033c493cec76a69628d1aaa5b07abf" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mSmallestUnit</name></member>
      <member refid="class_q_c_p_axis_ticker_1a14a35b47d1aad11b08d18ea0e25937b8" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1a560ef9347b1aa599a9bf0e2f29d3ec16" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mTickOrigin</name></member>
      <member refid="class_q_c_p_axis_ticker_1ac059d6d670b2f6132c593fb4de156701" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mTickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a800af3fe0a7c1a8110c043b82169bc9d" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>mTimeFormat</name></member>
      <member refid="class_q_c_p_axis_ticker_1a4ea0a7c4ca1c610f92b9bd5944ab4260" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>pickClosest</name></member>
      <member refid="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>QCPAxisTicker</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5145aac1d2117fdac411d9e8552cc41b" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>QCPAxisTickerTime</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a03b6c980be36f2672e3fc31d109a28a0" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>replaceUnit</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1adc13e54fc969be98a5c0e3fa0dbaa293" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>setFieldWidth</name></member>
      <member refid="class_q_c_p_axis_ticker_1a47752abba8293e6dc18491501ae34008" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>setTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab509c7e500293bf66a8409f0d7c23943" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>setTickOrigin</name></member>
      <member refid="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>setTickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a2f30b6e5125bce4256be9ce3177088ea" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>setTimeFormat</name></member>
      <member refid="class_q_c_p_axis_ticker_1aaf9edbe4169ce55e216fd067cc139452" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1ac0c6e9587c36fdeefb5518c00fe7ab15" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tickOrigin</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>TickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_1a58df76f2ec3eb48401bdd314b0e14ba1" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tickStepStrategy</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a99ad61dc7434a7fed1850e96bf748834" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>timeFormat</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3e" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>TimeUnit</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab28cc1ab549489be7975f5ce7e717916" prot="protected" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>trimTicks</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tssMeetTickCount</name></member>
      <member refid="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tssReadability</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3eaf9729e64545307a80a0e3527d6da6556" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tuDays</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea83a5713594424ba17f1f62f18f0e5935" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tuHours</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea809db637d2a7f601287c8790facc25cf" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tuMilliseconds</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea682de6640daef46cffd8a080348d7d00" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tuMinutes</name></member>
      <member refid="class_q_c_p_axis_ticker_time_1a5c48ded8c6d3a1aca9b68219469fea3ea22b2c1842215272ae827eea2d1cc037d" prot="public" virt="non-virtual"><scope>QCPAxisTickerTime</scope><name>tuSeconds</name></member>
      <member refid="class_q_c_p_axis_ticker_1a1119d6f09ad720f9c5dfdd2559047161" prot="public" virt="virtual"><scope>QCPAxisTickerTime</scope><name>~QCPAxisTicker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
