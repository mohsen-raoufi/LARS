<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_q_c_p_line_ending" kind="class" language="C++" prot="public">
    <compoundname>QCPLineEnding</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" prot="public" static="no" strong="no">
        <type></type>
        <name>EndingStyle</name>
        <qualifiedname>QCPLineEnding::EndingStyle</qualifiedname>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" prot="public">
          <name>esNone</name>
          <briefdescription>
<para>No ending decoration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" prot="public">
          <name>esFlatArrow</name>
          <briefdescription>
<para>A filled arrow head with a straight/flat back (a triangle) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" prot="public">
          <name>esSpikeArrow</name>
          <briefdescription>
<para>A filled arrow head with an indented back. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" prot="public">
          <name>esLineArrow</name>
          <briefdescription>
<para>A non-filled arrow head with open back. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" prot="public">
          <name>esDisc</name>
          <briefdescription>
<para>A filled circle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" prot="public">
          <name>esSquare</name>
          <briefdescription>
<para>A filled square. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" prot="public">
          <name>esDiamond</name>
          <briefdescription>
<para>A filled diamond (45 degrees rotated square) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" prot="public">
          <name>esBar</name>
          <briefdescription>
<para>A bar perpendicular to the line. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" prot="public">
          <name>esHalfBar</name>
          <briefdescription>
<para>A bar perpendicular to the line, pointing out to only one side (to which side can be changed with <ref refid="class_q_c_p_line_ending_1a580e4e2360b35ebb8d68f3494aa2335d" kindref="member">setInverted</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" prot="public">
          <name>esSkewedBar</name>
          <briefdescription>
<para>A bar that is skewed (skew controllable via <ref refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" kindref="member">setLength</ref>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the type of ending decoration for line-like items, e.g. an arrow.</para>
<para><image type="html" name="QCPLineEnding.png"></image>
</para>
<para>The width and length of these decorations can be controlled with the functions <ref refid="class_q_c_p_line_ending_1a26dc020ea985a72cc25881ce2115e34e" kindref="member">setWidth</ref> and <ref refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" kindref="member">setLength</ref>. Some decorations like <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" kindref="member">esDisc</ref>, <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" kindref="member">esSquare</ref>, <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" kindref="member">esDiamond</ref> and <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" kindref="member">esBar</ref> only support a width, the length property is ignored.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">QCPItemLine::setHead</ref>, <ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">QCPItemLine::setTail</ref>, <ref refid="class_q_c_p_item_curve_1a08a30d9cdd63995deea3d9e20430676f" kindref="member">QCPItemCurve::setHead</ref>, <ref refid="class_q_c_p_item_curve_1ac3488d8b1a6489c845dc5bff3ef71124" kindref="member">QCPItemCurve::setTail</ref>, <ref refid="class_q_c_p_axis_1a08af1c72db9ae4dc8cb8a973d44405ab" kindref="member">QCPAxis::setLowerEnding</ref>, <ref refid="class_q_c_p_axis_1a69119b892fc306f651763596685aa377" kindref="member">QCPAxis::setUpperEnding</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1508" column="3" bodyfile="qcustomplot.h" bodystart="1508" bodyend="1518"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">EndingStyle</ref></type>
        <definition>EndingStyle QCPLineEnding::mStyle</definition>
        <argsstring></argsstring>
        <name>mStyle</name>
        <qualifiedname>QCPLineEnding::mStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1544" column="15" bodyfile="qcustomplot.h" bodystart="1544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPLineEnding::mWidth</definition>
        <argsstring></argsstring>
        <name>mWidth</name>
        <qualifiedname>QCPLineEnding::mWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1545" column="10" bodyfile="qcustomplot.h" bodystart="1545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPLineEnding::mLength</definition>
        <argsstring></argsstring>
        <name>mLength</name>
        <qualifiedname>QCPLineEnding::mLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1545" column="17" bodyfile="qcustomplot.h" bodystart="1545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPLineEnding::mInverted</definition>
        <argsstring></argsstring>
        <name>mInverted</name>
        <qualifiedname>QCPLineEnding::mInverted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1546" column="8" bodyfile="qcustomplot.h" bodystart="1546" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_line_ending_1af2eaf8123b000d97fbd11929c669f61b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLineEnding::QCPLineEnding</definition>
        <argsstring>()</argsstring>
        <name>QCPLineEnding</name>
        <qualifiedname>QCPLineEnding::QCPLineEnding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> instance with default values (style <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">esNone</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1521" column="3" bodyfile="qcustomplot.cpp" bodystart="5193" bodyend="5199"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1abb2abc7542f0c7a3c081d878248896a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLineEnding::QCPLineEnding</definition>
        <argsstring>(EndingStyle style, double width=8, double length=10, bool inverted=false)</argsstring>
        <name>QCPLineEnding</name>
        <qualifiedname>QCPLineEnding::QCPLineEnding</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">EndingStyle</ref></type>
          <declname>style</declname>
        </param>
        <param>
          <type>double</type>
          <declname>width</declname>
          <defval>8</defval>
        </param>
        <param>
          <type>double</type>
          <declname>length</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>inverted</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> instance with the specified values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1522" column="3" bodyfile="qcustomplot.cpp" bodystart="5204" bodyend="5210"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a07e75aaac6c61322bf51af237c5778e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">EndingStyle</ref></type>
        <definition>EndingStyle QCPLineEnding::style</definition>
        <argsstring>() const</argsstring>
        <name>style</name>
        <qualifiedname>QCPLineEnding::style</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1525" column="15" bodyfile="qcustomplot.h" bodystart="1525" bodyend="1525"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1ae6f1fb83c210da6ace35d629993287f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPLineEnding::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <qualifiedname>QCPLineEnding::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1526" column="10" bodyfile="qcustomplot.h" bodystart="1526" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1aee9050a13fe115bd1b6794f9ad14cd72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPLineEnding::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <qualifiedname>QCPLineEnding::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1527" column="10" bodyfile="qcustomplot.h" bodystart="1527" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a15a68706d298a0c9f94556f6b4db15ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLineEnding::inverted</definition>
        <argsstring>() const</argsstring>
        <name>inverted</name>
        <qualifiedname>QCPLineEnding::inverted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1528" column="8" bodyfile="qcustomplot.h" bodystart="1528" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a56953b9cb8ed1bed0f025c3935f16910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLineEnding::setStyle</definition>
        <argsstring>(EndingStyle style)</argsstring>
        <name>setStyle</name>
        <qualifiedname>QCPLineEnding::setStyle</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">EndingStyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the style of the ending decoration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1531" column="8" bodyfile="qcustomplot.cpp" bodystart="5215" bodyend="5218"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a26dc020ea985a72cc25881ce2115e34e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLineEnding::setWidth</definition>
        <argsstring>(double width)</argsstring>
        <name>setWidth</name>
        <qualifiedname>QCPLineEnding::setWidth</qualifiedname>
        <param>
          <type>double</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the width of the ending decoration, if the style supports it. On arrows, for example, the width defines the size perpendicular to the arrow&apos;s pointing direction.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" kindref="member">setLength</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1532" column="8" bodyfile="qcustomplot.cpp" bodystart="5226" bodyend="5229"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLineEnding::setLength</definition>
        <argsstring>(double length)</argsstring>
        <name>setLength</name>
        <qualifiedname>QCPLineEnding::setLength</qualifiedname>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the length of the ending decoration, if the style supports it. On arrows, for example, the length defines the size in pointing direction.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_line_ending_1a26dc020ea985a72cc25881ce2115e34e" kindref="member">setWidth</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1533" column="8" bodyfile="qcustomplot.cpp" bodystart="5237" bodyend="5240"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a580e4e2360b35ebb8d68f3494aa2335d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLineEnding::setInverted</definition>
        <argsstring>(bool inverted)</argsstring>
        <name>setInverted</name>
        <qualifiedname>QCPLineEnding::setInverted</qualifiedname>
        <param>
          <type>bool</type>
          <declname>inverted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether the ending decoration shall be inverted. For example, an arrow decoration will point inward when <emphasis>inverted</emphasis> is set to true.</para>
<para>Note that also the <emphasis>width</emphasis> direction is inverted. For symmetrical ending styles like arrows or discs, this doesn&apos;t make a difference. However, asymmetric styles like <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">esHalfBar</ref> are affected by it, which can be used to control to which side the half bar points to. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1534" column="8" bodyfile="qcustomplot.cpp" bodystart="5250" bodyend="5253"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a14fe390ddd590864ac66a60ed5278df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPLineEnding::boundingDistance</definition>
        <argsstring>() const</argsstring>
        <name>boundingDistance</name>
        <qualifiedname>QCPLineEnding::boundingDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1537" column="10" bodyfile="qcustomplot.cpp" bodystart="5264" bodyend="5286"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1acacd24d386d459b282d3c57f16a5405d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPLineEnding::realLength</definition>
        <argsstring>() const</argsstring>
        <name>realLength</name>
        <qualifiedname>QCPLineEnding::realLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starting from the origin of this line ending (which is style specific), returns the length covered by the line ending symbol, in backward direction.</para>
<para>For example, the <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">esSpikeArrow</ref> has a shorter real length than a <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" kindref="member">esFlatArrow</ref>, even if both have the same <ref refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" kindref="member">setLength</ref> value, because the spike arrow has an inward curved back, which reduces the length along its center axis (the drawing origin for arrows is at the tip).</para>
<para>This function is used for precise, style specific placement of line endings, for example in QCPAxes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1538" column="10" bodyfile="qcustomplot.cpp" bodystart="5299" bodyend="5322"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1a4f45db54f2aba03acf055e29aec1e8e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLineEnding::draw</definition>
        <argsstring>(QCPPainter *painter, const QCPVector2D &amp;pos, const QCPVector2D &amp;dir) const</argsstring>
        <name>draw</name>
        <qualifiedname>QCPLineEnding::draw</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1539" column="8" bodyfile="qcustomplot.cpp" bodystart="5329" bodyend="5443"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_line_ending_1af7ac30a81ba85b9bded148c6ec387391" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLineEnding::draw</definition>
        <argsstring>(QCPPainter *painter, const QCPVector2D &amp;pos, double angle) const</argsstring>
        <name>draw</name>
        <qualifiedname>QCPLineEnding::draw</qualifiedname>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_vector2_d" kindref="compound">QCPVector2D</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="1540" column="8" bodyfile="qcustomplot.cpp" bodystart="5450" bodyend="5453"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Handles the different ending decorations for line-like items. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="QCPLineEnding.png">The various ending styles currently supported</image>
</para>
<para>For every ending a line-like item has, an instance of this class exists. For example, <ref refid="class_q_c_p_item_line" kindref="compound">QCPItemLine</ref> has two endings which can be set with <ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">QCPItemLine::setHead</ref> and <ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">QCPItemLine::setTail</ref>.</para>
<para>The styles themselves are defined via the enum <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref>. Most decorations can be modified regarding width and length, see <ref refid="class_q_c_p_line_ending_1a26dc020ea985a72cc25881ce2115e34e" kindref="member">setWidth</ref> and <ref refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" kindref="member">setLength</ref>. The direction of the ending decoration (e.g. direction an arrow is pointing) is controlled by the line-like item. For example, when both endings of a <ref refid="class_q_c_p_item_line" kindref="compound">QCPItemLine</ref> are set to be arrows, they will point to opposite directions, e.g. &quot;outward&quot;. This can be changed by <ref refid="class_q_c_p_line_ending_1a580e4e2360b35ebb8d68f3494aa2335d" kindref="member">setInverted</ref>, which would make the respective arrow point inward.</para>
<para>Note that due to the overloaded <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> constructor, you may directly specify a <ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref> where actually a <ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref> is expected, e.g. <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting> </para>
    </detaileddescription>
    <location file="qcustomplot.h" line="1493" column="1" bodyfile="qcustomplot.h" bodystart="1494" bodyend="1547"/>
    <listofallmembers>
      <member refid="class_q_c_p_line_ending_1a14fe390ddd590864ac66a60ed5278df5" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>boundingDistance</name></member>
      <member refid="class_q_c_p_line_ending_1a4f45db54f2aba03acf055e29aec1e8e7" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>draw</name></member>
      <member refid="class_q_c_p_line_ending_1af7ac30a81ba85b9bded148c6ec387391" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>draw</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>EndingStyle</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esBar</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esDiamond</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esDisc</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esFlatArrow</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esHalfBar</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esLineArrow</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esNone</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esSkewedBar</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esSpikeArrow</name></member>
      <member refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>esSquare</name></member>
      <member refid="class_q_c_p_line_ending_1a15a68706d298a0c9f94556f6b4db15ff" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>inverted</name></member>
      <member refid="class_q_c_p_line_ending_1aee9050a13fe115bd1b6794f9ad14cd72" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>length</name></member>
      <member refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" prot="protected" virt="non-virtual"><scope>QCPLineEnding</scope><name>mInverted</name></member>
      <member refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" prot="protected" virt="non-virtual"><scope>QCPLineEnding</scope><name>mLength</name></member>
      <member refid="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" prot="protected" virt="non-virtual"><scope>QCPLineEnding</scope><name>mStyle</name></member>
      <member refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" prot="protected" virt="non-virtual"><scope>QCPLineEnding</scope><name>mWidth</name></member>
      <member refid="class_q_c_p_line_ending_1af2eaf8123b000d97fbd11929c669f61b" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>QCPLineEnding</name></member>
      <member refid="class_q_c_p_line_ending_1abb2abc7542f0c7a3c081d878248896a4" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>QCPLineEnding</name></member>
      <member refid="class_q_c_p_line_ending_1acacd24d386d459b282d3c57f16a5405d" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>realLength</name></member>
      <member refid="class_q_c_p_line_ending_1a580e4e2360b35ebb8d68f3494aa2335d" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>setInverted</name></member>
      <member refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>setLength</name></member>
      <member refid="class_q_c_p_line_ending_1a56953b9cb8ed1bed0f025c3935f16910" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>setStyle</name></member>
      <member refid="class_q_c_p_line_ending_1a26dc020ea985a72cc25881ce2115e34e" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>setWidth</name></member>
      <member refid="class_q_c_p_line_ending_1a07e75aaac6c61322bf51af237c5778e3" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>style</name></member>
      <member refid="class_q_c_p_line_ending_1ae6f1fb83c210da6ace35d629993287f3" prot="public" virt="non-virtual"><scope>QCPLineEnding</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
