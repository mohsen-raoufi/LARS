<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="angle__deg_8h" kind="file" language="C++">
    <compoundname>angle_deg.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <includedby refid="angle__deg_8cpp" local="yes">ui/geom/angle_deg.cpp</includedby>
    <includedby refid="geom_8h" local="yes">ui/geom/geom.h</includedby>
    <includedby refid="matrix__2d_8h" local="no">ui/geom/matrix_2d.h</includedby>
    <includedby refid="geom_2vector__2d_8h" local="yes">ui/geom/vector_2d.h</includedby>
    <includedby refid="vector__2d_8h" local="no">ui/vector_2d.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>ui/geom/angle_deg.h</label>
        <link refid="angle__deg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>ui/geom/angle_deg.cpp</label>
        <link refid="angle__deg_8cpp"/>
      </node>
      <node id="1">
        <label>ui/geom/angle_deg.h</label>
        <link refid="angle__deg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ui/geom/circle_2d.cpp</label>
        <link refid="circle__2d_8cpp"/>
      </node>
      <node id="11">
        <label>ui/geom/circle_2d.h</label>
        <link refid="circle__2d_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ui/geom/composite_region_2d.cpp</label>
        <link refid="composite__region__2d_8cpp"/>
      </node>
      <node id="14">
        <label>ui/geom/convex_hull.h</label>
        <link refid="convex__hull_8h"/>
      </node>
      <node id="16">
        <label>ui/geom/delaunay_triangulation.cpp</label>
        <link refid="delaunay__triangulation_8cpp"/>
      </node>
      <node id="15">
        <label>ui/geom/delaunay_triangulation.h</label>
        <link refid="delaunay__triangulation_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ui/geom/geom.h</label>
        <link refid="geom_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ui/geom/line_2d.cpp</label>
        <link refid="line__2d_8cpp"/>
      </node>
      <node id="17">
        <label>ui/geom/line_2d.h</label>
        <link refid="line__2d_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ui/geom/matrix_2d.cpp</label>
        <link refid="matrix__2d_8cpp"/>
      </node>
      <node id="8">
        <label>ui/geom/matrix_2d.h</label>
        <link refid="matrix__2d_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ui/geom/polygon_2d.cpp</label>
        <link refid="polygon__2d_8cpp"/>
      </node>
      <node id="21">
        <label>ui/geom/ray_2d.cpp</label>
        <link refid="ray__2d_8cpp"/>
      </node>
      <node id="20">
        <label>ui/geom/ray_2d.h</label>
        <link refid="ray__2d_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ui/geom/rect_2d.cpp</label>
        <link refid="rect__2d_8cpp"/>
      </node>
      <node id="24">
        <label>ui/geom/rect_2d.h</label>
        <link refid="rect__2d_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ui/geom/sector_2d.cpp</label>
        <link refid="sector__2d_8cpp"/>
      </node>
      <node id="28">
        <label>ui/geom/sector_2d.h</label>
        <link refid="sector__2d_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ui/geom/segment_2d.cpp</label>
        <link refid="segment__2d_8cpp"/>
      </node>
      <node id="25">
        <label>ui/geom/segment_2d.h</label>
        <link refid="segment__2d_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ui/geom/triangle_2d.cpp</label>
        <link refid="triangle__2d_8cpp"/>
      </node>
      <node id="27">
        <label>ui/geom/triangle_2d.h</label>
        <link refid="triangle__2d_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ui/geom/triangulation.h</label>
        <link refid="triangulation_8h"/>
      </node>
      <node id="10">
        <label>ui/geom/vector_2d.h</label>
        <link refid="geom_2vector__2d_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ui/geom/voronoi_diagram.h</label>
        <link refid="voronoi__diagram_8h_source"/>
      </node>
      <node id="6">
        <label>ui/mobileobject.h</label>
        <link refid="mobileobject_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ui/position.h</label>
        <link refid="position_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ui/robot.h</label>
        <link refid="robot_8h_source"/>
      </node>
      <node id="31">
        <label>ui/vector_2d.h</label>
        <link refid="vector__2d_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrcsc_1_1_angle_deg" prot="public">rcsc::AngleDeg</innerclass>
    <innerclass refid="classrcsc_1_1_angle_deg_1_1_degree_cmp" prot="public">rcsc::AngleDeg::DegreeCmp</innerclass>
    <innerclass refid="classrcsc_1_1_angle_is_within" prot="public">rcsc::AngleIsWithin</innerclass>
    <innernamespace refid="namespacercsc">rcsc</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="angle__deg_8h_1a7465708eaca221e3074bf5cb74e4a30b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></type>
        <definition>const rcsc::AngleDeg operator+</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator add(T, T) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="600" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="600" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a86e3abaac7c3e0712b5ebbf293330d26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></type>
        <definition>const rcsc::AngleDeg operator+</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const double &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator add(T, U) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="616" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="616" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a514d18b92d60b26ba4edef6efc168f15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></type>
        <definition>const rcsc::AngleDeg operator+</definition>
        <argsstring>(const double &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const double &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator add(U, T) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="632" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="632" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a88471acd2a1a8a01b2dcb122d5677823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></type>
        <definition>const rcsc::AngleDeg operator-</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator sub(T, T) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="648" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="648" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1acef9ea3b2bae707930b15541ad6b26d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></type>
        <definition>const rcsc::AngleDeg operator-</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const double &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator sub(T, U) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="664" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="664" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a835522b3402ce8417cc0285c598d04c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></type>
        <definition>const rcsc::AngleDeg operator-</definition>
        <argsstring>(const double &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const double &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator sub(U, T) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="680" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="680" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>predicate operator != </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="698" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="698" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a96a5492c80b475408b837e6917d7bbf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const double &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>predicate operator != </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="713" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="713" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a0759d685c2fc8d7b6ff6bb09f32d0399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const double &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const double &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>predicate operator != </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="728" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="728" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>predicate operator == </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="743" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="743" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a4763b2a3bcaa6e644b5b4cc602b8b644" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const rcsc::AngleDeg &amp;lhs, const double &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>predicate operator == </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="758" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="758" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a8cfe18200a2d11172cbc6a7c22e7f878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const double &amp;lhs, const rcsc::AngleDeg &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const double &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>predicate operator == </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>left hand side argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right hand side argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="773" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="773" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const rcsc::AngleDeg &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>output to ostream </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>angle object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="788" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="789" bodyend="793"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>degree wrapper class Header File. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-c++-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*Copyright:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>Hidehisa<sp/>Akiyama</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>This<sp/>code<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*EndCopyright:</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RCSC_GEOM_ANGLEDEG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RCSC_GEOM_ANGLEDEG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rcsc<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classrcsc_1_1_angle_deg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>:<sp/>public<sp/>boost::addable&lt;<sp/>AngleDeg<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::addable2&lt;<sp/>AngleDeg,<sp/>double<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::addable2_left&lt;<sp/>double,<sp/><sp/>AngleDeg<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::subtractable&lt;<sp/>AngleDeg<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::subtractable2&lt;<sp/>AngleDeg,<sp/>double<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::subtractable2_left&lt;<sp/>double,<sp/>AngleDeg<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::multipliable2&lt;<sp/>AngleDeg,<sp/>double<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>public<sp/>boost::dividable2&lt;<sp/>AngleDeg,<sp/>double<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M_degree;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">EPSILON</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classrcsc_1_1_angle_deg_1a7faf54c0f138b67e3e44df23036c504b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a7faf54c0f138b67e3e44df23036c504b" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="65" refid="classrcsc_1_1_angle_deg_1ab38f16c64201c06fd9ee104ff9f7d858" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ab38f16c64201c06fd9ee104ff9f7d858" kindref="member">TWO_PI</ref>;</highlight></codeline>
<codeline lineno="67" refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" kindref="member">DEG2RAD</ref>;</highlight></codeline>
<codeline lineno="69" refid="classrcsc_1_1_angle_deg_1abed2fa0e29521eac96ad36ba3b5bb331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1abed2fa0e29521eac96ad36ba3b5bb331" kindref="member">RAD2DEG</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>M_degree(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="82" refid="classrcsc_1_1_angle_deg_1a6acec5b65918e1ae183f548ddbf90651" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1a6acec5b65918e1ae183f548ddbf90651" kindref="member">AngleDeg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>M_degree(<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classrcsc_1_1_angle_deg_1a9b1fbb335e6d910a584f4efbc8fa5823" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1a9b1fbb335e6d910a584f4efbc8fa5823" kindref="member">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>=<sp/>deg;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>normalize()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>M_degree<sp/>&lt;<sp/>-360.0<sp/>||<sp/>360.0<sp/>&lt;<sp/>M_degree<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>=<sp/>std::fmod(<sp/>M_degree,<sp/>360.0<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>M_degree<sp/>&lt;<sp/>-180.0<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>+=<sp/>360.0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>M_degree<sp/>&gt;<sp/>180.0<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>-=<sp/>360.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M_degree;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classrcsc_1_1_angle_deg_1ade2a121d5170ef456c1fbd2f54094383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ade2a121d5170ef456c1fbd2f54094383" kindref="member">abs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150" refid="classrcsc_1_1_angle_deg_1a1c5f8ecf0f327a23b71ffb68e8be49f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a1c5f8ecf0f327a23b71ffb68e8be49f3" kindref="member">radian</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="151"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>*<sp/><ref refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" kindref="member">DEG2RAD</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>double()<sp/>const</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>degree();</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classrcsc_1_1_angle_deg_1aa21532a813eac53b4968f45e9353fef2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/><ref refid="classrcsc_1_1_angle_deg_1aa21532a813eac53b4968f45e9353fef2" kindref="member">operator-</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref>(<sp/>-<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classrcsc_1_1_angle_deg_1a5d58f795a74bf1b59ff84c6bebf5b7cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1a5d58f795a74bf1b59ff84c6bebf5b7cd" kindref="member">operator+=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/>angle<sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>+=<sp/>angle.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classrcsc_1_1_angle_deg_1a64c6fffdc1f17ee0d8fd36f9947edfbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1a64c6fffdc1f17ee0d8fd36f9947edfbb" kindref="member">operator+=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>+=<sp/>deg;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classrcsc_1_1_angle_deg_1a86382ec87084051443d31e331dfaa89a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1a86382ec87084051443d31e331dfaa89a" kindref="member">operator-=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/>angle<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>-=<sp/>angle.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classrcsc_1_1_angle_deg_1ae8b75de687d0a9555946dc655880cbf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1ae8b75de687d0a9555946dc655880cbf0" kindref="member">operator-=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>-=<sp/>deg;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classrcsc_1_1_angle_deg_1a7d1152ed7ab93ed6fef82bd6d8b6ed87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1a7d1152ed7ab93ed6fef82bd6d8b6ed87" kindref="member">operator*=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>scalar<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classrcsc_1_1_angle_deg_1ada84fb1605e6868beddf26ad96bbb216" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1ada84fb1605e6868beddf26ad96bbb216" kindref="member">operator/=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>scalar<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::fabs(<sp/>scalar<sp/>)<sp/>&lt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">EPSILON</ref><sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_degree<sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalize();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classrcsc_1_1_angle_deg_1ae4b27ba472d04c68e66590a3157e1ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ae4b27ba472d04c68e66590a3157e1ca9" kindref="member">isLeftOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/>angle<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="254"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>(*this<sp/>-<sp/>angle).degree()<sp/>&lt;<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>angle.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>this-&gt;<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>0.0<sp/>&lt;<sp/>diff<sp/>&amp;&amp;<sp/>diff<sp/>&lt;<sp/>180.0<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>diff<sp/>&lt;<sp/>-180.0<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classrcsc_1_1_angle_deg_1a276a0f172a609711d1ecb1814ce1c14c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a276a0f172a609711d1ecb1814ce1c14c" kindref="member">isLeftEqualOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/>angle<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="266"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>(*this<sp/>-<sp/>angle).degree()<sp/>&lt;=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>angle.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>this-&gt;<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>0.0<sp/>&lt;=<sp/>diff<sp/>&amp;&amp;<sp/>diff<sp/>&lt;<sp/>180.0<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>diff<sp/>&lt;<sp/>-180.0<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classrcsc_1_1_angle_deg_1a76145d091b6a7889dad1c49af51b4cac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a76145d091b6a7889dad1c49af51b4cac" kindref="member">isRightOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/>angle<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="278"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>(*this<sp/>-<sp/>angle).degree()<sp/>&gt;<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>this-&gt;<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>angle.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>0.0<sp/>&lt;<sp/>diff<sp/>&amp;&amp;<sp/>diff<sp/>&lt;<sp/>180.0<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>diff<sp/>&lt;<sp/>-180.0<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classrcsc_1_1_angle_deg_1ab88ab3cb3407661d356ec25cb04be390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ab88ab3cb3407661d356ec25cb04be390" kindref="member">isRightEqualOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac0fe04cd5fdd5a51a567ee3195e76a2f" kindref="member">AngleDeg</ref><sp/>&amp;<sp/>angle<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="290"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>(*this<sp/>-<sp/>angle).degree()<sp/>&gt;=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>this-&gt;<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>angle.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>0.0<sp/>&lt;=<sp/>diff<sp/>&amp;&amp;<sp/>diff<sp/>&lt;<sp/>180.0<sp/>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>diff<sp/>&lt;<sp/>-180.0<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classrcsc_1_1_angle_deg_1a420766fcd9c822487a84c5e9f5a4b2ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a420766fcd9c822487a84c5e9f5a4b2ec" kindref="member">cos</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="302"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cos(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>*<sp/><ref refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" kindref="member">DEG2RAD</ref><sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classrcsc_1_1_angle_deg_1ade2598d25b98ea1e7e7b84d774d5d4af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ade2598d25b98ea1e7e7b84d774d5d4af" kindref="member">sin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="311"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sin(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>*<sp/><ref refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" kindref="member">DEG2RAD</ref><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classrcsc_1_1_angle_deg_1a0ebf74706bb163d70703f5f8e21d18ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a0ebf74706bb163d70703f5f8e21d18ab" kindref="member">tan</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tan(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>*<sp/><ref refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" kindref="member">DEG2RAD</ref><sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ae8d2a289c5241b12b7575d5aaf9e22be" kindref="member">isWithin</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>right<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ae11973230dd44da1ab33aa6464d67656" kindref="member">sinMinMax</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>angle_err,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>minsin,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>maxsin<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ac77bf37ae142bbc3bf7575c0de9b4576" kindref="member">cosMinMax</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>angle_err,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>mincos,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>maxcos<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>utility<sp/>method<sp/>concerned<sp/>with<sp/>angle<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="classrcsc_1_1_angle_deg_1a9b95d3816a52bec51cba5de0bc5dbbf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a9b95d3816a52bec51cba5de0bc5dbbf4" kindref="member">normalize_angle</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dir<sp/>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>&lt;<sp/>-360.0<sp/>||<sp/>360.0<sp/>&lt;<sp/>dir<sp/>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>std::fmod(<sp/>dir,<sp/>360.0<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>&lt;<sp/>-180.0<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>+=<sp/>360.0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>&gt;<sp/>180.0<sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>-=<sp/>360.0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classrcsc_1_1_angle_deg_1a50cf52917a599a30812f6bd7e809ad56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a50cf52917a599a30812f6bd7e809ad56" kindref="member">rad2deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rad<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rad<sp/>*<sp/><ref refid="classrcsc_1_1_angle_deg_1abed2fa0e29521eac96ad36ba3b5bb331" kindref="member">RAD2DEG</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classrcsc_1_1_angle_deg_1a2e7b10ee79ddc18c11424067165ac462" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a2e7b10ee79ddc18c11424067165ac462" kindref="member">deg2rad</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deg<sp/>*<sp/><ref refid="classrcsc_1_1_angle_deg_1a9ef1030928deba0502e075b7ecb97646" kindref="member">DEG2RAD</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classrcsc_1_1_angle_deg_1a00461994a2f69b0184685e7b5d17b3c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a00461994a2f69b0184685e7b5d17b3c9" kindref="member">cos_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cos(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2e7b10ee79ddc18c11424067165ac462" kindref="member">deg2rad</ref>(<sp/>deg<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classrcsc_1_1_angle_deg_1a65333b50ba5419110500d997aec2e24d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a65333b50ba5419110500d997aec2e24d" kindref="member">sin_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sin(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2e7b10ee79ddc18c11424067165ac462" kindref="member">deg2rad</ref>(<sp/>deg<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classrcsc_1_1_angle_deg_1ad2215f18a2238dd44c30562263ecd80f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1ad2215f18a2238dd44c30562263ecd80f" kindref="member">tan_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tan(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2e7b10ee79ddc18c11424067165ac462" kindref="member">deg2rad</ref>(<sp/>deg<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="classrcsc_1_1_angle_deg_1af86015fd28c1f0ed2014c45e48ea8a2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1af86015fd28c1f0ed2014c45e48ea8a2b" kindref="member">acos_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>cosine<sp/>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>cosine<sp/>&gt;=<sp/>1.0</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(<sp/>cosine<sp/>&lt;=<sp/>-1.0</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>180.0</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrcsc_1_1_angle_deg_1a50cf52917a599a30812f6bd7e809ad56" kindref="member">rad2deg</ref>(<sp/>std::acos(<sp/>cosine<sp/>)<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classrcsc_1_1_angle_deg_1aac65c276bcb77b6c8b0171ecb0e36327" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1aac65c276bcb77b6c8b0171ecb0e36327" kindref="member">asin_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>sine<sp/>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>sine<sp/>&gt;=<sp/>1.0</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>90.0</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(<sp/>sine<sp/>&lt;=<sp/>-1.0</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-90.0</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrcsc_1_1_angle_deg_1a50cf52917a599a30812f6bd7e809ad56" kindref="member">rad2deg</ref>(<sp/>std::asin(<sp/>sine<sp/>)<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="classrcsc_1_1_angle_deg_1a4a3f8708dc159df949e3468ffa9a7aad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a4a3f8708dc159df949e3468ffa9a7aad" kindref="member">atan_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>tangent<sp/>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a50cf52917a599a30812f6bd7e809ad56" kindref="member">rad2deg</ref>(<sp/>std::atan(<sp/>tangent<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="classrcsc_1_1_angle_deg_1a8ca871ed02458c85638b9a6f594d4e6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg_1a8ca871ed02458c85638b9a6f594d4e6b" kindref="member">atan2_deg</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>y,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>x<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrcsc_1_1_angle_deg_1a50cf52917a599a30812f6bd7e809ad56" kindref="member">rad2deg</ref>(<sp/>std::atan2(<sp/>y,<sp/>x<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/><ref refid="classrcsc_1_1_angle_deg_1ace1993737f1792f67323e78fd150db0c" kindref="member">bisect</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>right<sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="classrcsc_1_1_angle_deg_1ab952552052df55585da22402c5e916b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1ab952552052df55585da22402c5e916b8" kindref="member">print</ref>(<sp/>std::ostream<sp/>&amp;<sp/>os<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="523"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="classrcsc_1_1_angle_deg_1ac64e1b01f390845b5ac6dc54daf8358f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="classrcsc_1_1_angle_deg_1ac64e1b01f390845b5ac6dc54daf8358f" kindref="member">printRound</ref>(<sp/>std::ostream<sp/>&amp;<sp/>os,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>step<sp/>=<sp/>0.1<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="535"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>rint(<sp/><ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>/<sp/>step<sp/>)<sp/>*<sp/>step;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="classrcsc_1_1_angle_deg_1_1_degree_cmp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg_1_1_degree_cmp" kindref="compound">DegreeCmp</ref></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::binary_function&lt;<sp/>AngleDeg,<sp/>AngleDeg,<sp/>bool<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="548" refid="classrcsc_1_1_angle_deg_1_1_degree_cmp_1ab2eeca2c1b0b93a072eff4be08cb3591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_type<sp/><ref refid="classrcsc_1_1_angle_deg_1_1_degree_cmp_1ab2eeca2c1b0b93a072eff4be08cb3591" kindref="member">operator()</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first_argument_type<sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>second_argument_type<sp/>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="550"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.degree()<sp/>&lt;<sp/>rhs.degree();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal">};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="classrcsc_1_1_angle_is_within" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrcsc_1_1_angle_is_within_1a20ef388fc06831c6cf307933250f002f" kindref="member">AngleIsWithin</ref></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::unary_function&lt;<sp/>AngleDeg,<sp/>bool<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>M_left;<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>M_right;<sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="570" refid="classrcsc_1_1_angle_is_within_1a20ef388fc06831c6cf307933250f002f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcsc_1_1_angle_is_within_1a20ef388fc06831c6cf307933250f002f" kindref="member">AngleIsWithin</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref><sp/>&amp;<sp/>right<sp/>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>M_left(<sp/>left<sp/>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>M_right(<sp/>right<sp/>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classrcsc_1_1_angle_is_within_1aaf550205d935852dbfe80399cb724b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>result_type<sp/><ref refid="classrcsc_1_1_angle_is_within_1aaf550205d935852dbfe80399cb724b8a" kindref="member">operator()</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>argument_type<sp/>&amp;<sp/>angle<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="578"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>angle.isWithin(<sp/>M_left,<sp/>M_right<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arith<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></highlight></codeline>
<codeline lineno="600" refid="angle__deg_8h_1a7465708eaca221e3074bf5cb74e4a30b" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a7465708eaca221e3074bf5cb74e4a30b" kindref="member">operator+</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref>(<sp/>lhs<sp/>)<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></highlight></codeline>
<codeline lineno="616" refid="angle__deg_8h_1a86e3abaac7c3e0712b5ebbf293330d26" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a7465708eaca221e3074bf5cb74e4a30b" kindref="member">operator+</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref>(<sp/>lhs<sp/>)<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></highlight></codeline>
<codeline lineno="632" refid="angle__deg_8h_1a514d18b92d60b26ba4edef6efc168f15" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a7465708eaca221e3074bf5cb74e4a30b" kindref="member">operator+</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref>(<sp/>rhs<sp/>)<sp/>+=<sp/>lhs;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></highlight></codeline>
<codeline lineno="648" refid="angle__deg_8h_1a88471acd2a1a8a01b2dcb122d5677823" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a88471acd2a1a8a01b2dcb122d5677823" kindref="member">operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref>(<sp/>lhs<sp/>)<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></highlight></codeline>
<codeline lineno="664" refid="angle__deg_8h_1acef9ea3b2bae707930b15541ad6b26d4" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a88471acd2a1a8a01b2dcb122d5677823" kindref="member">operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref>(<sp/>lhs<sp/>)<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref></highlight></codeline>
<codeline lineno="680" refid="angle__deg_8h_1a835522b3402ce8417cc0285c598d04c0" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a88471acd2a1a8a01b2dcb122d5677823" kindref="member">operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref>(<sp/>lhs<sp/>)<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//<sp/>predicate<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>lhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>rhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>)<sp/>&gt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">rcsc::AngleDeg::EPSILON</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="angle__deg_8h_1a96a5492c80b475408b837e6917d7bbf5" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>lhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>rhs<sp/>)<sp/>&gt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">rcsc::AngleDeg::EPSILON</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="angle__deg_8h_1a0759d685c2fc8d7b6ff6bb09f32d0399" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a78dddd13b4850017c010a0f3cc9072d0" kindref="member">operator!=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>lhs<sp/>-<sp/>rhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>)<sp/>&gt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">rcsc::AngleDeg::EPSILON</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>lhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>rhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>)<sp/>&lt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">rcsc::AngleDeg::EPSILON</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="angle__deg_8h_1a4763b2a3bcaa6e644b5b4cc602b8b644" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>lhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>-<sp/>rhs<sp/>)<sp/>&lt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">rcsc::AngleDeg::EPSILON</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="angle__deg_8h_1a8cfe18200a2d11172cbc6a7c22e7f878" refkind="member"><highlight class="normal"><ref refid="angle__deg_8h_1a0372bd03f08459f586af95c92aae375d" kindref="member">operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>lhs<sp/>-<sp/>rhs.<ref refid="classrcsc_1_1_angle_deg_1a2d565b488e01f61f5ddc99a90caa9bab" kindref="member">degree</ref>()<sp/>)<sp/>&lt;<sp/><ref refid="classrcsc_1_1_angle_deg_1aca58254a104e4800a8449a13629bfcd3" kindref="member">rcsc::AngleDeg::EPSILON</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><ref refid="angle__deg_8h_1a092587cf0c5fbf6129af3f4ee33e5b5c" kindref="member">operator&lt;&lt;</ref>(<sp/>std::ostream<sp/>&amp;<sp/>os,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcsc_1_1_angle_deg" kindref="compound">rcsc::AngleDeg</ref><sp/>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classrcsc_1_1_angle_deg_1ab952552052df55585da22402c5e916b8" kindref="member">print</ref>(<sp/>os<sp/>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ui/geom/angle_deg.h"/>
  </compounddef>
</doxygen>
