<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classrcsc_1_1_angle_is_within" kind="class" language="C++" prot="public">
    <compoundname>rcsc::AngleIsWithin</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::unary_function&lt; AngleDeg, bool &gt;</basecompoundref>
    <includes refid="angle__deg_8h" local="no">angle_deg.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcsc_1_1_angle_is_within_1a915c73d806f51c1f5a932d1c1d59c88f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref></type>
        <definition>const AngleDeg rcsc::AngleIsWithin::M_left</definition>
        <argsstring></argsstring>
        <name>M_left</name>
        <qualifiedname>rcsc::AngleIsWithin::M_left</qualifiedname>
        <briefdescription>
<para>left threshold </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="566" column="20" bodyfile="ui/geom/angle_deg.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcsc_1_1_angle_is_within_1a123e4eb6fa56fb8b231617285abef681" prot="private" static="no" mutable="no">
        <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref></type>
        <definition>const AngleDeg rcsc::AngleIsWithin::M_right</definition>
        <argsstring></argsstring>
        <name>M_right</name>
        <qualifiedname>rcsc::AngleIsWithin::M_right</qualifiedname>
        <briefdescription>
<para>right threshold </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="567" column="20" bodyfile="ui/geom/angle_deg.h" bodystart="567" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcsc_1_1_angle_is_within_1a20ef388fc06831c6cf307933250f002f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rcsc::AngleIsWithin::AngleIsWithin</definition>
        <argsstring>(const AngleDeg &amp;left, const AngleDeg &amp;right)</argsstring>
        <name>AngleIsWithin</name>
        <qualifiedname>rcsc::AngleIsWithin::AngleIsWithin</qualifiedname>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classrcsc_1_1_angle_deg" kindref="compound">AngleDeg</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="570" column="5" bodyfile="ui/geom/angle_deg.h" bodystart="570" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classrcsc_1_1_angle_is_within_1aaf550205d935852dbfe80399cb724b8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type rcsc::AngleIsWithin::operator()</definition>
        <argsstring>(const argument_type &amp;angle) const</argsstring>
        <name>operator()</name>
        <qualifiedname>rcsc::AngleIsWithin::operator()</qualifiedname>
        <param>
          <type>const argument_type &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>operator method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ui/geom/angle_deg.h" line="577" column="17" bodyfile="ui/geom/angle_deg.h" bodystart="577" bodyend="580"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>predicate function object. </para>
    </briefdescription>
    <detaileddescription>
<para>this checks if input angle is within specific range. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rcsc::AngleIsWithin</label>
        <link refid="classrcsc_1_1_angle_is_within"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::unary_function&lt; AngleDeg, bool &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rcsc::AngleIsWithin</label>
        <link refid="classrcsc_1_1_angle_is_within"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::unary_function&lt; AngleDeg, bool &gt;</label>
      </node>
    </collaborationgraph>
    <location file="ui/geom/angle_deg.h" line="564" column="1" bodyfile="ui/geom/angle_deg.h" bodystart="565" bodyend="581"/>
    <listofallmembers>
      <member refid="classrcsc_1_1_angle_is_within_1a20ef388fc06831c6cf307933250f002f" prot="public" virt="non-virtual"><scope>rcsc::AngleIsWithin</scope><name>AngleIsWithin</name></member>
      <member refid="classrcsc_1_1_angle_is_within_1a915c73d806f51c1f5a932d1c1d59c88f" prot="private" virt="non-virtual"><scope>rcsc::AngleIsWithin</scope><name>M_left</name></member>
      <member refid="classrcsc_1_1_angle_is_within_1a123e4eb6fa56fb8b231617285abef681" prot="private" virt="non-virtual"><scope>rcsc::AngleIsWithin</scope><name>M_right</name></member>
      <member refid="classrcsc_1_1_angle_is_within_1aaf550205d935852dbfe80399cb724b8a" prot="public" virt="non-virtual"><scope>rcsc::AngleIsWithin</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
