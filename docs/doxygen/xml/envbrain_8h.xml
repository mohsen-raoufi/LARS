<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="envbrain_8h" kind="file" language="C++">
    <compoundname>envbrain.h</compoundname>
    <includes local="no">QObject</includes>
    <includes local="no">QtCore</includes>
    <includes local="no">QTimer</includes>
    <includes local="no">opencv2/opencv.hpp</includes>
    <includes local="no">opencv2/cudaarithm.hpp</includes>
    <includes refid="worldmodel_8h" local="yes">ui/worldmodel.h</includes>
    <includedby refid="envbrain_8cpp" local="yes">envbrain.cpp</includedby>
    <includedby refid="mainwindow_8h" local="yes">mainwindow.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>envbrain.h</label>
        <link refid="envbrain_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ui/worldmodel.h</label>
        <link refid="worldmodel_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>QColor</label>
      </node>
      <node id="9">
        <label>QDebug</label>
      </node>
      <node id="8">
        <label>QList</label>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="11">
        <label>QPainter</label>
      </node>
      <node id="4">
        <label>QTimer</label>
      </node>
      <node id="3">
        <label>QtCore</label>
      </node>
      <node id="12">
        <label>boost/graph/adjacency_list.hpp</label>
      </node>
      <node id="13">
        <label>boost/graph/graph_traits.hpp</label>
      </node>
      <node id="14">
        <label>boost/graph/graphviz.hpp</label>
      </node>
      <node id="15">
        <label>igraph/igraph.h</label>
      </node>
      <node id="6">
        <label>opencv2/cudaarithm.hpp</label>
      </node>
      <node id="5">
        <label>opencv2/opencv.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>envbrain.cpp</label>
        <link refid="envbrain_8cpp"/>
      </node>
      <node id="1">
        <label>envbrain.h</label>
        <link refid="envbrain_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_env_brain" prot="public">EnvBrain</innerclass>
    <briefdescription>
<para>Declaration of <ref refid="class_env_brain" kindref="compound">EnvBrain</ref>, environment logic module for LARS. </para>
    </briefdescription>
    <detaileddescription>
<para>Provides environment modeling, heatmap management, noise handling, and geometric utilities for the arena. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ENVBRAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENVBRAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/opencv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/cudaarithm.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ui/worldmodel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_env_brain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_env_brain_1a7d800111d2410a56b09a7e6682296e90" kindref="member">EnvBrain</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a7d800111d2410a56b09a7e6682296e90" kindref="member">EnvBrain</ref>(<ref refid="class_world_model" kindref="compound">WorldModel</ref><sp/>*wm<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight><highlight class="comment">//,<sp/>QObject<sp/>*parent);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QPoint&gt;<sp/><ref refid="class_env_brain_1ab2f7fcfa5617d92525e0f1dead43ba49" kindref="member">makeGridPoints</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows=1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols=1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx=10,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy=10,<sp/>QPoint<sp/>origin=QPoint(0,0));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QPoint&gt;<sp/><ref refid="class_env_brain_1a6bda35f9f16d138f4c82c3b9ba8dbc77" kindref="member">makeStarPoints</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nArms=5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLayers=10,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d=10,<sp/>QPoint<sp/>origin=QPoint(0,0));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listInd<sp/>=<sp/>0,<sp/>nList<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trace_rad<sp/>=<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>[px]<sp/>radius<sp/>of<sp/>the<sp/>circles<sp/>as<sp/>the<sp/>radius<sp/>of<sp/>the<sp/>trace<sp/>on<sp/>heatmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_world_model" kindref="compound">WorldModel</ref>*<sp/>_wm;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer<sp/>_timer,<sp/>_timerNoise;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>heatMap,<sp/>heatMapOnFrame,<sp/>circTemp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cv::Mat<sp/>heatMapGray;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cv::cuda::GpuMat<sp/>heatMapGPU;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Noise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage<sp/>arenaImage;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a73a0f2f932651b3f4f6850a4fce53bfb" kindref="member">refresh</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1ad556128c5a4aeef5c114cbfc54ed12ae" kindref="member">addNoise</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a90234e0f769792007ce84557cf70ac4a" kindref="member">resetHeatMap</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a1db4d734dc7e60d5d7dbd56047b20638" kindref="member">updateNoiseProps</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_interval);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a14d5ffaccf919599339db4302085f51b" kindref="member">connect_disconnect_add_noise</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connect_bool);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a367687e98c7370631c8e716170c57592" kindref="member">update_centroid</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_brain_1a6be60ae154270d7f12b57c2999331d9b" kindref="member">update_objects_to_draw</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ENVBRAIN_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="envbrain.h"/>
  </compounddef>
</doxygen>
